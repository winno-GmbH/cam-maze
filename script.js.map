{"version":3,"file":"script.js","mappings":"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","sources":["webpack://cam-3d-animation/external var \"THREE\"","webpack://cam-3d-animation/./src/config.ts","webpack://cam-3d-animation/./src/scene.ts","webpack://cam-3d-animation/./src/camera.ts","webpack://cam-3d-animation/./src/materials.ts","webpack://cam-3d-animation/./src/objects.ts","webpack://cam-3d-animation/./src/paths.ts","webpack://cam-3d-animation/./src/animation-system.ts","webpack://cam-3d-animation/./src/main.ts"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = THREE;","import * as THREE from \"three\";\n\n// Camera Configuration\nexport const CAMERA_CONFIG = {\n  originalFOV: 50,\n  wideFOV: 80,\n  near: 0.001,\n  far: 1000,\n};\n\n// Mobile Detection\nexport const isMobile = window.innerWidth < 768;\n\n// Camera Positions\nexport const CAMERA_POSITIONS = {\n  startMobile: new THREE.Vector3(0.5, 2.5, 2.5),\n  startDesktop: new THREE.Vector3(-2, 2.5, 2),\n  secondMobile: new THREE.Vector3(0.5, 2.5, 2),\n  secondDesktop: new THREE.Vector3(-1.5, 3, 2),\n  mobileLookAt: new THREE.Vector3(0.5, 0.5, -1.5),\n  desktopLookAt: new THREE.Vector3(-1.25, 0.5, 0.25),\n};\n\n// Get correct positions based on device\nexport const startPosition = isMobile\n  ? CAMERA_POSITIONS.startMobile\n  : CAMERA_POSITIONS.startDesktop;\nexport const secondPosition = isMobile\n  ? CAMERA_POSITIONS.secondMobile\n  : CAMERA_POSITIONS.secondDesktop;\nexport const lookAtPosition = isMobile\n  ? CAMERA_POSITIONS.mobileLookAt\n  : CAMERA_POSITIONS.desktopLookAt;\n\n// Maze Center Position for Bezier Curves\nexport const MAZE_CENTER = new THREE.Vector3(0.45175, 0.5, 0.55675);\n\n// Asset URLs\nexport const ASSETS = {\n  mazeTexture: \"https://c-am.b-cdn.net/CAM/matcap24.png\",\n  mazeModel: \"https://c-am.b-cdn.net/CAM/c-am-assets-3.glb\",\n};\n\n// DOM Selectors\nexport const SELECTORS = {\n  mazeContainer: \".el--home-maze.el\",\n  scrollComponent: \".cmp--scroll\",\n  introSection: \".sc--intro\",\n  homeSection: \".sc--home\",\n  povSection: \".sc--pov\",\n  finalSection: \".sc--final.sc\",\n  parentElements: \".cmp--pov.cmp\",\n};\n\n// POV Positions for Ghosts\nexport const POV_POSITIONS = {\n  ghost1: new THREE.Vector3(0.65725, 0.55, 0.75325),\n  ghost2: new THREE.Vector3(0.9085, 0.55, 0.8035),\n  ghost3: new THREE.Vector3(0.75775, 0.55, 1.05475),\n  ghost4: new THREE.Vector3(0.65725, 0.55, 1.0045),\n  ghost5: new THREE.Vector3(0.15475, 0.55, 1.15525),\n};\n\n// Shader Configuration\nexport const SHADER_CONFIG = {\n  vertexShader: `\n    varying vec3 vPosition;\n    void main() {\n      vPosition = position;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n  `,\n  fragmentShader: `\n    varying vec3 vPosition;\n    uniform float mixValue;\n    void main() {\n      float factor = (vPosition.y + 1.0) / 2.0;\n      vec3 colorA = vec3(0.0, 0.0, 1.0);\n      vec3 colorB = vec3(0.0, 1.0, 1.0);\n      vec3 colorC = vec3(1.0, 0.0, 0.0);\n      vec3 colorD = vec3(1.0, 1.0, 0.0);\n      \n      vec3 gradientA = mix(colorA, colorB, factor);\n      vec3 gradientB = mix(colorC, colorD, factor);\n      \n      vec3 finalColor = mix(gradientA, gradientB, mixValue);\n      gl_FragColor = vec4(finalColor, 1.0);\n    }\n  `,\n};\n","import * as THREE from \"three\";\nimport { SELECTORS, isMobile } from \"./config\";\n\n// Scene Setup\nexport const scene = new THREE.Scene();\n\n// Renderer Setup\nexport const renderer = new THREE.WebGLRenderer({\n  antialias: true,\n  alpha: true,\n  powerPreference: \"high-performance\",\n  precision: \"highp\",\n});\n\n// Container\nconst container = document.querySelector(\".el--home-maze.el\") as HTMLElement;\nif (!container) {\n  console.error(\"Container .el--home-maze.el not found!\");\n}\n\n// Clock for animations\nexport const clock = new THREE.Clock();\n\n// Anti-aliasing Enhancement\nfunction enhanceAntiAliasing(): void {\n  if (isMobile) {\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n  } else {\n    renderer.setPixelRatio(window.devicePixelRatio);\n  }\n  renderer.shadowMap.enabled = true;\n  renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n}\n\n// Pixel Ratio Setup - ADDED to match backup.js\nfunction setPixelRatio(): void {\n  const pixelRatio = Math.min(window.devicePixelRatio, isMobile ? 2 : 3);\n  renderer.setPixelRatio(pixelRatio);\n  renderer.setSize(container.clientWidth, container.clientHeight);\n}\n\n// Initialize Renderer - FIXED to match backup.js\nexport function initRenderer(): void {\n  enhanceAntiAliasing();\n\n  renderer.shadowMap.enabled = true;\n  renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n  if (container) {\n    renderer.setSize(container.clientWidth, container.clientHeight);\n    container.appendChild(renderer.domElement);\n  } else {\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n  }\n\n  // ADD these event listeners to match backup.js:\n  window.addEventListener(\"load\", setPixelRatio);\n  window.addEventListener(\"resize\", setPixelRatio);\n}\n\n// Lighting Setup\nexport function setupLighting(): void {\n  const ambientLight = new THREE.AmbientLight(0xffffff);\n  scene.add(ambientLight);\n\n  const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n  scene.add(directionalLight);\n  directionalLight.position.set(-5, 15, 10);\n  directionalLight.shadow.mapSize.width = 4096;\n  directionalLight.shadow.mapSize.height = 4096;\n  directionalLight.shadow.camera.left = -20;\n  directionalLight.shadow.camera.right = 20;\n  directionalLight.shadow.camera.top = 20;\n  directionalLight.shadow.camera.bottom = -20;\n  directionalLight.shadow.camera.near = 0.1;\n  directionalLight.shadow.camera.far = 50;\n  directionalLight.shadow.bias = -0.001;\n  directionalLight.shadow.radius = 3;\n  directionalLight.castShadow = true;\n}\n\n// Canvas and DOM Elements\nexport const canvas = document.querySelector(\"canvas\") as HTMLCanvasElement;\nexport const finalSection = document.querySelector(\n  SELECTORS.finalSection\n) as HTMLElement;\nexport const finalContainer = finalSection?.querySelector(\n  \".cr--final.cr\"\n) as HTMLElement;\nexport const parentElements = document.querySelectorAll(\n  SELECTORS.parentElements\n) as NodeListOf<Element>;\n","import * as THREE from \"three\";\nimport {\n  CAMERA_CONFIG,\n  startPosition,\n  secondPosition,\n  lookAtPosition,\n} from \"./config\";\n\n// Camera Setup\nexport const camera = new THREE.PerspectiveCamera(\n  CAMERA_CONFIG.originalFOV,\n  window.innerWidth / window.innerHeight,\n  CAMERA_CONFIG.near,\n  CAMERA_CONFIG.far\n);\n\n// Initialize Camera\nexport function initCamera(): void {\n  camera.position.copy(startPosition);\n  camera.lookAt(lookAtPosition);\n}\n\n// Camera Quaternions\nexport const startQuaternion = camera.quaternion.clone();\nexport const endQuaternion = new THREE.Quaternion().setFromEuler(\n  new THREE.Euler(-1.5708, 0, 0)\n);\n\n// Camera Utility Functions\nexport function getCameraLookAtPoint(): THREE.Vector3 {\n  const direction = new THREE.Vector3(0, 0, -1);\n  direction.applyQuaternion(camera.quaternion);\n  const lookAtPoint = new THREE.Vector3();\n  lookAtPoint.copy(camera.position).add(direction.multiplyScalar(10));\n  return lookAtPoint;\n}\n\n// Global camera setter for debugging\n(window as any).setCamera = function (lookAt: string | THREE.Vector3): void {\n  if (typeof lookAt === \"string\") {\n    const [x, y, z] = lookAt.split(\",\").map(Number);\n    lookAt = new THREE.Vector3(x, y, z);\n  }\n  camera.lookAt(lookAt);\n  camera.updateProjectionMatrix();\n  camera.updateMatrix();\n  camera.updateMatrixWorld();\n};\n\n// Setup Camera Resize\nexport function setupCameraResize(): void {\n  const updateCamera = () => {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n  };\n\n  window.addEventListener(\"resize\", updateCamera);\n}\n","import * as THREE from \"three\";\nimport { ASSETS } from \"./config\";\n\n// Texture Loader\nconst textureLoader = new THREE.TextureLoader();\n\n// Load maze texture like in backup.js\nexport const mazeTexture = textureLoader.load(ASSETS.mazeTexture);\n\n// Materials exactly like backup.js\nexport const mazeMaterial = new THREE.MeshMatcapMaterial({\n  matcap: mazeTexture,\n});\n\nexport const topMaterial = new THREE.MeshStandardMaterial({\n  color: 0xf2f9f9,\n  metalness: 0.4,\n  roughness: 0,\n  envMapIntensity: 10,\n});\n\nexport const ghostMaterial = new THREE.MeshPhysicalMaterial({\n  color: 0xffffff,\n  opacity: 1,\n  transparent: true,\n  depthWrite: false,\n  depthTest: true,\n  blending: THREE.NormalBlending,\n  side: THREE.DoubleSide,\n  roughness: 0.75,\n  metalness: 0.2,\n  transmission: 0.5,\n});\n\nexport const floorMaterial = new THREE.MeshStandardMaterial({\n  color: 0xffffff,\n  opacity: 0.8,\n  transparent: true,\n  roughness: 0.5,\n  metalness: 0.1,\n});\n\n// Pacman materials with transparency for opacity changes\nconst pacmanMaterials = {\n  blue: new THREE.MeshBasicMaterial({\n    color: 0x1469d3,\n    transparent: true,\n    opacity: 1,\n  }),\n  white: new THREE.MeshBasicMaterial({\n    color: 0xffffff,\n    transparent: true,\n    opacity: 1,\n  }),\n  default: new THREE.MeshBasicMaterial({\n    color: 0x1469d3,\n    transparent: true,\n    opacity: 1,\n  }),\n};\n\nexport const materialMap = {\n  CAM_Pacman_Backframe: pacmanMaterials.blue,\n  \"CAM-Pacman_Bitcoin_1\": pacmanMaterials.white,\n  \"CAM-Pacman_Bitcoin_2\": pacmanMaterials.white,\n  \"CAM-Pacman_Bottom\": pacmanMaterials.blue,\n  \"CAM-Pacman_Top\": pacmanMaterials.blue,\n  \"CAM-Pacman_Eye\": pacmanMaterials.white,\n  CAM_Pacman_Logo_1: pacmanMaterials.white,\n  CAM_Pacman_Logo_2: pacmanMaterials.white,\n  \"CAM-Pacman_Shell_Boolean\": pacmanMaterials.blue,\n  \"CAM-Pacman_Shell\": pacmanMaterials.blue,\n  \"CAM-Pacman_Bottom_electronic\": pacmanMaterials.white,\n  \"CAM-Pacman_Top_electronic\": pacmanMaterials.white,\n  \"CAM-Pacman_Bottom_Text\": pacmanMaterials.white,\n  \"CAM-Pacman_Top_Text\": pacmanMaterials.white,\n  default: pacmanMaterials.blue,\n};\n\n// Ghost Cover Materials\nexport const ghostCoverMaterials = Array(5).fill(ghostMaterial);\n","import * as THREE from \"three\";\nimport { ASSETS } from \"./config\";\nimport { GhostContainer } from \"./types\";\nimport { scene, clock } from \"./scene\";\nimport {\n  mazeMaterial,\n  topMaterial,\n  ghostMaterial,\n  floorMaterial,\n  materialMap,\n} from \"./materials\";\n\n// Export clock for animation system\nexport { clock };\n\n// GLB Loader - use directly like in backup.js\nconst loader = new THREE.GLTFLoader();\n\n// Animation Mixer\nexport let pacmanMixer: THREE.AnimationMixer;\n\n// Pacman Group\nexport const pacman = new THREE.Group();\nscene.add(pacman);\n\n// Ghost Objects\nexport const ghosts: GhostContainer = {\n  pacman: pacman,\n  ghost1: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost2: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost3: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost4: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost5: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n};\n\n// Ghost containers mapping (like in backup.js)\nconst ghostContainers = {\n  Ghost_EUR: ghosts.ghost1,\n  Ghost_CHF: ghosts.ghost2,\n  Ghost_YEN: ghosts.ghost3,\n  Ghost_USD: ghosts.ghost4,\n  Ghost_GBP: ghosts.ghost5,\n};\n\n// Add ghosts to scene\nObject.values(ghosts).forEach((ghost) => scene.add(ghost));\n\n// Model Loading Function\nexport async function loadModel(): Promise<void> {\n  return new Promise((resolve, reject) => {\n    loader.load(\n      ASSETS.mazeModel,\n      function (gltf) {\n        const model = gltf.scene;\n\n        model.traverse((child: THREE.Object3D) => {\n          if (child.name === \"CAM-Pacman\") {\n            const children: THREE.Object3D[] = [];\n            child.traverse((subChild: THREE.Object3D) => {\n              if (\n                (subChild as any).isMesh &&\n                subChild.name !== \"CAM-Pacman_Shell\" &&\n                subChild.name !== \"CAM-Pacman_Shell_Boolean\"\n              ) {\n                const material =\n                  materialMap[subChild.name as keyof typeof materialMap] ||\n                  materialMap.default;\n                (subChild as THREE.Mesh).material = material;\n                children.push(subChild);\n              } else if (\n                subChild.name === \"CAM-Pacman_Shell\" ||\n                subChild.name === \"CAM-Pacman_Shell_Boolean\"\n              ) {\n                subChild.visible = false;\n              }\n            });\n\n            children.forEach((item) => ghosts.pacman.add(item));\n            ghosts.pacman.scale.set(0.05, 0.05, 0.05);\n            ghosts.pacman.rotation.set(Math.PI / 2, Math.PI / 2, Math.PI / 4);\n\n            // Setup Pacman mixer\n            pacmanMixer = new THREE.AnimationMixer(ghosts.pacman);\n            const pacmanActions: { [key: string]: THREE.AnimationAction } = {};\n\n            gltf.animations.forEach((clip: THREE.AnimationClip) => {\n              const action = pacmanMixer.clipAction(clip);\n              pacmanActions[clip.name] = action;\n              action.setEffectiveWeight(1);\n              action.play();\n            });\n          } else if (\n            child.name &&\n            ghostContainers[child.name as keyof typeof ghostContainers]\n          ) {\n            const ghostContainer =\n              ghostContainers[child.name as keyof typeof ghostContainers];\n            const ghostGroup = new THREE.Group();\n\n            child.rotation.z = Math.PI;\n            child.rotation.x = Math.PI / 2;\n            child.scale.set(0.75, 0.75, 0.75);\n\n            const children: THREE.Object3D[] = [];\n            child.traverse((subChild: THREE.Object3D) => {\n              if ((subChild as any).isMesh) {\n                if (subChild.name && subChild.name.startsWith(\"Ghost_Mesh\")) {\n                  (subChild as THREE.Mesh).material = ghostMaterial;\n                } else if (\n                  subChild.name &&\n                  [\"EUR\", \"CHF\", \"YEN\", \"USD\", \"GBP\"].includes(subChild.name)\n                ) {\n                  subChild.visible = false;\n                }\n                children.push(subChild);\n              }\n            });\n\n            children.forEach((item) => {\n              if (\n                item.name &&\n                (item.name.includes(\"EUR\") ||\n                  item.name.startsWith(\"Ghost_Mesh\"))\n              ) {\n                item.rotation.z = Math.PI;\n                item.rotation.x = Math.PI / 2;\n              } else {\n                item.rotation.set(0, 0, 0);\n              }\n              ghostGroup.add(item);\n            });\n\n            ghostContainer.add(ghostGroup);\n          }\n\n          if ((child as any).isMesh) {\n            if (child.name === \"CAM-Arena_LowRes_Top\") {\n              (child as THREE.Mesh).material = topMaterial;\n              child.castShadow = true;\n            } else if (child.name === \"CAM-Arena_LowRes_Bottom\") {\n              (child as THREE.Mesh).material = mazeMaterial;\n              child.castShadow = true;\n            } else if (child.name === \"CAM-Floor\") {\n              const clonedChild = child.clone();\n              child.position.y = -0.1;\n              child.position.x = 0;\n              child.position.z = 0;\n              (child as THREE.Mesh).material = new THREE.MeshBasicMaterial({\n                color: 0xffffff,\n                opacity: 1,\n                transparent: false,\n                depthWrite: true,\n                depthTest: true,\n                side: THREE.FrontSide,\n              });\n              child.receiveShadow = false;\n              child.castShadow = true;\n              child.scale.set(0.5, 0.5, 0.5);\n\n              (clonedChild as THREE.Mesh).material = floorMaterial;\n              clonedChild.position.y = -0.5;\n              clonedChild.receiveShadow = true;\n              scene.add(clonedChild);\n            }\n          }\n        });\n\n        // Add shadows to all meshes\n        model.traverse(function (node: THREE.Object3D) {\n          if ((node as any).isMesh) {\n            node.castShadow = true;\n            node.receiveShadow = true;\n          }\n        });\n\n        // Add model to scene and position it like in backup.js\n        scene.add(model);\n        model.position.set(0.5, 0.5, 0.5);\n\n        resolve();\n      },\n      function (progress) {},\n      function (error) {\n        reject(error);\n      }\n    );\n  });\n}\n","import * as THREE from \"three\";\nimport { PathPoint, PathData, PathMapping } from \"./types\";\nimport { CAMERA_POSITIONS, isMobile } from \"./config\";\n\n// Path Creation Utility\nexport function createPath(\n  pathPoints: PathPoint[]\n): THREE.CurvePath<THREE.Vector3> {\n  const path = new THREE.CurvePath<THREE.Vector3>();\n\n  for (let i = 0; i < pathPoints.length - 1; i++) {\n    const current = pathPoints[i];\n    const next = pathPoints[i + 1];\n\n    if (current.type === \"straight\") {\n      const line = new THREE.LineCurve3(current.pos, next.pos);\n      path.add(line);\n    } else if (current.type === \"curve\") {\n      let midPoint: THREE.Vector3;\n      if (current.curveType === \"upperArc\") {\n        midPoint = new THREE.Vector3(current.pos.x, current.pos.y, next.pos.z);\n      } else if (current.curveType === \"lowerArc\") {\n        midPoint = new THREE.Vector3(next.pos.x, current.pos.y, current.pos.z);\n      } else if (current.curveType === \"forwardDownArc\") {\n        midPoint = new THREE.Vector3(current.pos.x, next.pos.y, current.pos.z);\n      } else {\n        midPoint = new THREE.Vector3(current.pos.x, current.pos.y, next.pos.z);\n      }\n      const curve = new THREE.QuadraticBezierCurve3(\n        current.pos,\n        midPoint,\n        next.pos\n      );\n      path.add(curve);\n    }\n  }\n  return path;\n}\n\n// Path Points Definitions (shortened as requested)\nconst pacmanHomePathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.6025), type: \"straight\" },\n];\n\nconst ghost1HomePathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.502), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.75775, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.004, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.0965, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.502), type: \"straight\" },\n];\n\nconst ghost2HomePathPoints: PathPoint[] = [\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.004, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.502), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.3055, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.3055, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.0965, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n];\n\nconst ghost3HomePathPoints: PathPoint[] = [\n  {\n    pos: new THREE.Vector3(0.808, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.15475, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.55675, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.009, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.904), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.75775, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.004, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.808, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n];\n\nconst ghost4HomePathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.65725, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.15975, 0.55, 0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.6025), type: \"straight\" },\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.4015), type: \"straight\" },\n];\n\nconst ghost5HomePathPoints: PathPoint[] = [\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.04975),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.3055, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, -0.101), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.04975),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n];\n\nconst cameraPOVPathPoints: PathPoint[] = [\n  {\n    pos: new THREE.Vector3(0.55675, 0.5, 0.45175),\n    type: \"curve\",\n    curveType: \"forwardDownArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.607, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.7075, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.9085, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.85375), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.15525),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.9085, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.808, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.75775, 0.55, 1.15525), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 1.05475),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.7075, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.205, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.15475, 0.55, 1.05475), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.15525),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.205, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.5065, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 1.306),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.44825, 1, 2.0095), type: \"straight\" },\n];\n\nconst ghost1POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.009, 0.55, 0.8035), type: \"straight\" },\n  { pos: new THREE.Vector3(0.9085, 0.55, 0.8035), type: \"straight\" },\n];\n\nconst ghost2POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.009, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 1.15525), type: \"straight\" },\n  { pos: new THREE.Vector3(0.95875, 0.55, 1.05475), type: \"straight\" },\n];\n\nconst ghost3POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.904), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.95425),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.406, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.5065, 0.55, 1.0045), type: \"straight\" },\n];\n\nconst ghost4POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(0.15475, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.05475),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.205, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.3055, 0.55, 1.0045), type: \"straight\" },\n];\n\nconst ghost5POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(0.55675, 0.55, 1.306), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 1.25575),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.5065, 0.55, 1.2055), type: \"straight\" },\n  { pos: new THREE.Vector3(0.406, 0.55, 1.2055), type: \"straight\" },\n];\n\n// Camera Home Path - ensure it uses the correct positions based on device\nconst cameraStartPosition = isMobile\n  ? CAMERA_POSITIONS.startMobile\n  : CAMERA_POSITIONS.startDesktop;\nconst cameraSecondPosition = isMobile\n  ? CAMERA_POSITIONS.secondMobile\n  : CAMERA_POSITIONS.secondDesktop;\n\nexport const cameraHomePath = new THREE.CubicBezierCurve3(\n  cameraStartPosition,\n  cameraSecondPosition,\n  new THREE.Vector3(0.55675, 3, 0.45175),\n  new THREE.Vector3(0.55675, 0.5, 0.45175)\n);\n\n// Path Data Configuration\nexport const pathsData: { [key: string]: PathData } = {\n  pacmanHomePath: {\n    points: pacmanHomePathPoints,\n    color: 0xffff00,\n  },\n  ghost1HomePath: {\n    points: ghost1HomePathPoints,\n    color: 0xff0000,\n  },\n  ghost2HomePath: {\n    points: ghost2HomePathPoints,\n    color: 0xffa500,\n  },\n  ghost3HomePath: {\n    points: ghost3HomePathPoints,\n    color: 0xff69b4,\n  },\n  ghost4HomePath: {\n    points: ghost4HomePathPoints,\n    color: 0x32cd32,\n  },\n  ghost5HomePath: {\n    points: ghost5HomePathPoints,\n    color: 0xffdab9,\n  },\n  cameraPOVPath: {\n    points: cameraPOVPathPoints,\n    color: 0xffffff,\n  },\n  ghost1POVPath: {\n    points: ghost1POVPathPoints,\n    color: 0xff0000,\n  },\n  ghost2POVPath: {\n    points: ghost2POVPathPoints,\n    color: 0xffa500,\n  },\n  ghost3POVPath: {\n    points: ghost3POVPathPoints,\n    color: 0xff69b4,\n  },\n  ghost4POVPath: {\n    points: ghost4POVPathPoints,\n    color: 0x32cd32,\n  },\n  ghost5POVPath: {\n    points: ghost5POVPathPoints,\n    color: 0xffdab9,\n  },\n};\n\n// Path Mapping Functions\nexport function getPathsForSection(section: string): PathMapping {\n  const mapping: PathMapping = {};\n\n  if (section === \"home\") {\n    mapping.pacman = \"pacmanHomePath\";\n    mapping.ghost1 = \"ghost1HomePath\";\n    mapping.ghost2 = \"ghost2HomePath\";\n    mapping.ghost3 = \"ghost3HomePath\";\n    mapping.ghost4 = \"ghost4HomePath\";\n    mapping.ghost5 = \"ghost5HomePath\";\n  } else if (section === \"pov\") {\n    mapping.pacman = \"cameraPOVPath\";\n    mapping.ghost1 = \"ghost1POVPath\";\n    mapping.ghost2 = \"ghost2POVPath\";\n    mapping.ghost3 = \"ghost3POVPath\";\n    mapping.ghost4 = \"ghost4POVPath\";\n    mapping.ghost5 = \"ghost5POVPath\";\n  }\n  return mapping;\n}\n\n// Create all paths\nexport const paths: { [key: string]: THREE.CurvePath<THREE.Vector3> } = {};\n\n// Initialize paths\nObject.entries(pathsData).forEach(([key, data]) => {\n  paths[key] = createPath(data.points);\n});\n\n// Create pathsMap for ghost animation system\nexport const pathsMap: { [key: string]: THREE.CurvePath<THREE.Vector3> } = {\n  pacman: paths.pacmanHomePath,\n  ghost1: paths.ghost1HomePath,\n  ghost2: paths.ghost2HomePath,\n  ghost3: paths.ghost3HomePath,\n  ghost4: paths.ghost4HomePath,\n  ghost5: paths.ghost5HomePath,\n};\n","import * as THREE from \"three\";\nimport { ghosts, pacmanMixer, clock } from \"./objects\";\nimport { pathsMap } from \"./paths\";\nimport { renderer, scene } from \"./scene\";\nimport { camera, startQuaternion, endQuaternion } from \"./camera\";\n// SIMPLE SMOOTH SCROLL - No external dependencies, always works\ninterface SmoothScrollState {\n  targetProgress: number;\n  currentProgress: number;\n  velocity: number;\n  lastTime: number;\n}\n\nconst smoothScrollState: SmoothScrollState = {\n  targetProgress: 0,\n  currentProgress: 0,\n  velocity: 0,\n  lastTime: 0,\n};\n\n// Simple smooth scroll function\nfunction applySmoothScroll(targetProgress: number): number {\n  const currentTime = performance.now() / 1000;\n\n  // Initialize on first run\n  if (smoothScrollState.lastTime === 0) {\n    smoothScrollState.lastTime = currentTime;\n    smoothScrollState.currentProgress = targetProgress;\n    smoothScrollState.targetProgress = targetProgress;\n    return targetProgress;\n  }\n\n  const deltaTime = Math.max(currentTime - smoothScrollState.lastTime, 0.001);\n  smoothScrollState.targetProgress = targetProgress;\n\n  // Smooth interpolation settings - VERY LIGHT smoothing, highly responsive\n  const smoothness = 0.4; // Much higher = more responsive\n  const maxVelocity = 6.0; // Higher velocity cap\n\n  // Calculate difference and apply smoothing\n  const diff =\n    smoothScrollState.targetProgress - smoothScrollState.currentProgress;\n  smoothScrollState.velocity += diff * smoothness;\n\n  // Apply minimal friction for quick stopping\n  smoothScrollState.velocity *= 0.9; // Minimal friction\n\n  // Cap velocity\n  smoothScrollState.velocity = Math.max(\n    -maxVelocity,\n    Math.min(maxVelocity, smoothScrollState.velocity)\n  );\n\n  // Update progress with higher precision\n  smoothScrollState.currentProgress += smoothScrollState.velocity * deltaTime;\n  smoothScrollState.currentProgress = Math.max(\n    0,\n    Math.min(1, smoothScrollState.currentProgress)\n  );\n\n  // Update time\n  smoothScrollState.lastTime = currentTime;\n\n  // Return with higher precision (more decimal places for smoother animation)\n  return Math.round(smoothScrollState.currentProgress * 10000) / 10000;\n}\n\n// 1. STATE MANAGEMENT\ntype AnimationState = \"HOME\" | \"SCROLL_ANIMATION\" | \"POV_ANIMATION\";\nlet currentAnimationState: AnimationState = \"HOME\";\n\n// Debug info for window\ndeclare global {\n  interface Window {\n    animationDebugInfo: {\n      state: AnimationState;\n      capturedPositions: any;\n      bezierCurves: any;\n      scrollProgress?: number;\n      povAnimationActive: boolean;\n    };\n  }\n}\n\n// Constants\nconst MAZE_CENTER = new THREE.Vector3(0.55675, 0.5, 0.45175);\nconst GHOSTS_END_AT = 0.8; // Ghosts finish their animation at 80% scroll\nconst GHOST_OPACITY_FADE_START = 0.8; // Last 20% of GHOST animation (ghostProgress 0.8-1.0)\n\n// FOV Constants (from backup.js)\nconst ORIGINAL_FOV = 50; // Used in HOME state\nconst WIDE_FOV = 80; // Used in POV animation\nconst END_SEQUENCE_FOV = WIDE_FOV / 4; // 20 - Used in end sequence\n\n// 2. POSITION & BEZIER SYSTEM\nconst capturedPositions: { [key: string]: THREE.Vector3 } = {};\nconst capturedRotations: { [key: string]: THREE.Euler } = {};\nconst bezierCurves: { [key: string]: THREE.QuadraticBezierCurve3 } = {};\nlet timeOffset = 0;\nlet pauseTime = 0;\nlet savedAnimationProgress = 0; // Store the home animation progress when pausing\n\n// HOME ANIMATION SPEED - Keep this consistent everywhere!\nconst HOME_ANIMATION_SPEED = 0.03; // 3x slower than original (was 0.1)\n\n// GLOBAL MOMENTUM SMOOTHING for all scroll animations\ninterface GlobalSmoothingState {\n  smoothedProgress: number;\n  targetProgress: number;\n  velocity: number;\n  lastTargetProgress: number;\n  lastTime: number;\n}\n\nconst globalSmoothing: GlobalSmoothingState = {\n  smoothedProgress: 0,\n  targetProgress: 0,\n  velocity: 0,\n  lastTargetProgress: 0,\n  lastTime: 0,\n};\n\n// Apply momentum smoothing to ANY scroll progress\nfunction applyGlobalMomentumSmoothing(targetProgress: number): number {\n  const currentTime = performance.now() / 1000;\n\n  // Initialize on first run\n  if (globalSmoothing.lastTime === 0) {\n    globalSmoothing.lastTime = currentTime;\n    globalSmoothing.lastTargetProgress = targetProgress;\n    globalSmoothing.smoothedProgress = targetProgress;\n    return targetProgress;\n  }\n\n  const deltaTime = Math.max(currentTime - globalSmoothing.lastTime, 0.001);\n\n  // Calculate input velocity (how fast user is scrolling)\n  const inputVelocity =\n    (targetProgress - globalSmoothing.lastTargetProgress) / deltaTime;\n\n  // SMOOTH SETTINGS:\n  const friction = 0.88; // Higher = more momentum\n  const responsiveness = 0.2; // Higher = more direct response\n  const maxVelocity = 3.0; // Max velocity cap\n\n  // Apply friction\n  globalSmoothing.velocity *= friction;\n\n  // Add input influence\n  const progressDiff = targetProgress - globalSmoothing.smoothedProgress;\n  const velocityInfluence = inputVelocity * 0.15;\n\n  globalSmoothing.velocity += progressDiff * responsiveness + velocityInfluence;\n  globalSmoothing.velocity = Math.max(\n    -maxVelocity,\n    Math.min(maxVelocity, globalSmoothing.velocity)\n  );\n\n  // Apply velocity\n  globalSmoothing.smoothedProgress += globalSmoothing.velocity * deltaTime;\n  globalSmoothing.smoothedProgress = Math.max(\n    0,\n    Math.min(1, globalSmoothing.smoothedProgress)\n  );\n\n  // Update tracking\n  globalSmoothing.lastTargetProgress = targetProgress;\n  globalSmoothing.lastTime = currentTime;\n\n  const lag = targetProgress - globalSmoothing.smoothedProgress;\n  console.log(\n    `🌊 GLOBAL SMOOTH: target=${targetProgress.toFixed(\n      3\n    )}, smooth=${globalSmoothing.smoothedProgress.toFixed(\n      3\n    )}, velocity=${globalSmoothing.velocity.toFixed(3)}, lag=${lag.toFixed(3)}`\n  );\n\n  return globalSmoothing.smoothedProgress;\n}\n\nfunction captureGhostPositions() {\n  Object.keys(ghosts).forEach((ghostKey) => {\n    if (ghosts[ghostKey]) {\n      capturedPositions[ghostKey] = ghosts[ghostKey].position.clone();\n      capturedRotations[ghostKey] = ghosts[ghostKey].rotation.clone();\n    }\n  });\n}\n\nfunction createBezierCurves() {\n  // Use the global MAZE_CENTER constant so it can be changed easily\n  Object.keys(capturedPositions).forEach((ghostKey) => {\n    const startPos = capturedPositions[ghostKey].clone(); // Aktuelle Position der Geister\n    const endPos = MAZE_CENTER.clone(); // Use global MAZE_CENTER constant\n\n    // Control point: Mittelpunkt zwischen Start und Ende in x/z, aber hoch oben bei y=1\n    const controlPoint = new THREE.Vector3(\n      (startPos.x + endPos.x) / 2, // Mittelpunkt x zwischen Start und Maze-Mitte\n      2, // Hoch oben bei y=1\n      (startPos.z + endPos.z) / 2 // Mittelpunkt z zwischen Start und Maze-Mitte\n    );\n\n    bezierCurves[ghostKey] = new THREE.QuadraticBezierCurve3(\n      startPos, // Wo Geist ist wenn Animation stoppt\n      controlPoint, // Hoher Bogen-Punkt\n      endPos // Maze-Mitte\n    );\n  });\n}\n\nfunction moveGhostOnCurve(ghostKey: string, ghostProgress: number) {\n  if (\n    !bezierCurves[ghostKey] ||\n    !ghosts[ghostKey] ||\n    !capturedPositions[ghostKey] ||\n    !capturedRotations[ghostKey]\n  )\n    return;\n\n  const ghost = ghosts[ghostKey];\n\n  // Always use bezier curve for smooth interpolation\n  const position = bezierCurves[ghostKey].getPoint(ghostProgress);\n  ghost.position.copy(position);\n\n  // Simple rotation: interpolate from start rotation to (90°, 0°, 0°)\n  const originalRotation = capturedRotations[ghostKey];\n  const targetRotation = new THREE.Euler(Math.PI / -2, 0, 0); // Target: (90°, 0°, 0°)\n\n  // Interpolate between original and target rotation\n  const currentRotation = new THREE.Euler(\n    originalRotation.x +\n      (targetRotation.x - originalRotation.x) * ghostProgress,\n    originalRotation.y +\n      (targetRotation.y - originalRotation.y) * ghostProgress,\n    originalRotation.z + (targetRotation.z - originalRotation.z) * ghostProgress\n  );\n\n  ghost.rotation.copy(currentRotation);\n\n  // Handle opacity fade in last 20% of GHOST animation (not scroll progress!)\n  let opacity = 1;\n  if (ghostProgress >= GHOST_OPACITY_FADE_START) {\n    const fadeProgress =\n      (ghostProgress - GHOST_OPACITY_FADE_START) /\n      (1 - GHOST_OPACITY_FADE_START);\n    opacity = 1 - fadeProgress;\n    opacity = Math.max(0, opacity); // Allow complete invisibility\n  }\n\n  // Set opacity for both Mesh and Group\n  if (ghost instanceof THREE.Mesh && ghost.material) {\n    if (Array.isArray(ghost.material)) {\n      ghost.material.forEach((mat) => {\n        if (\"opacity\" in mat) mat.opacity = opacity;\n      });\n    } else {\n      if (\"opacity\" in ghost.material) ghost.material.opacity = opacity;\n    }\n  } else if (ghost instanceof THREE.Group) {\n    ghost.traverse((child) => {\n      if (child instanceof THREE.Mesh && child.material) {\n        if (Array.isArray(child.material)) {\n          child.material.forEach((mat) => {\n            if (\"opacity\" in mat) mat.opacity = opacity;\n          });\n        } else {\n          if (\"opacity\" in child.material) child.material.opacity = opacity;\n        }\n      }\n    });\n  }\n}\n\n// Create camera path exactly like backup.js but starting from current position\nfunction createCameraPath() {\n  // Use current camera position as start (don't jump) - capture it NOW\n  const startPosition = camera.position.clone();\n\n  // Update the initial camera state to current state for smooth transitions\n  initialCameraPosition.copy(camera.position);\n  initialCameraQuaternion.copy(camera.quaternion);\n  const direction = new THREE.Vector3(0, 0, -1);\n  direction.applyQuaternion(camera.quaternion);\n  initialCameraTarget = camera.position\n    .clone()\n    .add(direction.multiplyScalar(5));\n\n  // Calculate a smooth second position towards backup.js path\n  const isMobile = window.innerWidth < 768;\n  const targetSecondPositionMobile = new THREE.Vector3(0.5, 2.5, 2);\n  const targetSecondPositionDesktop = new THREE.Vector3(-1.5, 3, 2);\n  const targetSecondPosition = isMobile\n    ? targetSecondPositionMobile\n    : targetSecondPositionDesktop;\n\n  // Create a second position between current and target\n  const secondPosition = new THREE.Vector3().lerpVectors(\n    startPosition,\n    targetSecondPosition,\n    0.3\n  );\n\n  // Exact same control and end points as backup.js\n  cameraHomePath = new THREE.CubicBezierCurve3(\n    startPosition, // Current position (no jump)\n    secondPosition, // Interpolated second position\n    new THREE.Vector3(0.55675, 3, 0.45175), // High control point\n    new THREE.Vector3(0.55675, 0.5, 0.45175) // End point (maze center)\n  );\n}\n\n// 3. SCROLL MANAGEMENT\nlet initialCameraPosition = new THREE.Vector3();\nlet initialCameraTarget = new THREE.Vector3();\nlet initialCameraQuaternion = new THREE.Quaternion();\nlet cameraHomePath: THREE.CubicBezierCurve3;\n\n// 4. ANIMATION LOOP\nlet animationStartTime = Date.now();\n\nfunction animationLoop() {\n  // Only run home animation if we're in HOME state\n  if (currentAnimationState !== \"HOME\") return;\n\n  // Reduced debug logging\n  // console.log(\"🏠 HOME Animation Loop Running\");\n\n  const currentTime = Date.now();\n  const elapsedTime = (currentTime - animationStartTime - timeOffset) / 1000; // Convert to seconds\n  const t = (savedAnimationProgress + elapsedTime * HOME_ANIMATION_SPEED) % 1; // Use consistent speed\n\n  // Animate ghosts on their home paths only during HOME state\n  Object.entries(ghosts).forEach(([key, ghost]) => {\n    if (!pathsMap[key]) {\n      // Don't spam warnings, just return\n      return;\n    }\n\n    if (key === \"pacman\") {\n      // Pacman animation\n      const position = pathsMap[key].getPointAt(t);\n      ghost.position.copy(position);\n      const tangent = pathsMap[key].getTangentAt(t).normalize();\n      ghost.lookAt(position.clone().add(tangent));\n\n      // Handle pacman rotation smoothing\n      const zRotation = Math.atan2(tangent.x, tangent.z);\n      if ((ghost as any).previousZRotation === undefined) {\n        (ghost as any).previousZRotation = zRotation;\n      }\n\n      let rotationDiff = zRotation - (ghost as any).previousZRotation;\n      if (rotationDiff > Math.PI) rotationDiff -= 2 * Math.PI;\n      else if (rotationDiff < -Math.PI) rotationDiff += 2 * Math.PI;\n\n      const smoothFactor = 0.1;\n      const smoothedRotation =\n        (ghost as any).previousZRotation + rotationDiff * smoothFactor;\n      (ghost as any).previousZRotation = smoothedRotation;\n\n      ghost.rotation.set(Math.PI / 2, Math.PI, smoothedRotation + Math.PI / 2);\n    } else {\n      // Ghost animation\n      const position = pathsMap[key].getPointAt(t);\n      ghost.position.copy(position);\n      const tangent = pathsMap[key].getTangentAt(t).normalize();\n      ghost.lookAt(position.clone().add(tangent));\n\n      // Ensure full opacity\n      if (\n        ghost instanceof THREE.Mesh &&\n        ghost.material &&\n        \"opacity\" in ghost.material\n      ) {\n        ghost.material.opacity = 1;\n      }\n    }\n  });\n}\n\n// Reset to home state helper\nfunction resetToHomeState() {\n  currentAnimationState = \"HOME\";\n\n  // CRITICAL FIX: Reset animation timing to continue from saved progress\n  animationStartTime = Date.now();\n  timeOffset = 0;\n  pauseTime = 0;\n\n  // Reset camera to initial position and rotation\n  camera.position.copy(initialCameraPosition);\n  camera.quaternion.copy(initialCameraQuaternion);\n\n  // Reset all ghosts to their captured positions, rotations and full opacity\n  Object.keys(ghosts).forEach((ghostKey) => {\n    if (\n      capturedPositions[ghostKey] &&\n      capturedRotations[ghostKey] &&\n      ghosts[ghostKey]\n    ) {\n      ghosts[ghostKey].position.copy(capturedPositions[ghostKey]);\n      ghosts[ghostKey].rotation.copy(capturedRotations[ghostKey]);\n\n      // Reset opacity to full\n      const ghost = ghosts[ghostKey];\n      if (ghost instanceof THREE.Mesh && ghost.material) {\n        if (Array.isArray(ghost.material)) {\n          ghost.material.forEach((mat) => {\n            if (\"opacity\" in mat) mat.opacity = 1;\n          });\n        } else {\n          if (\"opacity\" in ghost.material) ghost.material.opacity = 1;\n        }\n      } else if (ghost instanceof THREE.Group) {\n        ghost.traverse((child) => {\n          if (child instanceof THREE.Mesh && child.material) {\n            if (Array.isArray(child.material)) {\n              child.material.forEach((mat) => {\n                if (\"opacity\" in mat) mat.opacity = 1;\n              });\n            } else {\n              if (\"opacity\" in child.material) child.material.opacity = 1;\n            }\n          }\n        });\n      }\n    }\n  });\n\n  // Update debug info\n  if (window.animationDebugInfo) {\n    window.animationDebugInfo.state = currentAnimationState;\n    window.animationDebugInfo.scrollProgress = 0;\n  }\n}\n\n// Camera animation helper - smooth transition from current rotation (ONLY FOV FIX)\nfunction animateCamera(progress: number) {\n  if (!cameraHomePath) {\n    return;\n  }\n\n  // Keep original FOV (50°) - don't jump to wide FOV immediately!\n  // Only change FOV if backup.js specifically does it\n  camera.fov = 50; // Keep originalFOV, don't jump to 80°!\n  camera.updateProjectionMatrix();\n\n  // Get position on the backup.js curve\n  const position = cameraHomePath.getPointAt(progress);\n  camera.position.copy(position);\n\n  // Calculate target look-at direction (towards maze center)\n  const mazeCenter = new THREE.Vector3(0.55675, 0.5, 0.45175);\n  const targetLookAt = mazeCenter.clone();\n\n  // EXACT backup.js logic: interpolate between startQuaternion and endQuaternion\n  if (progress === 0) {\n    // At progress 0: keep the EXACT current rotation (no jump!)\n    camera.quaternion.copy(initialCameraQuaternion);\n  } else {\n    // Backup.js logic: slerp between startQuaternion and endQuaternion\n    // endQuaternion = looking straight down (-90° on X-axis)\n    const currentQuaternion = new THREE.Quaternion();\n    currentQuaternion.slerpQuaternions(\n      initialCameraQuaternion,\n      endQuaternion,\n      progress\n    );\n    camera.quaternion.copy(currentQuaternion);\n  }\n}\n\n// Smooth step function from backup.js\nfunction smoothStep(x: number): number {\n  return x * x * (3 - 2 * x);\n}\n\n// Scroll event handler\nfunction handleScroll() {\n  // CRITICAL: Don't update HOME ghosts when POV animation is active!\n  if (povAnimationState.isActive) {\n    return; // POV system handles everything\n  }\n\n  const homeSection = document.querySelector(\".sc--home\") as HTMLElement;\n  if (!homeSection) {\n    return;\n  }\n\n  const rect = homeSection.getBoundingClientRect();\n  const windowHeight = window.innerHeight;\n\n  // Check if we're in or approaching the home section animation range\n  const isInHomeSection =\n    rect.top <= windowHeight && rect.bottom > -windowHeight;\n\n  // Calculate scroll progress: LIMITED to \"top top\" -> \"bottom top\" (like backup.js)\n  // Animation starts when section top hits viewport top (rect.top = 0)\n  // Animation ends when section bottom hits viewport top (rect.bottom = 0)\n\n  let scrollProgress = 0;\n\n  if (rect.top <= 0 && rect.bottom >= 0) {\n    // We're in the animation range: section is crossing the viewport\n    const sectionHeight = rect.height;\n    const scrolledDistance = Math.abs(rect.top); // How far the section has scrolled past viewport top\n    scrollProgress = Math.min(1, scrolledDistance / sectionHeight); // 0 to 1\n  } else if (rect.bottom < 0) {\n    // Past the animation range - section completely scrolled out, animation complete\n    scrollProgress = 1;\n  }\n  // else scrollProgress stays 0 (before animation range)\n\n  if (isInHomeSection) {\n    // We're in the home section or buffer zone - handle scroll animation\n\n    if (scrollProgress > 0) {\n      // Always animate when scrollProgress > 0, regardless of state\n      // Switch to SCROLL_ANIMATION state if not already\n      if (currentAnimationState === \"HOME\") {\n        // Capture current animation progress before switching states\n        const currentTime = Date.now();\n        const elapsedTime =\n          (currentTime - animationStartTime - timeOffset) / 1000;\n        savedAnimationProgress =\n          (savedAnimationProgress + elapsedTime * HOME_ANIMATION_SPEED) % 1;\n        currentAnimationState = \"SCROLL_ANIMATION\";\n\n        // Capture positions immediately when starting scroll animation\n        captureGhostPositions();\n        createBezierCurves();\n        createCameraPath();\n      }\n\n      // BACK TO ORIGINAL: No smoothing in home section (it was working fine)\n\n      // Animate ghosts along bezier curves (they finish at 80% scroll)\n      Object.keys(ghosts).forEach((ghostKey) => {\n        if (bezierCurves[ghostKey]) {\n          // Compress ghost animation into 0-80% range\n          const ghostProgress = Math.min(scrollProgress / GHOSTS_END_AT, 1);\n          moveGhostOnCurve(ghostKey, ghostProgress);\n\n          // Reduced debug logging\n          // console.log(`📜 SCROLL Animation: ${ghostKey} at ${ghostProgress.toFixed(3)}`);\n        }\n      });\n\n      // Animate camera normally (0% to 100%)\n      animateCamera(scrollProgress);\n\n      // Update debug info\n      if (window.animationDebugInfo) {\n        window.animationDebugInfo.scrollProgress = scrollProgress;\n      }\n    } else if (scrollProgress === 0) {\n      // Back at the beginning of home section - reset to home state\n      if (currentAnimationState !== \"HOME\") {\n        resetToHomeState();\n      }\n    }\n  } else {\n    // We're outside the home section and buffer zone\n\n    // Check if we're at the very top of the page (above home section)\n    if (window.scrollY <= 10) {\n      resetToHomeState();\n    }\n  }\n}\n\n// 5. GSAP INTEGRATION - To be called by GSAP ScrollTriggers\n// 6. INTRO TEXT ANIMATIONS (after arriving at maze)\nfunction setupIntroAnimations() {\n  // Setup intro header animation (.sc_h--intro)\n  const introHeader = document.querySelector(\".sc_h--intro\");\n  if (introHeader) {\n    // Set initial state\n    (introHeader as HTMLElement).style.transform = \"scale(0)\";\n    (introHeader as HTMLElement).style.opacity = \"0\";\n    (introHeader as HTMLElement).style.display = \"none\"; // Hidden initially\n  }\n\n  // Setup intro body animation (.sc_b--intro)\n  const introBody = document.querySelector(\".sc_b--intro\");\n  if (introBody) {\n    // Set initial state\n    (introBody as HTMLElement).style.transform = \"scale(0.5)\";\n    (introBody as HTMLElement).style.opacity = \"0\";\n    (introBody as HTMLElement).style.display = \"none\"; // Hidden initially\n  }\n}\n\n// Handle intro section scroll animations (like backup.js)\nfunction handleIntroScroll() {\n  const introSection = document.querySelector(\".sc--intro\") as HTMLElement;\n  if (!introSection) return;\n\n  const rect = introSection.getBoundingClientRect();\n  const windowHeight = window.innerHeight;\n\n  // Calculate if intro section is in view - NO BUFFER ZONE for precise \"bottom bottom\" timing\n  const sectionTop = rect.top;\n  const sectionBottom = rect.bottom;\n  const sectionHeight = rect.height;\n\n  // Simplified GSAP logic: Just use section scrolling from top to bottom\n  if (sectionTop <= 0 && sectionBottom >= 0) {\n    // Section is crossing the viewport\n    const progress = Math.min(1, Math.abs(sectionTop) / sectionHeight);\n\n    // Calculate when \"center center\" is reached\n    // \"center center\" = when section center aligns with viewport center\n    const centerProgress = 0.5; // This happens halfway through the section\n\n    // Header: \"top top\" to \"center center\" (0% to 50%)\n    if (progress <= centerProgress) {\n      const headerProgress = progress / centerProgress; // 0-0.5 maps to 0-1\n      animateIntroHeaderDirect(headerProgress);\n      animateIntroBodyDirect(0); // Body not started yet\n    } else {\n      // Body: \"center center\" to \"bottom bottom\" (50% to 100%)\n      const bodyProgress = (progress - centerProgress) / (1 - centerProgress); // 0.5-1 maps to 0-1\n      animateIntroHeaderDirect(1); // Header finished\n      animateIntroBodyDirect(bodyProgress);\n    }\n  } else {\n    const introHeader = document.querySelector(\".sc_h--intro\") as HTMLElement;\n    const introBody = document.querySelector(\".sc_b--intro\") as HTMLElement;\n\n    if (introHeader) {\n      introHeader.style.display = \"none\";\n    }\n    if (introBody) {\n      introBody.style.display = \"none\";\n    }\n  }\n}\n\nfunction animateIntroHeaderDirect(directProgress: number) {\n  const introHeader = document.querySelector(\".sc_h--intro\") as HTMLElement;\n  if (!introHeader) return;\n\n  // Make visible\n  introHeader.style.display = \"block\";\n\n  // Header animation: directProgress goes from 0-1 for the full header animation\n  let scale = 0;\n  let opacity = 0;\n\n  if (directProgress < 1) {\n    if (directProgress <= 0.3) {\n      // 0% - 30%: scale 0->0.8, opacity 0->1\n      const keyframeProgress = directProgress / 0.3;\n      scale = keyframeProgress * 0.8;\n      opacity = keyframeProgress;\n    } else if (directProgress <= 0.7) {\n      // 30% - 70%: scale 0.8->1.2, opacity stays 1\n      const keyframeProgress = (directProgress - 0.3) / 0.4;\n      scale = 0.8 + keyframeProgress * 0.4; // 0.8 -> 1.2\n      opacity = 1;\n    } else {\n      // 70% - 100%: scale 1.2->1.5, opacity 1->0\n      const keyframeProgress = (directProgress - 0.7) / 0.3;\n      scale = 1.2 + keyframeProgress * 0.3; // 1.2 -> 1.5\n      opacity = 1 - keyframeProgress; // 1 -> 0\n    }\n  } else {\n    // Header finished\n    scale = 1.5;\n    opacity = 0;\n  }\n\n  introHeader.style.transform = `scale(${scale})`;\n  introHeader.style.opacity = opacity.toString();\n}\n\nfunction animateIntroBodyDirect(directProgress: number) {\n  const introBody = document.querySelector(\".sc_b--intro\") as HTMLElement;\n  if (!introBody) return;\n\n  // Make visible if progress > 0\n  if (directProgress > 0) {\n    introBody.style.display = \"block\";\n  } else {\n    introBody.style.display = \"none\";\n    return;\n  }\n\n  // Body animation: directProgress goes from 0-1 for the full body animation\n  let scale = 0.5;\n  let opacity = 0;\n\n  if (directProgress > 0) {\n    if (directProgress <= 0.3) {\n      // 0% - 30%: scale 0.5->0.8, opacity 0->1\n      const keyframeProgress = directProgress / 0.3;\n      scale = 0.5 + keyframeProgress * 0.3; // 0.5 -> 0.8\n      opacity = keyframeProgress;\n    } else if (directProgress <= 0.7) {\n      // 30% - 70%: scale 0.8->1.2, opacity stays 1\n      const keyframeProgress = (directProgress - 0.3) / 0.4;\n      scale = 0.8 + keyframeProgress * 0.4; // 0.8 -> 1.2\n      opacity = 1;\n    } else {\n      // 70% - 100%: scale 1.2->1.5, opacity 1->0\n      const keyframeProgress = (directProgress - 0.7) / 0.3;\n      scale = 1.2 + keyframeProgress * 0.3; // 1.2 -> 1.5\n      opacity = 1 - keyframeProgress; // 1 -> 0\n    }\n  } else {\n    // Body not started yet\n    scale = 0.5;\n    opacity = 0;\n  }\n\n  introBody.style.transform = `scale(${scale})`;\n  introBody.style.opacity = opacity.toString();\n}\n\nexport function setupScrollTriggers() {\n  // Setup intro animations\n  setupIntroAnimations();\n\n  // Setup scroll event listeners for home and intro sections\n  window.addEventListener(\"scroll\", handleScroll);\n  window.addEventListener(\"scroll\", handleIntroScroll);\n\n  // Setup smooth scroll for POV section\n  console.log(\"🎬 Setting up smooth scroll for POV section\");\n\n  // Animation loop for smooth scrolling in POV\n  function smoothScrollLoop() {\n    // ALWAYS check POV section - handle activation/deactivation + smooth scrolling\n    const povSection = document.querySelector(\".sc--pov\") as HTMLElement;\n    if (povSection) {\n      const rect = povSection.getBoundingClientRect();\n      const windowHeight = window.innerHeight;\n      const sectionTop = rect.top;\n      const sectionHeight = rect.height;\n\n      // Calculate progress within POV section\n      const animationBuffer = windowHeight * 0.3;\n      const totalAnimationHeight = sectionHeight + animationBuffer;\n\n      if (\n        sectionTop <= windowHeight &&\n        sectionTop + sectionHeight >= -animationBuffer\n      ) {\n        // POV section is in view - calculate progress\n        const scrolledIntoSection = Math.max(0, -sectionTop);\n        const rawProgress = Math.min(\n          1,\n          scrolledIntoSection / totalAnimationHeight\n        );\n\n        // Start POV animation if not already active and we're in correct state\n        if (\n          !povAnimationState.isActive &&\n          rawProgress > 0 &&\n          (currentAnimationState === \"SCROLL_ANIMATION\" ||\n            currentAnimationState === \"HOME\")\n        ) {\n          povAnimationState.isActive = true;\n          onPOVAnimationStart();\n          console.log(\"🎬 POV Animation Started (smooth)\");\n        }\n\n        // Update POV animation with SMOOTH progress\n        if (povAnimationState.isActive) {\n          const smoothProgress = applySmoothScroll(rawProgress);\n          updatePOVAnimation(smoothProgress);\n\n          // Only log significant changes to avoid console spam\n          if (Math.abs(rawProgress - smoothProgress) > 0.02) {\n            console.log(\n              `🔄 POV: ${rawProgress.toFixed(3)} → ${smoothProgress.toFixed(3)}`\n            );\n          }\n        }\n      } else {\n        // POV section is out of view - end animation\n        if (povAnimationState.isActive) {\n          povAnimationState.isActive = false;\n          onPOVAnimationEnd();\n          console.log(\"🎬 POV Animation Ended (smooth)\");\n        }\n      }\n    }\n\n    requestAnimationFrame(smoothScrollLoop);\n  }\n\n  // Start the animation loop\n  smoothScrollLoop();\n\n  // NO fallback POV scroll handler - smooth scroll loop handles everything\n  console.log(\"✅ Smooth scroll setup complete\");\n}\n\n// Fallback scroll handler for POV if GSAP fails\nfunction setupFallbackPOVScroll() {\n  window.addEventListener(\"scroll\", handlePOVScroll);\n  console.log(\"📜 Fallback POV scroll handler set up\");\n}\n\n// Main animation loop\nfunction animate() {\n  // Update FOV based on current animation state\n  updateCameraFOV();\n\n  // Update pacman mixer\n  if (pacmanMixer) {\n    const delta = clock.getDelta();\n    pacmanMixer.update(delta);\n  }\n\n  // Run animation loop if in HOME state\n  animationLoop();\n\n  // Render the scene\n  renderer.render(scene, camera);\n\n  requestAnimationFrame(animate);\n}\n\n// Initialize animation system\nexport function initAnimationSystem() {\n  // FIRST THING: Capture the initial camera state before any animations start\n  initialCameraPosition = camera.position.clone();\n  initialCameraQuaternion = camera.quaternion.clone();\n  const direction = new THREE.Vector3(0, 0, -1);\n  direction.applyQuaternion(camera.quaternion);\n  initialCameraTarget = camera.position\n    .clone()\n    .add(direction.multiplyScalar(5));\n\n  // Setup debug info\n  window.animationDebugInfo = {\n    state: currentAnimationState,\n    capturedPositions: capturedPositions,\n    bezierCurves: bezierCurves,\n    povAnimationActive: false,\n  };\n\n  // Ensure all ghosts are visible and have full opacity\n  Object.keys(ghosts).forEach((ghostKey) => {\n    if (ghosts[ghostKey]) {\n      ghosts[ghostKey].visible = true;\n\n      const ghost = ghosts[ghostKey];\n      if (\n        ghost instanceof THREE.Mesh &&\n        ghost.material &&\n        \"opacity\" in ghost.material\n      ) {\n        ghost.material.opacity = 1;\n      } else if (ghost instanceof THREE.Group) {\n        ghost.traverse((child) => {\n          if (\n            child instanceof THREE.Mesh &&\n            child.material &&\n            \"opacity\" in child.material\n          ) {\n            child.material.opacity = 1;\n          }\n        });\n      }\n    }\n  });\n\n  // Setup scroll triggers\n  setupScrollTriggers();\n  console.log(\"🚀 Animation system fully initialized\");\n\n  animate();\n\n  // Initialize POV Animation System\n  initializePOVAnimation();\n}\n\n// Export functions for external use\nexport { moveGhostOnCurve, captureGhostPositions, createBezierCurves };\n\n/*------------------\nPOV Animation System\n------------------*/\n\n// POV Path Points (from backup.js)\nconst cameraPOVPathPoints = [\n  {\n    pos: new THREE.Vector3(0.55675, 0.5, 0.45175),\n    type: \"curve\",\n    curveType: \"forwardDownArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.607, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.7075, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.9085, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.85375), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.15525),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.9085, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.808, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.75775, 0.55, 1.15525), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 1.05475),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.7075, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.205, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.15475, 0.55, 1.05475), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.15525),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.205, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.5065, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 1.306),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.44825, 1, 2.0095), type: \"straight\" },\n];\n\nconst ghost1POVPathPoints = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.009, 0.55, 0.8035), type: \"straight\" },\n  { pos: new THREE.Vector3(0.9085, 0.55, 0.8035), type: \"straight\" },\n];\n\nconst ghost2POVPathPoints = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.009, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 1.15525), type: \"straight\" },\n  { pos: new THREE.Vector3(0.95875, 0.55, 1.05475), type: \"straight\" },\n];\n\nconst ghost3POVPathPoints = [\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.904), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.95425),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.406, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.5065, 0.55, 1.0045), type: \"straight\" },\n];\n\nconst ghost4POVPathPoints = [\n  { pos: new THREE.Vector3(0.15475, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.05475),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.205, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.3055, 0.55, 1.0045), type: \"straight\" },\n];\n\nconst ghost5POVPathPoints = [\n  { pos: new THREE.Vector3(0.55675, 0.55, 1.306), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 1.25575),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.5065, 0.55, 1.2055), type: \"straight\" },\n  { pos: new THREE.Vector3(0.406, 0.55, 1.2055), type: \"straight\" },\n];\n\n// POV Path creation function\nfunction createPOVPath(pathPoints: any[]): THREE.CurvePath<THREE.Vector3> {\n  const path = new THREE.CurvePath<THREE.Vector3>();\n\n  for (let i = 0; i < pathPoints.length - 1; i++) {\n    const current = pathPoints[i];\n    const next = pathPoints[i + 1];\n\n    if (current.type === \"straight\") {\n      const line = new THREE.LineCurve3(current.pos, next.pos);\n      path.add(line);\n    } else if (current.type === \"curve\") {\n      let midPoint: THREE.Vector3;\n      if (current.curveType === \"upperArc\") {\n        midPoint = new THREE.Vector3(current.pos.x, current.pos.y, next.pos.z);\n      } else if (current.curveType === \"lowerArc\") {\n        midPoint = new THREE.Vector3(next.pos.x, current.pos.y, current.pos.z);\n      } else if (current.curveType === \"forwardDownArc\") {\n        midPoint = new THREE.Vector3(current.pos.x, next.pos.y, current.pos.z);\n      } else {\n        midPoint = new THREE.Vector3(\n          (current.pos.x + next.pos.x) / 2,\n          (current.pos.y + next.pos.y) / 2,\n          (current.pos.z + next.pos.z) / 2\n        );\n      }\n      const curve = new THREE.QuadraticBezierCurve3(\n        current.pos,\n        midPoint,\n        next.pos\n      );\n      path.add(curve);\n    }\n  }\n  return path;\n}\n\n// POV Animation State\ninterface POVAnimationState {\n  isActive: boolean;\n  cameraPOVPath: THREE.CurvePath<THREE.Vector3> | null;\n  ghostPOVPaths: { [key: string]: THREE.CurvePath<THREE.Vector3> };\n  triggerPositions: { [key: string]: any };\n  previousCameraPosition: THREE.Vector3 | null;\n  startRotationPoint: THREE.Vector3;\n  endRotationPoint: THREE.Vector3;\n  targetLookAt: THREE.Vector3;\n  finalLookAt: THREE.Vector3;\n  rotationStarted: boolean;\n  cachedStartYAngle: number | null;\n  // MOMENTUM-BASED SCRUBBING\n  smoothedProgress: number;\n  targetProgress: number;\n  velocity: number;\n  lastTargetProgress: number;\n  lastTime: number;\n}\n\nconst povAnimationState: POVAnimationState = {\n  isActive: false,\n  cameraPOVPath: null,\n  ghostPOVPaths: {},\n  triggerPositions: {},\n  previousCameraPosition: null,\n  startRotationPoint: new THREE.Vector3(0.55675, 0.55, 1.306),\n  endRotationPoint: new THREE.Vector3(-0.14675, 1, 1.8085),\n  targetLookAt: new THREE.Vector3(0.55675, 5.0, 1.306), // Look straight up\n  finalLookAt: new THREE.Vector3(-0.14675, 0, 1.8085),\n  rotationStarted: false,\n  cachedStartYAngle: null,\n  // MOMENTUM-BASED SCRUBBING\n  smoothedProgress: 0,\n  targetProgress: 0,\n  velocity: 0,\n  lastTargetProgress: 0,\n  lastTime: 0,\n};\n\n// POV Camera Smoothing State - GENTLER SETTINGS\nlet previousCameraRotation: THREE.Quaternion | null = null;\nconst CAMERA_ROTATION_SMOOTHING = 0.08; // Much gentler smoothing (was 0.15)\nconst MAX_ROTATION_SPEED = Math.PI / 12; // Slower max rotation (15° per frame, was 30°)\nconst LOOK_AHEAD_DISTANCE = 0.01; // Smaller look-ahead for less jitter (was 0.02)\n\n// POV Text Animation Constants\nconst GHOST_TEXT_START = 0.2;\nconst CAM_TEXT_START = 0.3;\nconst FADE_OUT_START = 0.8;\nconst TRIGGER_DISTANCE = 0.02;\n\n// Get parent elements for POV triggers\nconst parentElements = document.querySelectorAll(\".cmp--pov.cmp\");\n\nconst backupTriggerPositions = {\n  ghost1: {\n    triggerPos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    ghostTextPos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    camTextPos: new THREE.Vector3(0.75775, 0.55, 0.8035),\n    endPosition: new THREE.Vector3(0.85825, 0.55, 0.8035),\n    parent: parentElements[0] || null,\n    active: false,\n  },\n  ghost2: {\n    triggerPos: new THREE.Vector3(0.9085, 0.55, 0.8035),\n    ghostTextPos: new THREE.Vector3(0.95875, 0.55, 0.85375),\n    camTextPos: new THREE.Vector3(0.95875, 0.55, 0.904),\n    endPosition: new THREE.Vector3(0.95875, 0.55, 1.0045),\n    parent: parentElements[1] || null,\n    active: false,\n  },\n  ghost3: {\n    triggerPos: new THREE.Vector3(0.75775, 0.55, 1.05475),\n    ghostTextPos: new THREE.Vector3(0.7075, 0.55, 1.0045),\n    camTextPos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    endPosition: new THREE.Vector3(0.55675, 0.55, 1.0045),\n    parent: parentElements[2] || null,\n    active: false,\n  },\n  ghost4: {\n    triggerPos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    ghostTextPos: new THREE.Vector3(0.5065, 0.55, 1.0045),\n    camTextPos: new THREE.Vector3(0.45625, 0.55, 1.0045),\n    endPosition: new THREE.Vector3(0.35575, 0.55, 1.0045),\n    parent: parentElements[3] || null,\n    active: false,\n  },\n  ghost5: {\n    triggerPos: new THREE.Vector3(0.15475, 0.55, 1.15525),\n    ghostTextPos: new THREE.Vector3(0.205, 0.55, 1.2055),\n    camTextPos: new THREE.Vector3(0.25525, 0.55, 1.2055),\n    endPosition: new THREE.Vector3(0.35575, 0.55, 1.2055),\n    parent: parentElements[4] || null,\n    active: false,\n  },\n};\n\n// Initialize POV Animation System\nfunction initializePOVAnimation() {\n  // Create camera POV path\n  povAnimationState.cameraPOVPath = createPOVPath(cameraPOVPathPoints);\n\n  // Create ghost POV paths\n  povAnimationState.ghostPOVPaths = {\n    ghost1: createPOVPath(ghost1POVPathPoints),\n    ghost2: createPOVPath(ghost2POVPathPoints),\n    ghost3: createPOVPath(ghost3POVPathPoints),\n    ghost4: createPOVPath(ghost4POVPathPoints),\n    ghost5: createPOVPath(ghost5POVPathPoints),\n  };\n\n  // Initialize trigger positions\n  povAnimationState.triggerPositions = {\n    ghost1: {\n      triggerPos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n      ghostTextPos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n      camTextPos: new THREE.Vector3(0.75775, 0.55, 0.8035),\n      endPosition: new THREE.Vector3(0.85825, 0.55, 0.8035),\n      parent: parentElements[0],\n      active: false,\n    },\n    ghost2: {\n      triggerPos: new THREE.Vector3(0.9085, 0.55, 0.8035),\n      ghostTextPos: new THREE.Vector3(0.95875, 0.55, 0.85375),\n      camTextPos: new THREE.Vector3(0.95875, 0.55, 0.904),\n      endPosition: new THREE.Vector3(0.95875, 0.55, 1.0045),\n      parent: parentElements[1],\n      active: false,\n    },\n    ghost3: {\n      triggerPos: new THREE.Vector3(0.75775, 0.55, 1.05475),\n      ghostTextPos: new THREE.Vector3(0.7075, 0.55, 1.0045),\n      camTextPos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n      endPosition: new THREE.Vector3(0.55675, 0.55, 1.0045),\n      parent: parentElements[2],\n      active: false,\n    },\n    ghost4: {\n      triggerPos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n      ghostTextPos: new THREE.Vector3(0.5065, 0.55, 1.0045),\n      camTextPos: new THREE.Vector3(0.45625, 0.55, 1.0045),\n      endPosition: new THREE.Vector3(0.35575, 0.55, 1.0045),\n      parent: parentElements[3],\n      active: false,\n    },\n    ghost5: {\n      triggerPos: new THREE.Vector3(0.15475, 0.55, 1.15525),\n      ghostTextPos: new THREE.Vector3(0.205, 0.55, 1.2055),\n      camTextPos: new THREE.Vector3(0.25525, 0.55, 1.2055),\n      endPosition: new THREE.Vector3(0.35575, 0.55, 1.2055),\n      parent: parentElements[4],\n      active: false,\n    },\n  };\n\n  // POV animation will be handled by handlePOVScroll in setupScrollTriggers\n}\n\n// POV animation is now handled by handlePOVScroll function in setupScrollTriggers\n\n// POV Animation Start Handler\nfunction onPOVAnimationStart() {\n  // Switch to POV state\n  currentAnimationState = \"POV_ANIMATION\";\n\n  // Initialize previous camera position\n  if (povAnimationState.cameraPOVPath) {\n    povAnimationState.previousCameraPosition =\n      povAnimationState.cameraPOVPath.getPointAt(0);\n  }\n\n  // Reset rotation state\n  povAnimationState.rotationStarted = false;\n  povAnimationState.cachedStartYAngle = null;\n\n  // Reset smooth camera rotation state\n  previousCameraRotation = null;\n\n  // CRITICAL: Set camera to look straight up at POV start\n  if (povAnimationState.cameraPOVPath && camera) {\n    const startPosition = povAnimationState.cameraPOVPath.getPointAt(0);\n    camera.position.copy(startPosition);\n\n    // Create look-at point straight up from start position (less extreme)\n    const straightUpLookAt = new THREE.Vector3(\n      startPosition.x,\n      startPosition.y + 3.0, // Look up but less extreme (was 10.0)\n      startPosition.z\n    );\n    camera.lookAt(straightUpLookAt);\n\n    console.log(\"📹 POV Start: Camera set to look straight up\");\n  }\n\n  // Make sure pacman is visible\n  if (ghosts.pacman) {\n    ghosts.pacman.visible = true;\n  }\n\n  // Make sure all ghosts are visible for POV animation\n  Object.entries(ghosts).forEach(([ghostKey, ghost]) => {\n    if (ghostKey !== \"pacman\") {\n      ghost.visible = true;\n    }\n  });\n\n  // Update debug info\n  if (window.animationDebugInfo) {\n    window.animationDebugInfo.povAnimationActive = true;\n  }\n}\n\n// DEPRECATED: GSAP handles all smoothing now\nfunction applyMomentumScrubbing_DEPRECATED(targetProgress: number): number {\n  const currentTime = performance.now() / 1000; // Current time in seconds\n\n  // Initialize on first run\n  if (povAnimationState.lastTime === 0) {\n    povAnimationState.lastTime = currentTime;\n    povAnimationState.lastTargetProgress = targetProgress;\n    povAnimationState.smoothedProgress = targetProgress;\n    return targetProgress;\n  }\n\n  const deltaTime = currentTime - povAnimationState.lastTime;\n\n  // Calculate input velocity (how fast user is scrolling)\n  const inputVelocity =\n    (targetProgress - povAnimationState.lastTargetProgress) /\n    Math.max(deltaTime, 0.001);\n\n  // SCRUB SETTINGS - Adjust these for different feels:\n  const friction = 0.85; // Higher = more momentum (0.8-0.95)\n  const responsiveness = 0.15; // Higher = more responsive (0.05-0.3)\n  const maxVelocity = 2.0; // Maximum velocity cap\n\n  // Apply friction to current velocity\n  povAnimationState.velocity *= friction;\n\n  // Add input influence based on difference and input velocity\n  const progressDiff = targetProgress - povAnimationState.smoothedProgress;\n  const velocityInfluence = inputVelocity * 0.1; // How much input velocity affects our velocity\n\n  // Update velocity with responsiveness and input influence\n  povAnimationState.velocity +=\n    progressDiff * responsiveness + velocityInfluence;\n\n  // Cap velocity to prevent overshoot\n  povAnimationState.velocity = Math.max(\n    -maxVelocity,\n    Math.min(maxVelocity, povAnimationState.velocity)\n  );\n\n  // Apply velocity to position\n  povAnimationState.smoothedProgress += povAnimationState.velocity * deltaTime;\n\n  // Clamp to valid range\n  povAnimationState.smoothedProgress = Math.max(\n    0,\n    Math.min(1, povAnimationState.smoothedProgress)\n  );\n\n  // Update tracking variables\n  povAnimationState.lastTargetProgress = targetProgress;\n  povAnimationState.lastTime = currentTime;\n\n  const lag = targetProgress - povAnimationState.smoothedProgress;\n\n  return povAnimationState.smoothedProgress;\n}\n\n// Update POV Animation - GSAP provides the smoothing, we just use the progress\nfunction updatePOVAnimation(progress: number) {\n  if (!povAnimationState.cameraPOVPath || !povAnimationState.isActive) return;\n\n  // GSAP ScrollTrigger already provides smooth scrubbing, no need for additional smoothing\n  // Update camera position and rotation with GSAP progress\n  updatePOVCamera(progress);\n\n  // Update ghost positions with GSAP progress\n  updatePOVGhosts(progress);\n\n  // Update POV texts with GSAP progress\n  updatePOVTexts(progress);\n}\n\n// Update POV Camera\nfunction updatePOVCamera(progress: number) {\n  if (!povAnimationState.cameraPOVPath || !camera) return;\n\n  const cameraPosition = povAnimationState.cameraPOVPath.getPointAt(progress);\n  camera.position.copy(cameraPosition);\n\n  // Handle camera rotation based on progress\n  const rotationStartingPoint = 0.973;\n\n  if (progress >= rotationStartingPoint && !povAnimationState.rotationStarted) {\n    povAnimationState.rotationStarted = true;\n    const lookAtPoint = getCameraLookAtPoint();\n    povAnimationState.cachedStartYAngle = Math.atan2(\n      lookAtPoint.x - camera.position.x,\n      lookAtPoint.z - camera.position.z\n    );\n  }\n\n  if (progress < rotationStartingPoint) {\n    // Before rotation phase - start looking straight up, then quickly transition to normal\n\n    const straightUpDuration = 0.03; // Only first 3% of animation looks straight up (was 5%)\n\n    if (progress < straightUpDuration) {\n      // Very beginning: Transition from straight up to forward tangent\n      const transitionProgress = progress / straightUpDuration; // 0 to 1 over first 5%\n      const smoothTransition = smoothStep(transitionProgress); // Smooth transition curve\n\n      const forwardTangent = getSmoothCameraTangent(progress);\n      const straightUpVector = new THREE.Vector3(0, 1, 0); // Straight up\n\n      // Interpolate from straight up to forward direction\n      const lookAtDirection = new THREE.Vector3()\n        .addVectors(\n          straightUpVector.multiplyScalar(1.0 - smoothTransition),\n          forwardTangent.multiplyScalar(smoothTransition)\n        )\n        .normalize();\n\n      const lookAtPoint = camera.position.clone().add(lookAtDirection);\n      applySmoothCameraRotation(lookAtPoint);\n    } else {\n      // After 5%: Normal forward-looking camera behavior\n      const smoothedTangent = getSmoothCameraTangent(progress);\n      const lookAtPoint = camera.position.clone().add(smoothedTangent);\n      applySmoothCameraRotation(lookAtPoint);\n    }\n  } else {\n    // Rotation phase - interpolate between start and end look-at\n    const rotationProgress =\n      (progress - rotationStartingPoint) / (1 - rotationStartingPoint);\n    const smoothProgress = smoothStep(rotationProgress);\n\n    const currentLookAt = new THREE.Vector3().lerpVectors(\n      povAnimationState.targetLookAt,\n      povAnimationState.finalLookAt,\n      smoothProgress\n    );\n\n    applySmoothCameraRotation(currentLookAt);\n  }\n\n  // Store previous position\n  if (povAnimationState.previousCameraPosition) {\n    povAnimationState.previousCameraPosition.copy(cameraPosition);\n  }\n}\n\n// Get smoothed tangent for camera movement\nfunction getSmoothCameraTangent(progress: number): THREE.Vector3 {\n  if (!povAnimationState.cameraPOVPath) return new THREE.Vector3(0, 0, -1);\n\n  // Get current tangent\n  const currentTangent = povAnimationState.cameraPOVPath\n    .getTangentAt(progress)\n    .normalize();\n\n  // Get look-ahead tangent for smoothing\n  const lookAheadProgress = Math.min(progress + LOOK_AHEAD_DISTANCE, 1);\n  const lookAheadTangent = povAnimationState.cameraPOVPath\n    .getTangentAt(lookAheadProgress)\n    .normalize();\n\n  // Get look-behind tangent for more context\n  const lookBehindProgress = Math.max(progress - LOOK_AHEAD_DISTANCE, 0);\n  const lookBehindTangent = povAnimationState.cameraPOVPath\n    .getTangentAt(lookBehindProgress)\n    .normalize();\n\n  // Calculate average tangent for smoothing\n  const averageTangent = new THREE.Vector3()\n    .addVectors(lookBehindTangent, currentTangent)\n    .add(lookAheadTangent)\n    .divideScalar(3)\n    .normalize();\n\n  // Detect S-curves: if current and look-ahead have very different directions\n  const dotProduct = currentTangent.dot(lookAheadTangent);\n  const isSCurve = dotProduct < 0.5; // More lenient S-curve detection (was 0.3)\n\n  if (isSCurve) {\n    // For S-curves, use gentler smoothing (was 0.3/0.7)\n    return new THREE.Vector3()\n      .addVectors(\n        currentTangent.multiplyScalar(0.6),\n        averageTangent.multiplyScalar(0.4)\n      )\n      .normalize();\n  } else {\n    // For normal curves, use very light smoothing (was 0.7/0.3)\n    return new THREE.Vector3()\n      .addVectors(\n        currentTangent.multiplyScalar(0.85),\n        averageTangent.multiplyScalar(0.15)\n      )\n      .normalize();\n  }\n}\n\n// Apply smooth camera rotation with dynamic smoothing based on scroll speed\nfunction applySmoothCameraRotation(targetLookAt: THREE.Vector3) {\n  if (!camera) return;\n\n  // Calculate target rotation\n  const tempMatrix = new THREE.Matrix4();\n  tempMatrix.lookAt(camera.position, targetLookAt, camera.up);\n  const targetQuaternion = new THREE.Quaternion().setFromRotationMatrix(\n    tempMatrix\n  );\n\n  if (!previousCameraRotation) {\n    // First frame - set rotation directly\n    camera.quaternion.copy(targetQuaternion);\n    previousCameraRotation = targetQuaternion.clone();\n    return;\n  }\n\n  // Calculate rotation difference\n  const angleDifference = camera.quaternion.angleTo(targetQuaternion);\n\n  // DYNAMIC SMOOTHING: More smoothing for larger angle changes (corners)\n  let dynamicSmoothing = CAMERA_ROTATION_SMOOTHING;\n  if (angleDifference > Math.PI / 8) {\n    // > 22.5° = sharp corner\n    dynamicSmoothing = CAMERA_ROTATION_SMOOTHING * 0.4; // Much more smoothing for corners\n  } else if (angleDifference > Math.PI / 16) {\n    // > 11.25° = moderate corner\n    dynamicSmoothing = CAMERA_ROTATION_SMOOTHING * 0.7; // More smoothing\n  }\n\n  // Always apply smoothing (no speed limiting - causes jumps)\n  const smoothedQuaternion = new THREE.Quaternion();\n  smoothedQuaternion.slerpQuaternions(\n    camera.quaternion,\n    targetQuaternion,\n    dynamicSmoothing\n  );\n  camera.quaternion.copy(smoothedQuaternion);\n\n  // Store for next frame\n  previousCameraRotation.copy(camera.quaternion);\n}\n\n// Update POV Ghosts with enhanced triggering (from backup.js) - ONLY during active POV\nfunction updatePOVGhosts(progress: number) {\n  if (!povAnimationState.cameraPOVPath || !povAnimationState.isActive) return;\n\n  const cameraPosition = povAnimationState.cameraPOVPath.getPointAt(progress);\n\n  // Update each ghost using enhanced logic\n  Object.entries(ghosts).forEach(([ghostKey, ghost]) => {\n    if (ghostKey === \"pacman\") {\n      // Pacman stays hidden during POV animation\n      ghost.visible = false;\n      return;\n    }\n\n    // Use the ghost key directly since that's how paths are stored\n    if (povAnimationState.ghostPOVPaths[ghostKey]) {\n      updateGhostInPOV(ghostKey, ghost, ghostKey, cameraPosition);\n    }\n  });\n}\n\n// Update POV Text Animations\nfunction updatePOVTexts(progress: number) {\n  if (!povAnimationState.cameraPOVPath) return;\n\n  const cameraPosition = povAnimationState.cameraPOVPath.getPointAt(progress);\n\n  Object.entries(povAnimationState.triggerPositions).forEach(\n    ([key, trigger]) => {\n      const currentCameraProgress =\n        findClosestProgressOnPOVPath(cameraPosition);\n\n      // Calculate trigger positions on camera path\n      if (!trigger.triggerCameraProgress) {\n        trigger.triggerCameraProgress = findClosestProgressOnPOVPath(\n          trigger.triggerPos\n        );\n        trigger.ghostTextCameraProgress = findClosestProgressOnPOVPath(\n          trigger.ghostTextPos\n        );\n        trigger.camTextCameraProgress = findClosestProgressOnPOVPath(\n          trigger.camTextPos\n        );\n        trigger.endCameraProgress = findClosestProgressOnPOVPath(\n          trigger.endPosition\n        );\n      }\n\n      // Calculate text opacities\n      let targetGhostOpacity = 0;\n      let targetCamOpacity = 0;\n\n      if (currentCameraProgress >= trigger.triggerCameraProgress) {\n        const ghostTextRange =\n          trigger.camTextCameraProgress - trigger.ghostTextCameraProgress;\n        const ghostTextProgress = Math.max(\n          0,\n          Math.min(\n            1,\n            (currentCameraProgress - trigger.ghostTextCameraProgress) /\n              ghostTextRange\n          )\n        );\n\n        if (ghostTextProgress < FADE_OUT_START) {\n          targetGhostOpacity = 1;\n        } else {\n          targetGhostOpacity =\n            1 - (ghostTextProgress - FADE_OUT_START) / (1 - FADE_OUT_START);\n        }\n\n        if (currentCameraProgress >= trigger.camTextCameraProgress) {\n          const camTextRange =\n            trigger.endCameraProgress - trigger.camTextCameraProgress;\n          const camTextProgress = Math.max(\n            0,\n            Math.min(\n              1,\n              (currentCameraProgress - trigger.camTextCameraProgress) /\n                camTextRange\n            )\n          );\n\n          if (camTextProgress < FADE_OUT_START) {\n            targetCamOpacity = 1;\n          } else {\n            targetCamOpacity =\n              1 - (camTextProgress - FADE_OUT_START) / (1 - FADE_OUT_START);\n          }\n        }\n      }\n\n      // Smooth opacity transitions\n      const fadeInSpeed = 0.2;\n      const fadeOutSpeed = 0.1;\n\n      if (targetGhostOpacity > trigger.ghostTextOpacity) {\n        trigger.ghostTextOpacity +=\n          (targetGhostOpacity - trigger.ghostTextOpacity) * fadeInSpeed;\n      } else {\n        trigger.ghostTextOpacity +=\n          (targetGhostOpacity - trigger.ghostTextOpacity) * fadeOutSpeed;\n      }\n\n      if (targetCamOpacity > trigger.camTextOpacity) {\n        trigger.camTextOpacity +=\n          (targetCamOpacity - trigger.camTextOpacity) * fadeInSpeed;\n      } else {\n        trigger.camTextOpacity +=\n          (targetCamOpacity - trigger.camTextOpacity) * fadeOutSpeed;\n      }\n\n      // Update DOM elements\n      updatePOVTextElements(trigger);\n    }\n  );\n}\n\n// Update POV Text DOM Elements\nfunction updatePOVTextElements(trigger: any) {\n  if (!trigger.parent) return;\n\n  const ghostText = trigger.parent.querySelector(\".cmp--pov-ghost\");\n  const camText = trigger.parent.querySelector(\".cmp--pov-cam\");\n\n  if (ghostText) {\n    const ghostOpacity = Math.max(0, Math.min(1, trigger.ghostTextOpacity));\n    if (ghostOpacity > 0.01) {\n      ghostText.classList.remove(\"hidden\");\n      ghostText.style.opacity = ghostOpacity.toString();\n    } else {\n      ghostText.classList.add(\"hidden\");\n      ghostText.style.opacity = \"0\";\n    }\n  }\n\n  if (camText) {\n    const camOpacity = Math.max(0, Math.min(1, trigger.camTextOpacity));\n    if (camOpacity > 0.01) {\n      camText.classList.remove(\"hidden\");\n      camText.style.opacity = camOpacity.toString();\n    } else {\n      camText.classList.add(\"hidden\");\n      camText.style.opacity = \"0\";\n    }\n  }\n}\n\n// Find closest progress on POV path\nfunction findClosestProgressOnPOVPath(\n  targetPoint: THREE.Vector3,\n  samples: number = 2000\n): number {\n  if (!povAnimationState.cameraPOVPath) return 0;\n\n  let closestProgress = 0;\n  let closestDistance = Infinity;\n\n  for (let i = 0; i <= samples; i++) {\n    const progress = i / samples;\n    const point = povAnimationState.cameraPOVPath.getPointAt(progress);\n    const distance = point.distanceTo(targetPoint);\n\n    if (distance < closestDistance) {\n      closestDistance = distance;\n      closestProgress = progress;\n    }\n  }\n\n  return closestProgress;\n}\n\n// POV Animation End Handler\nfunction onPOVAnimationEnd() {\n  // After POV animation, we want to maintain the scroll animation state\n  // so the camera stays at its last scroll position and FOV returns to original\n  currentAnimationState = \"SCROLL_ANIMATION\";\n\n  // Reset all POV text elements\n  Object.values(povAnimationState.triggerPositions).forEach((trigger: any) => {\n    if (trigger.parent) {\n      trigger.parent.classList.add(\"hidden\");\n      trigger.parent.style.opacity = \"0\";\n\n      const ghostText = trigger.parent.querySelector(\".cmp--pov-ghost\");\n      const camText = trigger.parent.querySelector(\".cmp--pov-cam\");\n\n      if (ghostText) {\n        ghostText.classList.add(\"hidden\");\n        ghostText.style.opacity = \"0\";\n      }\n\n      if (camText) {\n        camText.classList.add(\"hidden\");\n        camText.style.opacity = \"0\";\n      }\n    }\n\n    // Reset trigger state\n    trigger.active = false;\n    trigger.ghostTextOpacity = 0;\n    trigger.camTextOpacity = 0;\n  });\n\n  // Restore ghosts to their home positions\n  restoreGhostsToHomePositions();\n\n  // CRITICAL: Properly restore pacman and home animation state\n  if (ghosts.pacman) {\n    ghosts.pacman.visible = true;\n  }\n\n  // CRITICAL: Make sure ALL ghosts are visible after POV\n  console.log(\"🔧 POV End: Making all ghosts visible\");\n  Object.keys(ghosts).forEach((ghostKey) => {\n    if (ghosts[ghostKey]) {\n      const wasVisible = ghosts[ghostKey].visible;\n      ghosts[ghostKey].visible = true;\n\n      // Reset scale and opacity to normal\n      ghosts[ghostKey].scale.set(1, 1, 1);\n\n      const ghost = ghosts[ghostKey];\n      if (\n        ghost instanceof THREE.Mesh &&\n        ghost.material &&\n        \"opacity\" in ghost.material\n      ) {\n        ghost.material.opacity = 1;\n      } else if (ghost instanceof THREE.Group) {\n        ghost.traverse((child) => {\n          if (\n            child instanceof THREE.Mesh &&\n            child.material &&\n            \"opacity\" in child.material\n          ) {\n            child.material.opacity = 1;\n          }\n        });\n      }\n\n      console.log(\n        `🔧 ${ghostKey}: was ${wasVisible} → now ${ghosts[ghostKey].visible}`\n      );\n    }\n  });\n\n  // Check current scroll position to determine correct state\n  const homeSection = document.querySelector(\".sc--home\") as HTMLElement;\n  if (homeSection) {\n    const rect = homeSection.getBoundingClientRect();\n    const windowHeight = window.innerHeight;\n\n    // If we're back in HOME section area, switch to HOME state\n    if (rect.top <= windowHeight && rect.bottom >= 0) {\n      currentAnimationState = \"HOME\";\n      console.log(\"🏠 Restored to HOME state after POV\");\n\n      // FORCE restart HOME animation timing\n      animationStartTime = Date.now();\n      timeOffset = 0;\n      pauseTime = 0;\n    } else {\n      currentAnimationState = \"SCROLL_ANIMATION\";\n    }\n  }\n\n  // FORCE all ghosts visible one more time after state change\n  setTimeout(() => {\n    console.log(\"🔧 Final ghost visibility check\");\n    Object.keys(ghosts).forEach((ghostKey) => {\n      if (ghosts[ghostKey]) {\n        const wasVisible = ghosts[ghostKey].visible;\n        ghosts[ghostKey].visible = true;\n        if (!wasVisible) {\n          console.log(`🔧 FORCED ${ghostKey} visible`);\n        }\n      }\n    });\n  }, 100); // Small delay to ensure state change is complete\n\n  // Update debug info\n  if (window.animationDebugInfo) {\n    window.animationDebugInfo.povAnimationActive = false;\n  }\n\n  // Reset smooth camera rotation state\n  previousCameraRotation = null;\n}\n\n// Restore ghosts to home positions with FORCE visibility\nfunction restoreGhostsToHomePositions() {\n  console.log(\"🔄 Restoring ghosts to home positions\");\n\n  Object.entries(capturedPositions).forEach(\n    ([ghostKey, captured]: [string, any]) => {\n      const ghost = ghosts[ghostKey];\n      if (ghost && captured) {\n        ghost.position.copy(captured.position);\n        ghost.rotation.copy(captured.rotation);\n\n        // FORCE visibility - super important!\n        ghost.visible = true;\n\n        // Reset scale back to normal\n        ghost.scale.set(1, 1, 1);\n\n        // Reset material opacity with better handling\n        if (ghost instanceof THREE.Mesh && ghost.material) {\n          if (Array.isArray(ghost.material)) {\n            ghost.material.forEach((mat) => {\n              if (\"opacity\" in mat) mat.opacity = 1;\n            });\n          } else if (\"opacity\" in ghost.material) {\n            ghost.material.opacity = 1;\n          }\n        } else if (ghost instanceof THREE.Group) {\n          ghost.traverse((child) => {\n            if (child instanceof THREE.Mesh && child.material) {\n              if (Array.isArray(child.material)) {\n                child.material.forEach((mat) => {\n                  if (\"opacity\" in mat) mat.opacity = 1;\n                });\n              } else if (\"opacity\" in child.material) {\n                child.material.opacity = 1;\n              }\n            }\n          });\n        } else if ((ghost as any).material) {\n          // Handle the case where ghost.material exists but isn't typed\n          (ghost as any).material.opacity = 1;\n        }\n\n        console.log(`✅ Restored ${ghostKey}: visible=${ghost.visible}`);\n      }\n    }\n  );\n}\n\n// Get camera look-at point (from backup.js)\nfunction getCameraLookAtPoint(): THREE.Vector3 {\n  if (!camera) return new THREE.Vector3();\n\n  const direction = new THREE.Vector3(0, 0, -1);\n  direction.applyQuaternion(camera.quaternion);\n  const lookAtPoint = new THREE.Vector3();\n  lookAtPoint.copy(camera.position).add(direction.multiplyScalar(10));\n  return lookAtPoint;\n}\n\n// Handle POV scroll events\nfunction handlePOVScroll() {\n  const povSection = document.querySelector(\".sc--pov\") as HTMLElement;\n  if (!povSection) return;\n\n  const rect = povSection.getBoundingClientRect();\n  const windowHeight = window.innerHeight;\n\n  // Calculate if POV section is in view with buffer zone\n  const sectionTop = rect.top;\n  const sectionHeight = rect.height;\n\n  // Add buffer zone for smooth animation completion\n  const animationBuffer = windowHeight * 0.3; // 30% buffer for POV\n  const totalAnimationHeight = sectionHeight + animationBuffer;\n\n  if (\n    sectionTop <= windowHeight &&\n    sectionTop + sectionHeight >= -animationBuffer\n  ) {\n    // Section is in view (including buffer zone) - calculate progress\n    const scrolledIntoSection = Math.max(0, -sectionTop);\n    const progress = Math.min(1, scrolledIntoSection / totalAnimationHeight);\n\n    // Start POV animation if not already active and we're in SCROLL_ANIMATION or HOME state\n    if (\n      !povAnimationState.isActive &&\n      progress > 0 &&\n      (currentAnimationState === \"SCROLL_ANIMATION\" ||\n        currentAnimationState === \"HOME\")\n    ) {\n      povAnimationState.isActive = true;\n      onPOVAnimationStart();\n    }\n\n    // Update POV animation\n    if (povAnimationState.isActive) {\n      updatePOVAnimation(progress);\n    }\n  } else {\n    // Section is out of view (beyond buffer zone) - end POV animation\n    if (povAnimationState.isActive) {\n      povAnimationState.isActive = false;\n      onPOVAnimationEnd();\n    }\n  }\n}\n\n// Update Camera FOV based on animation state (INSTANT change)\nfunction updateCameraFOV() {\n  if (!camera) return;\n\n  let targetFOV = ORIGINAL_FOV;\n\n  switch (currentAnimationState) {\n    case \"HOME\":\n      targetFOV = ORIGINAL_FOV;\n      break;\n    case \"SCROLL_ANIMATION\":\n      targetFOV = ORIGINAL_FOV;\n      break;\n    case \"POV_ANIMATION\":\n      targetFOV = WIDE_FOV;\n      break;\n    default:\n      targetFOV = ORIGINAL_FOV;\n  }\n\n  // INSTANT FOV change (no animation)\n  if (camera.fov !== targetFOV) {\n    camera.fov = targetFOV;\n    camera.updateProjectionMatrix();\n  }\n}\n\n// Complete POV ghost triggering system from backup.js\nfunction updateGhostInPOV(\n  ghostKey: string,\n  ghost: THREE.Object3D,\n  pathKey: string,\n  cameraPosition: THREE.Vector3\n) {\n  if (!pathKey || !povAnimationState.ghostPOVPaths[pathKey]) return;\n\n  const path = povAnimationState.ghostPOVPaths[pathKey];\n  if (!path) return;\n\n  // Check if ghost has trigger position\n  if (ghostKey in povAnimationState.triggerPositions) {\n    const trigger = povAnimationState.triggerPositions[ghostKey];\n    const { triggerPos, ghostTextPos, camTextPos, endPosition, parent } =\n      trigger;\n\n    if (!triggerPos || !endPosition) return;\n\n    const ghostText = parent as HTMLElement; // In backup.js, parent IS the ghost text\n    const camText = parent?.querySelector(\".cmp--pov-cam\") as HTMLElement;\n\n    ghost.scale.set(0.5, 0.5, 0.5);\n\n    // Initialize ghost trigger state if not done already\n    if (trigger.hasBeenTriggered === undefined) {\n      trigger.hasBeenTriggered = false;\n      trigger.hasBeenDeactivated = false;\n      trigger.triggerCameraProgress = null;\n      trigger.ghostTextCameraProgress = null;\n      trigger.camTextCameraProgress = null;\n      trigger.endCameraProgress = null;\n      trigger.currentPathT = 0;\n      trigger.ghostTextOpacity = 0;\n      trigger.camTextOpacity = 0;\n      trigger.lastProgress = 0;\n\n      // Make ghost and text invisible initially\n      ghost.visible = false;\n      if (ghostText) {\n        ghostText.classList.add(\"hidden\");\n        ghostText.style.opacity = \"0\";\n      }\n      if (camText) {\n        camText.classList.add(\"hidden\");\n        camText.style.opacity = \"0\";\n      }\n    }\n\n    // Get current camera progress on POV path (HIGH SAMPLES for smooth animation)\n    const currentCameraProgress = findClosestProgressOnPOVPath(\n      cameraPosition,\n      4000 // MUCH higher samples for smoother interpolation\n    );\n\n    // Calculate path positions if not done already (HIGH SAMPLES for precision)\n    if (trigger.triggerCameraProgress === null) {\n      trigger.triggerCameraProgress = findClosestProgressOnPOVPath(\n        triggerPos,\n        4000\n      );\n      trigger.ghostTextCameraProgress = ghostTextPos\n        ? findClosestProgressOnPOVPath(ghostTextPos, 4000)\n        : trigger.triggerCameraProgress;\n      trigger.camTextCameraProgress = camTextPos\n        ? findClosestProgressOnPOVPath(camTextPos, 4000)\n        : trigger.ghostTextCameraProgress;\n      trigger.endCameraProgress = findClosestProgressOnPOVPath(\n        endPosition,\n        4000\n      );\n    }\n\n    const triggerProgress = trigger.triggerCameraProgress;\n    const ghostTextProgress = trigger.ghostTextCameraProgress;\n    const camTextProgress = trigger.camTextCameraProgress;\n    const endProgress = trigger.endCameraProgress;\n\n    // 1. Ghost visibility and position (EXACT backup.js logic)\n    if (\n      currentCameraProgress >= triggerProgress &&\n      currentCameraProgress <= endProgress\n    ) {\n      // Make ghost visible if not already active\n      if (!ghost.visible) {\n        ghost.visible = true;\n        trigger.hasBeenTriggered = true;\n      }\n\n      // Update ghost position\n      const normalizedProgress =\n        (currentCameraProgress - triggerProgress) /\n        (endProgress - triggerProgress);\n      let ghostProgress = Math.max(0, Math.min(1, normalizedProgress));\n\n      // SIMPLE: Use ghost progress directly (already globally smoothed)\n\n      // Update ghost position\n      const pathPoint = path.getPointAt(ghostProgress);\n      ghost.position.copy(pathPoint);\n\n      // Simple ghost orientation\n      const tangent = path.getTangentAt(ghostProgress).normalize();\n      const lookAtPoint = ghost.position.clone().add(tangent);\n      ghost.lookAt(lookAtPoint);\n\n      // Simple fade: Use ghostProgress directly for fade\n      if (ghostProgress > 0.9) {\n        const fadeOpacity = 1 - (ghostProgress - 0.9) / 0.1;\n        (ghost as any).material.opacity = Math.max(0, Math.min(1, fadeOpacity));\n      } else {\n        (ghost as any).material.opacity = 1;\n      }\n\n      // Check if ghost actually has material and if it's working\n      if (!(ghost as any).material) {\n      } else if (typeof (ghost as any).material.opacity === \"undefined\") {\n      }\n    } else {\n      // EXACT backup.js logic: Ghost invisible when outside range\n\n      ghost.visible = false;\n      trigger.hasBeenTriggered = false;\n    }\n\n    // 2. TEXT VISIBILITY: Adjusted timing ranges\n    const sectionLength = endProgress - triggerProgress;\n\n    // Text should appear later and stay visible longer\n    const fadeIn = ghostTextProgress;\n    const fadeInEnd = fadeIn + sectionLength * 0.07;\n    const stayVisibleUntil = endProgress - sectionLength * 0.15;\n    const fadeOutEnd = endProgress;\n\n    // Calculate ghost text visibility\n    let targetGhostOpacity = 0;\n    if (currentCameraProgress >= fadeIn && currentCameraProgress < fadeInEnd) {\n      const fadeProgress =\n        (currentCameraProgress - fadeIn) / (fadeInEnd - fadeIn);\n      targetGhostOpacity = fadeProgress;\n    } else if (\n      currentCameraProgress >= fadeInEnd &&\n      currentCameraProgress < stayVisibleUntil\n    ) {\n      targetGhostOpacity = 1.0;\n    } else if (\n      currentCameraProgress >= stayVisibleUntil &&\n      currentCameraProgress <= fadeOutEnd\n    ) {\n      const fadeProgress =\n        (currentCameraProgress - stayVisibleUntil) /\n        (fadeOutEnd - stayVisibleUntil);\n      targetGhostOpacity = 1.0 - fadeProgress;\n    }\n\n    // Similar logic for CAM text, but slightly offset\n    const camFadeIn = camTextProgress;\n    const camFadeInEnd = camFadeIn + sectionLength * 0.07;\n\n    let targetCamOpacity = 0;\n    if (\n      currentCameraProgress >= camFadeIn &&\n      currentCameraProgress < camFadeInEnd\n    ) {\n      const fadeProgress =\n        (currentCameraProgress - camFadeIn) / (camFadeInEnd - camFadeIn);\n      targetCamOpacity = fadeProgress * 0.8; // Max opacity 0.8\n    } else if (\n      currentCameraProgress >= camFadeInEnd &&\n      currentCameraProgress < stayVisibleUntil\n    ) {\n      targetCamOpacity = 0.8;\n    } else if (\n      currentCameraProgress >= stayVisibleUntil &&\n      currentCameraProgress <= fadeOutEnd\n    ) {\n      const fadeProgress =\n        (currentCameraProgress - stayVisibleUntil) /\n        (fadeOutEnd - stayVisibleUntil);\n      targetCamOpacity = 0.8 * (1.0 - fadeProgress);\n    }\n\n    // 3. OPACITY UPDATES\n    const fadeInSpeed = 0.2; // Faster fade in\n    const fadeOutSpeed = 0.1; // Slower fade out\n\n    // Update ghost text opacity\n    if (targetGhostOpacity > trigger.ghostTextOpacity) {\n      trigger.ghostTextOpacity +=\n        (targetGhostOpacity - trigger.ghostTextOpacity) * fadeInSpeed;\n    } else {\n      trigger.ghostTextOpacity +=\n        (targetGhostOpacity - trigger.ghostTextOpacity) * fadeOutSpeed;\n    }\n\n    // Update CAM text opacity\n    if (targetCamOpacity > trigger.camTextOpacity) {\n      trigger.camTextOpacity +=\n        (targetCamOpacity - trigger.camTextOpacity) * fadeInSpeed;\n    } else {\n      trigger.camTextOpacity +=\n        (targetCamOpacity - trigger.camTextOpacity) * fadeOutSpeed;\n    }\n\n    // 4. DOM UPDATES\n    const ghostTextOpacity = Math.max(\n      0,\n      Math.min(1, Math.round(trigger.ghostTextOpacity * 1000) / 1000)\n    );\n    const camTextOpacity = Math.max(\n      0,\n      Math.min(1, Math.round(trigger.camTextOpacity * 1000) / 1000)\n    );\n\n    // Debug text opacity calculations\n    if (ghostTextOpacity > 0 || camTextOpacity > 0) {\n    }\n\n    // Update DOM only when necessary\n    if (ghostText) {\n      if (ghostTextOpacity > 0.01) {\n        if (ghostText.classList.contains(\"hidden\")) {\n          ghostText.classList.remove(\"hidden\");\n        }\n        ghostText.style.opacity = ghostTextOpacity.toString();\n      } else if (\n        ghostTextOpacity <= 0.01 &&\n        !ghostText.classList.contains(\"hidden\")\n      ) {\n        ghostText.classList.add(\"hidden\");\n        ghostText.style.opacity = \"0\";\n      }\n    }\n\n    if (camText) {\n      if (camTextOpacity > 0.01) {\n        if (camText.classList.contains(\"hidden\")) {\n          camText.classList.remove(\"hidden\");\n        }\n        camText.style.opacity = camTextOpacity.toString();\n      } else if (\n        camTextOpacity <= 0.01 &&\n        !camText.classList.contains(\"hidden\")\n      ) {\n        camText.classList.add(\"hidden\");\n        camText.style.opacity = \"0\";\n      }\n    }\n\n    // Store position for next iteration\n    trigger.lastProgress = currentCameraProgress;\n  } else {\n    // Default behavior for ghosts without triggers (HIGH SAMPLES for smoothness)\n    const closestProgress = findClosestProgressOnPOVPath(cameraPosition, 4000);\n    const ghostPosition = path.getPointAt(closestProgress);\n    ghost.position.copy(ghostPosition);\n\n    const tangent = path.getTangentAt(closestProgress).normalize();\n    const lookAtPoint = ghostPosition.clone().add(tangent);\n    ghost.lookAt(lookAtPoint);\n\n    ghost.visible = true;\n  }\n}\n\n// Old updateGhostTextTrigger function is now integrated into updateGhostInPOV\n","import { initRenderer, setupLighting, renderer, scene } from \"./scene\";\nimport { initCamera, setupCameraResize, camera } from \"./camera\";\nimport { loadModel } from \"./objects\";\nimport { initAnimationSystem } from \"./animation-system\";\n\n// Initialize everything\nasync function init() {\n  try {\n    initRenderer();\n\n    setupLighting();\n\n    initCamera();\n\n    setupCameraResize();\n\n    await loadModel();\n\n    // Initialize animation system (handles rendering and animations)\n    initAnimationSystem();\n  } catch (error) {\n    console.error(\"Initialization error:\", error);\n  }\n}\n\n// Start when DOM is ready\nif (document.readyState === \"loading\") {\n  document.addEventListener(\"DOMContentLoaded\", init);\n} else {\n  init();\n}\n"],"names":["THREE","isMobile","window","innerWidth","CAMERA_POSITIONS","startMobile","startDesktop","secondMobile","secondDesktop","mobileLookAt","desktopLookAt","startPosition","lookAtPosition","ASSETS","scene","renderer","antialias","alpha","powerPreference","precision","container","document","querySelector","console","error","clock","setPixelRatio","pixelRatio","Math","min","devicePixelRatio","setSize","clientWidth","clientHeight","finalSection","camera","querySelectorAll","innerHeight","quaternion","clone","endQuaternion","setFromEuler","setCamera","lookAt","x","y","z","split","map","Number","updateProjectionMatrix","updateMatrix","updateMatrixWorld","mazeTexture","load","mazeMaterial","matcap","topMaterial","color","metalness","roughness","envMapIntensity","ghostMaterial","opacity","transparent","depthWrite","depthTest","blending","side","transmission","floorMaterial","pacmanMaterials","blue","white","default","materialMap","CAM_Pacman_Backframe","CAM_Pacman_Logo_1","CAM_Pacman_Logo_2","loader","Array","fill","pacmanMixer","pacman","add","ghosts","ghost1","ghost2","ghost3","ghost4","ghost5","ghostContainers","Ghost_EUR","Ghost_CHF","Ghost_YEN","Ghost_USD","Ghost_GBP","Object","values","forEach","ghost","pacmanHomePathPoints","pos","type","curveType","ghost1HomePathPoints","ghost2HomePathPoints","ghost3HomePathPoints","ghost4HomePathPoints","ghost5HomePathPoints","cameraPOVPathPoints","ghost1POVPathPoints","ghost2POVPathPoints","ghost3POVPathPoints","ghost4POVPathPoints","ghost5POVPathPoints","cameraStartPosition","cameraSecondPosition","pathsData","pacmanHomePath","points","ghost1HomePath","ghost2HomePath","ghost3HomePath","ghost4HomePath","ghost5HomePath","cameraPOVPath","ghost1POVPath","ghost2POVPath","ghost3POVPath","ghost4POVPath","ghost5POVPath","paths","entries","key","data","pathPoints","path","i","length","current","next","line","midPoint","curve","createPath","pathsMap","smoothScrollState","targetProgress","currentProgress","velocity","lastTime","currentAnimationState","capturedPositions","capturedRotations","bezierCurves","timeOffset","pauseTime","savedAnimationProgress","initialCameraPosition","initialCameraTarget","initialCameraQuaternion","animationStartTime","Date","now","resetToHomeState","position","copy","keys","ghostKey","rotation","material","isArray","mat","traverse","child","animationDebugInfo","state","scrollProgress","smoothStep","handleScroll","povAnimationState","isActive","homeSection","rect","getBoundingClientRect","windowHeight","isInHomeSection","top","bottom","sectionHeight","height","scrolledDistance","abs","currentTime","startPos","endPos","controlPoint","direction","applyQuaternion","multiplyScalar","targetSecondPositionMobile","targetSecondPositionDesktop","targetSecondPosition","secondPosition","lerpVectors","createCameraPath","ghostProgress","getPoint","originalRotation","targetRotation","PI","currentRotation","max","moveGhostOnCurve","progress","fov","getPointAt","currentQuaternion","slerpQuaternions","animateCamera","scrollY","handleIntroScroll","introSection","sectionTop","sectionBottom","centerProgress","animateIntroHeaderDirect","animateIntroBodyDirect","bodyProgress","introHeader","introBody","style","display","directProgress","scale","keyframeProgress","transform","toString","setupScrollTriggers","setupIntroAnimations","addEventListener","log","smoothScrollLoop","povSection","animationBuffer","totalAnimationHeight","scrolledIntoSection","rawProgress","previousCameraPosition","rotationStarted","cachedStartYAngle","previousCameraRotation","straightUpLookAt","visible","povAnimationActive","onPOVAnimationStart","smoothProgress","performance","deltaTime","diff","round","applySmoothScroll","cameraPosition","rotationStartingPoint","lookAtPoint","atan2","straightUpDuration","smoothTransition","forwardTangent","getSmoothCameraTangent","straightUpVector","lookAtDirection","addVectors","normalize","applySmoothCameraRotation","smoothedTangent","targetLookAt","finalLookAt","updatePOVCamera","ghostPOVPaths","pathKey","triggerPositions","trigger","triggerPos","ghostTextPos","camTextPos","endPosition","parent","ghostText","camText","set","undefined","hasBeenTriggered","hasBeenDeactivated","triggerCameraProgress","ghostTextCameraProgress","camTextCameraProgress","endCameraProgress","currentPathT","ghostTextOpacity","camTextOpacity","lastProgress","classList","currentCameraProgress","findClosestProgressOnPOVPath","triggerProgress","ghostTextProgress","camTextProgress","endProgress","normalizedProgress","pathPoint","tangent","getTangentAt","fadeOpacity","sectionLength","fadeInEnd","stayVisibleUntil","targetGhostOpacity","camFadeInEnd","targetCamOpacity","fadeInSpeed","fadeOutSpeed","contains","remove","closestProgress","ghostPosition","updateGhostInPOV","updatePOVGhosts","ghostTextRange","FADE_OUT_START","camTextRange","ghostOpacity","camOpacity","updatePOVTextElements","updatePOVTexts","toFixed","active","captured","wasVisible","setTimeout","onPOVAnimationEnd","requestAnimationFrame","animate","targetFOV","updateCameraFOV","delta","getDelta","update","t","zRotation","previousZRotation","rotationDiff","smoothFactor","smoothedRotation","animationLoop","render","createPOVPath","startRotationPoint","endRotationPoint","smoothedProgress","lastTargetProgress","CAMERA_ROTATION_SMOOTHING","LOOK_AHEAD_DISTANCE","currentTangent","lookAheadProgress","lookAheadTangent","lookBehindProgress","lookBehindTangent","averageTangent","divideScalar","dot","tempMatrix","up","targetQuaternion","setFromRotationMatrix","angleDifference","angleTo","dynamicSmoothing","smoothedQuaternion","targetPoint","samples","closestDistance","Infinity","distance","distanceTo","async","init","shadowMap","enabled","appendChild","domElement","body","ambientLight","directionalLight","shadow","mapSize","width","left","right","near","far","bias","radius","castShadow","setupLighting","aspect","Promise","resolve","reject","gltf","model","name","children","subChild","isMesh","push","item","pacmanActions","animations","clip","action","clipAction","setEffectiveWeight","play","ghostContainer","ghostGroup","startsWith","includes","clonedChild","receiveShadow","node","loadModel","initAnimationSystem","readyState"],"sourceRoot":""}