{"version":3,"file":"script.js","mappings":"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","sources":["webpack://cam-3d-animation/webpack/bootstrap","webpack://cam-3d-animation/webpack/runtime/compat get default export","webpack://cam-3d-animation/webpack/runtime/define property getters","webpack://cam-3d-animation/webpack/runtime/hasOwnProperty shorthand","webpack://cam-3d-animation/external var \"THREE\"","webpack://cam-3d-animation/./src/config/config.ts","webpack://cam-3d-animation/./src/config/dom-elements.ts","webpack://cam-3d-animation/external var \"gsap\"","webpack://cam-3d-animation/external var \"ScrollTrigger\"","webpack://cam-3d-animation/./src/paths/pathpoints.ts","webpack://cam-3d-animation/./src/core/camera.ts","webpack://cam-3d-animation/./src/core/scene.ts","webpack://cam-3d-animation/./src/core/materials.ts","webpack://cam-3d-animation/./src/core/objects.ts","webpack://cam-3d-animation/./src/paths/paths.ts","webpack://cam-3d-animation/./src/animation/util.ts","webpack://cam-3d-animation/./src/animation/home-scroll.ts","webpack://cam-3d-animation/./src/animation/home-loop.ts","webpack://cam-3d-animation/./src/main.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = THREE;","export const isMobile = window.innerWidth < 768;\n\nexport const ASSETS = {\n  mazeTexture: \"https://c-am.b-cdn.net/CAM/matcap24.png\",\n  mazeModel: \"https://c-am.b-cdn.net/CAM/c-am-assets-3.glb\",\n};\n","const SELECTORS = {\n  mazeContainer: \".el--home-maze.el\",\n  canvas: \"canvas\",\n\n  homeSection: \".sc--home.sc\",\n  introSection: \".sc--intro.sc\",\n  povSection: \".sc--pov.sc\",\n  finalSection: \".sc--final.sc\",\n  finalContainer: \".cr--final.cr\",\n\n  scrollComponent: \".cmp--scroll.cmp\",\n  parentElements: \".cmp--pov.cmp\",\n\n  pov: \".pov\",\n  cam: \".cam\",\n};\n\nexport const DOM_ELEMENTS = {\n  mazeContainer: document.querySelector(SELECTORS.mazeContainer) as HTMLElement,\n  canvas: document.querySelector(SELECTORS.canvas) as HTMLCanvasElement,\n\n  homeSection: document.querySelector(SELECTORS.homeSection) as HTMLElement,\n  introSection: document.querySelector(SELECTORS.introSection) as HTMLElement,\n  povSection: document.querySelector(SELECTORS.povSection) as HTMLElement,\n  finalSection: document.querySelector(SELECTORS.finalSection) as HTMLElement,\n  finalContainer: document.querySelector(\n    SELECTORS.finalContainer\n  ) as HTMLElement,\n\n  parentElements: document.querySelectorAll(\n    SELECTORS.parentElements\n  ) as NodeListOf<Element>,\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = gsap;","const __WEBPACK_NAMESPACE_OBJECT__ = ScrollTrigger;","import * as THREE from \"three\";\nimport { MazePathPoint, PathPoint, CameraPathPoint } from \"../types/types\";\nimport { isMobile } from \"../config/config\";\n\nconst objectHomeScrollEndPathPoint = new THREE.Vector3(0.55675, 0.35, 0.45175);\n\nconst cameraPathPointsConfig = {\n  startMobile: new THREE.Vector3(0.5, 2.5, 2.5),\n  startDesktop: new THREE.Vector3(-2, 2.5, 2),\n  secondMobile: new THREE.Vector3(0.5, 2.5, 2),\n  secondDesktop: new THREE.Vector3(-1.5, 3, 0.75),\n  mobileLookAt: new THREE.Vector3(0.5, 0.5, -1.5),\n  desktopLookAt: new THREE.Vector3(-1.25, 0.5, 0.25),\n  cameraLookAtSecondDesktop: new THREE.Vector3(-0.75, 0.5, -0.75),\n  cameraLookAtSecondMobile: new THREE.Vector3(-0.75, 0.5, -0.75), // TODO\n\n  cameraHomeScrollEndLookAt: new THREE.Vector3(0.55675, -5, 0.35),\n  thirdPosition: new THREE.Vector3(0.55675, 3, 0.45175),\n\n  cameraHomeScrollEndPathPoint: new THREE.Vector3(0.55675, 0.5, 0.45175),\n};\n\n// determine positions and look at - changed if is mobile\nconst startPosition = isMobile\n  ? cameraPathPointsConfig.startMobile\n  : cameraPathPointsConfig.startDesktop;\nconst secondPosition = isMobile\n  ? cameraPathPointsConfig.secondMobile\n  : cameraPathPointsConfig.secondDesktop;\nconst lookAtPosition = isMobile\n  ? cameraPathPointsConfig.mobileLookAt\n  : cameraPathPointsConfig.desktopLookAt;\nconst cameraLookAtSecondPosition = isMobile\n  ? cameraPathPointsConfig.cameraLookAtSecondMobile\n  : cameraPathPointsConfig.cameraLookAtSecondDesktop;\n\nconst thirdPosition = cameraPathPointsConfig.thirdPosition;\nconst cameraHomeScrollEndLookAt =\n  cameraPathPointsConfig.cameraHomeScrollEndLookAt;\nconst cameraHomeScrollEndPathPoint =\n  cameraPathPointsConfig.cameraHomeScrollEndPathPoint;\n\n/*\nOptionen / Kurven Komibs:\n\ngerade ✅\n\nrechts ✅\n\nlinks ✅\n\nweite Kurven ✅\n\nkurze Kurven ❌\n\n\ncurveCheckPoints: []\n\n \n*/\n\n// upperArc = right - clockwise\n// lowerArc = left - counter-clockwise\n\nconst pacmanHomePathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.301),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, -0.2015),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, -0.0005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, -0.2015),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"upperArc\",\n    curveCheckPoints: [\n      new THREE.Vector3(-0.44825, 0.55, -0.1),\n      new THREE.Vector3(-0.398, 0.55, -0.0005),\n      new THREE.Vector3(-0.34775, 0.55, 0.0999),\n    ]\n  },\n  // {\n  //   pos: new THREE.Vector3(-0.398, 0.55, -0.0005),\n  //   type: \"curve\",\n  //   arc: \"lowerArc\",\n  // },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.1),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.4015),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.6025),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.904),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 1.0045),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 1.105),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 1.2055),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 1.0045),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.0045),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.75325),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.6025), type: \"straight\" },\n];\n\nconst ghost1HomePathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 0.301),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.2005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.1),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, -0.0005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.75325),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.75775, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.75325),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, 0.75325),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.301),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.502),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.004, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 1.0045),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.0965, 0.55, 1.0045),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n];\n\nconst ghost2HomePathPoints: MazePathPoint[] = [\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.004, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.6025),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.4015),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.502), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.3055, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.904),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 1.105),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 1.2055),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.1),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, -0.0005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.1),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.2005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, -0.15125),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.3055, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.904),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 1.0045),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.0965, 0.55, 1.0045),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n];\n\nconst ghost3HomePathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.75325), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, -0.15125),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.15125),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, -0.2015),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.15475, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, -0.0005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.55675, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.2005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, 0.75325),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.75325),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.009, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.904), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.105),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 1.2055),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.75775, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.75325),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.004, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.808, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.75325), type: \"straight\" },\n];\n\nconst ghost4HomePathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.65725, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 1.0045),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 1.2055),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 1.105),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 1.0045),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.904),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 0.301),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.4015),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.301),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.2005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, -0.2015),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.15975, 0.55, 0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.0005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, -0.2015),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.0005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, 0.75325),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.6025), type: \"straight\" },\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.4015), type: \"straight\" },\n];\n\nconst ghost5HomePathPoints: MazePathPoint[] = [\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.04975),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.0005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, -0.2015),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 0.0005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.1),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.4015),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.3055, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.904),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.904),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.105),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 1.2055),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, -0.2015),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, -0.101), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.1),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.2005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, -0.15125),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.04975),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n];\n\nconst cameraHomeScrollPathPoints: CameraPathPoint[] = [\n  { pos: thirdPosition, lookAt: cameraHomeScrollEndLookAt },\n  // { pos: startPosition, lookAt: lookAtPosition },\n  { pos: secondPosition, lookAt: cameraLookAtSecondPosition },\n  { pos: thirdPosition, lookAt: cameraHomeScrollEndLookAt, },\n  { pos: cameraHomeScrollEndPathPoint, lookAt: cameraHomeScrollEndLookAt },\n];\n\nconst cameraPOVPathPoints: CameraPathPoint[] = [\n  {\n    pos: new THREE.Vector3(0.55675, 0.5, 0.45175),\n    type: \"curve\",\n    arc: \"forwardDownArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.6025),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.607, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.9085, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.85375),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.15525),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.9085, 0.55, 1.2055),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.808, 0.55, 1.2055),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 1.15525),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 1.05475),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.7075, 0.55, 1.0045),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.205, 0.55, 1.0045),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.05475),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.15525),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.205, 0.55, 1.2055),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.5065, 0.55, 1.2055),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 1.306),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 1, 2.0095),\n    type: \"straight\",\n  },\n];\n\nconst ghost1POVPathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.75325),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.009, 0.55, 0.8035), type: \"straight\" },\n  { pos: new THREE.Vector3(0.9085, 0.55, 0.8035), type: \"straight\" },\n];\n\nconst ghost2POVPathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.009, 0.55, 1.2055),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 1.15525), type: \"straight\" },\n  { pos: new THREE.Vector3(0.95875, 0.55, 1.05475), type: \"straight\" },\n];\n\nconst ghost3POVPathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.904), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.95425),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.406, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.5065, 0.55, 1.0045), type: \"straight\" },\n];\n\nconst ghost4POVPathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(0.15475, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.05475),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.205, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.3055, 0.55, 1.0045), type: \"straight\" },\n];\n\nconst ghost5POVPathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(0.55675, 0.55, 1.306), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 1.25575),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.5065, 0.55, 1.2055), type: \"straight\" },\n  { pos: new THREE.Vector3(0.406, 0.55, 1.2055), type: \"straight\" },\n];\n\nexport const povTriggerPositions = {\n  ghost1: {\n    triggerPos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    ghostTextPos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    camTextPos: new THREE.Vector3(0.75775, 0.55, 0.8035),\n    endPosition: new THREE.Vector3(0.85825, 0.55, 0.8035),\n  },\n  ghost2: {\n    triggerPos: new THREE.Vector3(0.9085, 0.55, 0.8035),\n    ghostTextPos: new THREE.Vector3(0.95875, 0.55, 0.85375),\n    camTextPos: new THREE.Vector3(0.95875, 0.55, 0.904),\n    endPosition: new THREE.Vector3(0.95875, 0.55, 1.0045),\n  },\n  ghost3: {\n    triggerPos: new THREE.Vector3(0.75775, 0.55, 1.05475),\n    ghostTextPos: new THREE.Vector3(0.7075, 0.55, 1.0045),\n    camTextPos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    endPosition: new THREE.Vector3(0.55675, 0.55, 1.0045),\n  },\n  ghost4: {\n    triggerPos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    ghostTextPos: new THREE.Vector3(0.5065, 0.55, 1.0045),\n    camTextPos: new THREE.Vector3(0.45625, 0.55, 1.0045),\n    endPosition: new THREE.Vector3(0.35575, 0.55, 1.0045),\n  },\n  ghost5: {\n    triggerPos: new THREE.Vector3(0.15475, 0.55, 1.15525),\n    ghostTextPos: new THREE.Vector3(0.205, 0.55, 1.2055),\n    camTextPos: new THREE.Vector3(0.25525, 0.55, 1.2055),\n    endPosition: new THREE.Vector3(0.35575, 0.55, 1.2055),\n  },\n};\n\nexport function getStartPosition() {\n  return startPosition;\n}\n\nexport function getSecondPosition() {\n  return secondPosition;\n}\n\nexport function getLookAtPosition() {\n  return lookAtPosition;\n}\n\nexport const homePaths = {\n  pacman: pacmanHomePathPoints,\n  ghost1: ghost1HomePathPoints,\n  ghost2: ghost2HomePathPoints,\n  ghost3: ghost3HomePathPoints,\n  ghost4: ghost4HomePathPoints,\n  ghost5: ghost5HomePathPoints,\n} as const;\n\nexport const povPaths = {\n  camera: cameraPOVPathPoints,\n  ghost1: ghost1POVPathPoints,\n  ghost2: ghost2POVPathPoints,\n  ghost3: ghost3POVPathPoints,\n  ghost4: ghost4POVPathPoints,\n  ghost5: ghost5POVPathPoints,\n} as const;\n\nexport function createHomeScrollPathPoints(\n  pausedPositions: Record<string, THREE.Vector3>\n): Record<string, PathPoint[]> {\n  const scrollPaths: Record<string, PathPoint[]> = {};\n\n  Object.entries(pausedPositions).forEach(([key, pausedPos]) => {\n    const arcPoint = new THREE.Vector3(\n      pausedPos.x * (1 / 4) + objectHomeScrollEndPathPoint.x * (3 / 4),\n      1.5,\n      pausedPos.z * (1 / 4) + objectHomeScrollEndPathPoint.z * (3 / 4)\n    );\n\n    scrollPaths[key] = [\n      { pos: pausedPos.clone() },\n      { pos: arcPoint },\n      { pos: objectHomeScrollEndPathPoint },\n    ];\n  });\n\n  return scrollPaths;\n}\n\nexport function getCameraHomeScrollPathPoints(): CameraPathPoint[] {\n  return cameraHomeScrollPathPoints;\n}\n","import * as THREE from \"three\";\nimport gsap from \"gsap\";\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\nimport { getLookAtPosition, getStartPosition } from \"../paths/pathpoints\";\n\ngsap.registerPlugin(ScrollTrigger);\n\nconst CAMERA_CONFIG = {\n  originalFOV: 50,\n  wideFOV: 80,\n  near: 0.001,\n  far: 100,\n};\n\nexport const camera = new THREE.PerspectiveCamera(\n  50,\n  window.innerWidth / window.innerHeight,\n  CAMERA_CONFIG.near,\n  CAMERA_CONFIG.far\n);\n\nexport function setupCamera(): void {\n  const startPosition = getStartPosition();\n  const lookAtPosition = getLookAtPosition();\n  camera.position.set(startPosition.x, startPosition.y, startPosition.z);\n  camera.lookAt(lookAtPosition.x, lookAtPosition.y, lookAtPosition.z);\n}\n","import * as THREE from \"three\";\nimport { isMobile } from \"../config/config\";\nimport { DOM_ELEMENTS } from \"../config/dom-elements\";\nimport { camera } from \"./camera\";\n\nexport const scene = new THREE.Scene();\n\nconst renderer = new THREE.WebGLRenderer({\n  antialias: true,\n  alpha: true,\n  powerPreference: \"high-performance\",\n  precision: \"highp\",\n});\n\nconst clock = new THREE.Clock();\nconst frameCallbacks: (() => void)[] = [];\n\nexport function initRenderer(): void {\n  enhanceAntiAliasing();\n\n  if (DOM_ELEMENTS.mazeContainer) {\n    renderer.setSize(\n      DOM_ELEMENTS.mazeContainer.clientWidth,\n      DOM_ELEMENTS.mazeContainer.clientHeight\n    );\n    DOM_ELEMENTS.mazeContainer.appendChild(renderer.domElement);\n  } else {\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n  }\n\n  setPixelRatio();\n  window.addEventListener(\"resize\", setPixelRatio);\n\n  renderer.render(scene, camera);\n}\n\nfunction enhanceAntiAliasing(): void {\n  if (isMobile) {\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n  } else {\n    renderer.setPixelRatio(window.devicePixelRatio);\n  }\n  renderer.shadowMap.enabled = true;\n  renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n}\n\nfunction setPixelRatio(): void {\n  const pixelRatio = Math.min(window.devicePixelRatio, isMobile ? 2 : 3);\n  renderer.setPixelRatio(pixelRatio);\n\n  if (DOM_ELEMENTS.mazeContainer) {\n    renderer.setSize(\n      DOM_ELEMENTS.mazeContainer.clientWidth,\n      DOM_ELEMENTS.mazeContainer.clientHeight\n    );\n  } else {\n    renderer.setSize(window.innerWidth, window.innerHeight);\n  }\n}\n\nexport function setupLighting(): void {\n  const ambientLight = new THREE.AmbientLight(0xffffff);\n  scene.add(ambientLight);\n\n  const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n  scene.add(directionalLight);\n  directionalLight.position.set(-5, 15, 10);\n  directionalLight.shadow.mapSize.width = 4096;\n  directionalLight.shadow.mapSize.height = 4096;\n  directionalLight.shadow.camera.left = -20;\n  directionalLight.shadow.camera.right = 20;\n  directionalLight.shadow.camera.top = 20;\n  directionalLight.shadow.camera.bottom = -20;\n  directionalLight.shadow.camera.near = 0.1;\n  directionalLight.shadow.camera.far = 50;\n  directionalLight.shadow.bias = -0.001;\n  directionalLight.shadow.radius = 3;\n  directionalLight.castShadow = true;\n}\n\nexport function startRenderLoop(): void {\n  const render = () => {\n    frameCallbacks.forEach((callback) => callback());\n\n    renderer.render(scene, camera);\n\n    requestAnimationFrame(render);\n  };\n  render();\n}\n\nexport function onFrame(callback: () => void): void {\n  frameCallbacks.push(callback);\n}\n\nexport { renderer, clock };\n","import * as THREE from \"three\";\nimport { ASSETS } from \"../config/config\";\n\nconst textureLoader = new THREE.TextureLoader();\n\nconst mazeTexture = textureLoader.load(ASSETS.mazeTexture);\n\nexport const mazeMaterial = new THREE.MeshMatcapMaterial({\n  matcap: mazeTexture,\n});\n\nexport const topMaterial = new THREE.MeshStandardMaterial({\n  color: 0xf2f9f9,\n  metalness: 0.4,\n  roughness: 0,\n  envMapIntensity: 10,\n});\n\nexport const ghostMaterial = new THREE.MeshPhysicalMaterial({\n  color: 0xffffff,\n  opacity: 1,\n  transparent: true,\n  depthWrite: false,\n  depthTest: true,\n  blending: THREE.NormalBlending,\n  side: THREE.DoubleSide,\n  roughness: 0.75,\n  metalness: 0.2,\n  transmission: 0.5,\n});\n\nexport const floorMaterial = new THREE.MeshStandardMaterial({\n  color: 0xffffff,\n  opacity: 0.8,\n  transparent: true,\n  roughness: 0.5,\n  metalness: 0.1,\n});\n\nconst pacmanMaterials = {\n  blue: new THREE.MeshBasicMaterial({\n    color: 0x1469d3,\n    transparent: true,\n    opacity: 1,\n  }),\n  white: new THREE.MeshBasicMaterial({\n    color: 0xffffff,\n    transparent: true,\n    opacity: 1,\n  }),\n  default: new THREE.MeshBasicMaterial({\n    color: 0x1469d3,\n    transparent: true,\n    opacity: 1,\n  }),\n};\n\nexport const materialMap = {\n  CAM_Pacman_Backframe: pacmanMaterials.blue,\n  \"CAM-Pacman_Bitcoin_1\": pacmanMaterials.white,\n  \"CAM-Pacman_Bitcoin_2\": pacmanMaterials.white,\n  \"CAM-Pacman_Bottom\": pacmanMaterials.blue,\n  \"CAM-Pacman_Top\": pacmanMaterials.blue,\n  \"CAM-Pacman_Eye\": pacmanMaterials.white,\n  CAM_Pacman_Logo_1: pacmanMaterials.white,\n  CAM_Pacman_Logo_2: pacmanMaterials.white,\n  \"CAM-Pacman_Shell_Boolean\": pacmanMaterials.blue,\n  \"CAM-Pacman_Shell\": pacmanMaterials.blue,\n  \"CAM-Pacman_Bottom_electronic\": pacmanMaterials.white,\n  \"CAM-Pacman_Top_electronic\": pacmanMaterials.white,\n  \"CAM-Pacman_Bottom_Text\": pacmanMaterials.white,\n  \"CAM-Pacman_Top_Text\": pacmanMaterials.white,\n  default: pacmanMaterials.blue,\n};\n","import * as THREE from \"three\";\nimport { ASSETS } from \"../config/config\";\nimport { GhostContainer } from \"../types/types\";\nimport { clock } from \"./scene\";\nimport {\n  mazeMaterial,\n  topMaterial,\n  ghostMaterial,\n  floorMaterial,\n  materialMap,\n} from \"./materials\";\n\nexport { clock };\n\nconst loader = new THREE.GLTFLoader();\n\nexport let pacmanMixer: THREE.AnimationMixer;\n\nexport const pacman = new THREE.Group();\n\nexport const ghosts: GhostContainer = {\n  pacman: pacman,\n  ghost1: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost2: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost3: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost4: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost5: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n};\n\nconst ghostContainers = {\n  Ghost_EUR: ghosts.ghost1,\n  Ghost_CHF: ghosts.ghost2,\n  Ghost_YEN: ghosts.ghost3,\n  Ghost_USD: ghosts.ghost4,\n  Ghost_GBP: ghosts.ghost5,\n};\n\nexport async function loadModel(scene: THREE.Scene): Promise<void> {\n  Object.values(ghosts).forEach((ghost) => scene.add(ghost));\n  scene.add(pacman);\n  return new Promise((resolve, reject) => {\n    loader.load(\n      ASSETS.mazeModel,\n      function (gltf) {\n        const model = gltf.scene;\n\n        // Print all elements in the 3D model\n        console.log(\"=== 3D Model Hierarchy ===\");\n        model.traverse((obj: THREE.Object3D) => {\n          console.log(`[${obj.type}] ${obj.name}`);\n        });\n        console.log(\"=========================\");\n\n        model.traverse((child: THREE.Object3D) => {\n          if (child.name === \"CAM-Pacman\") {\n            const children: THREE.Object3D[] = [];\n            child.traverse((subChild: THREE.Object3D) => {\n              if (\n                (subChild as any).isMesh &&\n                subChild.name !== \"CAM-Pacman_Shell\" &&\n                subChild.name !== \"CAM-Pacman_Shell_Boolean\"\n              ) {\n                const material =\n                  materialMap[subChild.name as keyof typeof materialMap] ||\n                  materialMap.default;\n                (subChild as THREE.Mesh).material = material;\n                children.push(subChild);\n              } else if (\n                subChild.name === \"CAM-Pacman_Shell\" ||\n                subChild.name === \"CAM-Pacman_Shell_Boolean\"\n              ) {\n                subChild.visible = false;\n              }\n            });\n\n            children.forEach((item) => ghosts.pacman.add(item));\n            ghosts.pacman.scale.set(0.05, 0.05, 0.05);\n            ghosts.pacman.rotation.set(Math.PI / 2, Math.PI / 2, Math.PI / 4);\n\n            pacmanMixer = new THREE.AnimationMixer(ghosts.pacman);\n            const pacmanActions: { [key: string]: THREE.AnimationAction } = {};\n\n            gltf.animations.forEach((clip: THREE.AnimationClip) => {\n              const action = pacmanMixer.clipAction(clip);\n              pacmanActions[clip.name] = action;\n              action.setEffectiveWeight(1);\n              action.play();\n            });\n          } else if (\n            child.name &&\n            ghostContainers[child.name as keyof typeof ghostContainers]\n          ) {\n            const ghostContainer =\n              ghostContainers[child.name as keyof typeof ghostContainers];\n            const ghostGroup = new THREE.Group();\n\n            child.rotation.z = Math.PI;\n            child.rotation.x = Math.PI / 2;\n            child.scale.set(0.75, 0.75, 0.75);\n\n            const children: THREE.Object3D[] = [];\n            child.traverse((subChild: THREE.Object3D) => {\n              if ((subChild as any).isMesh) {\n                if (subChild.name && subChild.name.startsWith(\"Ghost_Mesh\")) {\n                  (subChild as THREE.Mesh).material = ghostMaterial;\n                } else if (\n                  subChild.name &&\n                  [\"EUR\", \"CHF\", \"YEN\", \"USD\", \"GBP\"].includes(subChild.name)\n                ) {\n                  subChild.visible = false;\n                }\n                children.push(subChild);\n              }\n            });\n\n            children.forEach((item) => {\n              if (\n                item.name &&\n                (item.name.includes(\"EUR\") ||\n                  item.name.startsWith(\"Ghost_Mesh\"))\n              ) {\n                item.rotation.z = Math.PI;\n                item.rotation.x = Math.PI / 2;\n              } else {\n                item.rotation.set(0, 0, 0);\n              }\n              ghostGroup.add(item);\n            });\n\n            if (ghostContainer) {\n              ghostContainer.add(ghostGroup);\n            } else {\n              console.warn(`ghostContainer for ${child.name} is undefined!`);\n            }\n          }\n\n          if ((child as any).isMesh) {\n            if (child.name === \"CAM-Arena_LowRes_Top\") {\n              (child as THREE.Mesh).material = topMaterial;\n              child.castShadow = true;\n            } else if (child.name === \"CAM-Arena_LowRes_Bottom\") {\n              (child as THREE.Mesh).material = mazeMaterial;\n              child.castShadow = true;\n            } else if (child.name === \"CAM-Floor\") {\n              const clonedChild = child.clone();\n              child.position.y = -0.1;\n              child.position.x = 0;\n              child.position.z = 0;\n              (child as THREE.Mesh).material = new THREE.MeshBasicMaterial({\n                color: 0xffffff,\n                opacity: 1,\n                transparent: false,\n                depthWrite: true,\n                depthTest: true,\n                side: THREE.FrontSide,\n              });\n              child.receiveShadow = false;\n              child.castShadow = true;\n              child.scale.set(0.5, 0.5, 0.5);\n\n              (clonedChild as THREE.Mesh).material = floorMaterial;\n              clonedChild.position.y = -0.5;\n              clonedChild.receiveShadow = true;\n              scene.add(clonedChild);\n            }\n          }\n        });\n\n        model.traverse(function (node: THREE.Object3D) {\n          if ((node as any).isMesh) {\n            node.castShadow = true;\n            node.receiveShadow = true;\n          }\n        });\n\n        scene.add(model);\n        model.position.set(0.5, 0.5, 0.5);\n\n        resolve();\n      },\n      function (progress: any) { },\n      function (error: any) {\n        reject(error);\n      }\n    );\n  });\n}\n","import * as THREE from \"three\";\nimport { MazePathPoint, PathPoint, CameraPathPoint } from \"../types/types\";\nimport {\n  homePaths,\n  createHomeScrollPathPoints,\n  getCameraHomeScrollPathPoints,\n} from \"./pathpoints\";\n\n// Cache for created paths\nconst pathCache = new Map<string, THREE.CurvePath<THREE.Vector3>>();\n\n// Optional utility for smoothing tangent directions when following paths\nexport class TangentSmoother {\n  private currentTangent: THREE.Vector3;\n  private smoothing: number;\n\n  constructor(initialTangent: THREE.Vector3, smoothing: number = 0.05) {\n    this.currentTangent = initialTangent.clone();\n    this.smoothing = smoothing;\n  }\n\n  update(targetTangent: THREE.Vector3): THREE.Vector3 {\n    this.currentTangent.lerp(targetTangent, this.smoothing);\n    return this.currentTangent.normalize();\n  }\n\n  reset(newTangent: THREE.Vector3): void {\n    this.currentTangent.copy(newTangent);\n  }\n\n  setSmoothingFactor(smoothing: number): void {\n    this.smoothing = Math.max(0.001, Math.min(1, smoothing)); // Clamp between 0.001 and 1\n  }\n}\n\nfunction createMazePath(\n  pathPoints: MazePathPoint[],\n  pathName?: string\n): THREE.CurvePath<THREE.Vector3> {\n  const cacheKey = pathPoints\n    .map(\n      (p) => `${p.pos.x},${p.pos.y},${p.pos.z},${p.type},${p.arc || \"\"}`\n    )\n    .join(\"|\");\n\n  if (pathCache.has(cacheKey)) {\n    return pathCache.get(cacheKey)!;\n  }\n\n  const path = new THREE.CurvePath<THREE.Vector3>();\n\n  let i = 0;\n  while (i < pathPoints.length - 1) {\n    const current = pathPoints[i];\n    const next = pathPoints[i + 1];\n\n    // Check if current point has curveCheckPoints\n    if (current.curveCheckPoints && current.curveCheckPoints.length > 0) {\n      // Create CatmullRomCurve3 with start point, checkpoints, and end point\n      const catmullPoints = [current.pos, ...current.curveCheckPoints, next.pos];\n      console.log(\n        `Creating CatmullRomCurve3 for ${pathName} with curveCheckPoints:`,\n        catmullPoints.map((p) => `(${p.x}, ${p.y}, ${p.z})`)\n      );\n      path.add(new THREE.CatmullRomCurve3(catmullPoints, false, \"centripetal\", 0.5));\n    } else if (current.type === \"straight\") {\n      console.log(\n        \"Creating LineCurve3 from\",\n        `(${current.pos.x}, ${current.pos.y}, ${current.pos.z})`,\n        \"to\",\n        `(${next.pos.x}, ${next.pos.y}, ${next.pos.z})`\n      );\n      path.add(new THREE.LineCurve3(current.pos, next.pos));\n    } else {\n      // Create curve using existing logic\n      const midPoint = createNormalCurveMidPoint(current, next);\n      console.log(\n        \"Creating QuadraticBezierCurve3 from\",\n        `(${current.pos.x}, ${current.pos.y}, ${current.pos.z})`,\n        \"via\",\n        `(${midPoint.x}, ${midPoint.y}, ${midPoint.z})`,\n        \"to\",\n        `(${next.pos.x}, ${next.pos.y}, ${next.pos.z})`\n      );\n      path.add(\n        new THREE.QuadraticBezierCurve3(current.pos, midPoint, next.pos)\n      );\n    }\n\n    i++;\n  }\n\n  pathCache.set(cacheKey, path);\n  return path;\n}\n\nfunction createNormalCurveMidPoint(\n  current: MazePathPoint,\n  next: MazePathPoint\n): THREE.Vector3 {\n  if (current.arc) {\n    const curveType = current.arc;\n\n    if (curveType === \"upperArc\") {\n      return new THREE.Vector3(current.pos.x, current.pos.y, next.pos.z);\n    } else if (curveType === \"lowerArc\") {\n      return new THREE.Vector3(next.pos.x, current.pos.y, current.pos.z);\n    } else if (curveType === \"forwardDownArc\") {\n      return new THREE.Vector3(current.pos.x, next.pos.y, current.pos.z);\n    }\n  }\n\n  return new THREE.Vector3(current.pos.x, current.pos.y, next.pos.z);\n}\n\nfunction createHomeScrollPath(\n  pathPoints: PathPoint[]\n): THREE.CurvePath<THREE.Vector3> {\n  const path = new THREE.CurvePath<THREE.Vector3>();\n\n  if (pathPoints.length === 3) {\n    const curve = new THREE.QuadraticBezierCurve3(\n      pathPoints[0].pos,\n      pathPoints[1].pos,\n      pathPoints[2].pos\n    );\n    path.add(curve);\n  }\n\n  return path;\n}\n\nfunction createCameraHomeScrollPath(\n  pathPoints: CameraPathPoint[]\n): THREE.CurvePath<THREE.Vector3> {\n  const path = new THREE.CurvePath<THREE.Vector3>();\n\n  if (pathPoints.length === 4) {\n    const curve = new THREE.CubicBezierCurve3(\n      pathPoints[0].pos,\n      pathPoints[1].pos,\n      pathPoints[2].pos,\n      pathPoints[3].pos\n    );\n    path.add(curve);\n  }\n\n  return path;\n}\n\nexport function getHomePaths(): Record<string, THREE.CurvePath<THREE.Vector3>> {\n  const paths: Record<string, THREE.CurvePath<THREE.Vector3>> = {};\n\n  Object.entries(homePaths).forEach(([key, pathPoints]) => {\n    paths[key] = createMazePath(pathPoints, key);\n  });\n\n  return paths;\n}\n\n// when scrolling, this is where the ghosts are going into the void\nexport function getHomeScrollPaths(\n  pausedPositions: Record<string, THREE.Vector3>\n): Record<string, THREE.CurvePath<THREE.Vector3>> {\n  const scrollPathPoints = createHomeScrollPathPoints(pausedPositions);\n  const cameraPathPoints = getCameraHomeScrollPathPoints();\n\n  const paths: Record<string, THREE.CurvePath<THREE.Vector3>> = {\n    camera: createCameraHomeScrollPath(cameraPathPoints),\n  };\n\n  Object.entries(scrollPathPoints).forEach(([key, pathPoints]) => {\n    paths[key] = createHomeScrollPath(pathPoints);\n  });\n\n  return paths;\n}\n","import * as THREE from \"three\";\n\nexport function calculateObjectOrientation(\n  object: THREE.Object3D,\n  tangent: THREE.Vector3,\n  objectType: \"pacman\" | \"ghost\" | \"camera\" = \"ghost\"\n): void {\n  if (!tangent || tangent.length() === 0) return;\n\n  const targetRotation = Math.atan2(tangent.x, tangent.z);\n\n  if (objectType === \"pacman\") {\n    object.rotation.set(Math.PI / 2, Math.PI, targetRotation + Math.PI / 2);\n  } else if (objectType === \"ghost\") {\n    object.rotation.set(0, targetRotation, 0);\n  } else if (objectType === \"camera\") {\n    const lookAtPoint = object.position.clone().add(tangent);\n    object.lookAt(lookAtPoint);\n  }\n}\n\nexport function slerpToLayDown(\n  object: THREE.Object3D,\n  startQuat: THREE.Quaternion,\n  progress: number\n) {\n  const layDownQuat1 = new THREE.Quaternion().setFromEuler(\n    new THREE.Euler(Math.PI / 2, 0, 0)\n  );\n  const layDownQuat2 = new THREE.Quaternion().setFromEuler(\n    new THREE.Euler(-Math.PI / 2, 0, 0)\n  );\n\n  const d1 = startQuat.angleTo(layDownQuat1);\n  const d2 = startQuat.angleTo(layDownQuat2);\n  const targetQuat = d1 < d2 ? layDownQuat1 : layDownQuat2;\n\n  object.quaternion.copy(startQuat.clone().slerp(targetQuat, progress));\n}\n","import gsap from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport * as THREE from \"three\";\nimport { camera } from \"../core/camera\";\nimport { ghosts, pacman } from \"../core/objects\";\nimport { getCameraHomeScrollPathPoints } from \"../paths/pathpoints\";\nimport { getHomeScrollPaths } from \"../paths/paths\";\nimport { homeLoopHandler } from \"./home-loop\";\nimport { slerpToLayDown } from \"./util\";\n\nlet homeScrollTimeline: gsap.core.Timeline | null = null;\nlet hasAnimatedFirstScroll = false;\n\nconst characterSpeeds: Record<string, number> = {\n  pacman: 0.9,\n  ghost1: 1,\n  ghost2: 1.1,\n  ghost3: 1.2,\n  ghost4: 1.3,\n  ghost5: 1.4,\n};\n\nexport function initHomeScrollAnimation(\n  pausedPositions: Record<string, THREE.Vector3>,\n  pausedRotations: Record<string, THREE.Quaternion>\n) {\n  if (homeScrollTimeline) {\n    homeScrollTimeline.kill();\n    homeScrollTimeline = null;\n  }\n\n  const scrollPaths = getHomeScrollPaths(pausedPositions);\n  const cameraPathPoints = getCameraHomeScrollPathPoints();\n\n  homeScrollTimeline = gsap\n    .timeline({\n      scrollTrigger: {\n        id: \"homeScroll\",\n        trigger: \".sc--home\",\n        start: \"top top\",\n        end: \"bottom top\",\n        scrub: 0.5,\n        onScrubComplete: () => {\n          // on scroll complete, check home loop handler\n          homeLoopHandler();\n        },\n      },\n    })\n    .to(\n      { progress: 0 },\n      {\n        progress: 1,\n        immediateRender: false,\n        onUpdate: function () {\n          const progress = this.targets()[0].progress;\n          updateScrollAnimation(\n            progress,\n            scrollPaths,\n            pausedRotations,\n            cameraPathPoints\n          );\n        },\n      }\n    );\n\n  // Sync timeline progress to current scroll position, with ease-in on first scroll\n  // TODO\n  const trigger = ScrollTrigger.getById(\"homeScroll\");\n  if (trigger && homeScrollTimeline) {\n    if (!hasAnimatedFirstScroll) {\n      hasAnimatedFirstScroll = true;\n      gsap.to(homeScrollTimeline, {\n        progress: trigger.progress,\n        duration: 0.5, // Adjust duration as needed\n        ease: \"power2.out\",\n      });\n    } else {\n      homeScrollTimeline.progress(trigger.progress);\n    }\n  }\n}\n\nfunction updateScrollAnimation(\n  progress: number,\n  paths: Record<string, THREE.CurvePath<THREE.Vector3>>,\n  pausedRotations: Record<string, THREE.Quaternion>,\n  cameraPathPoints: any[]\n) {\n  if (paths.camera) {\n    const cameraPoint = paths.camera.getPointAt(progress);\n    camera.position.copy(cameraPoint);\n\n    const lookAtCurve = new THREE.CubicBezierCurve3(\n      cameraPathPoints[0].lookAt,\n      cameraPathPoints[1].lookAt,\n      cameraPathPoints[2].lookAt,\n      cameraPathPoints[3].lookAt\n    );\n    const lookAtPoint = lookAtCurve.getPoint(progress);\n    camera.lookAt(lookAtPoint);\n    camera.updateProjectionMatrix();\n  }\n\n  const fadeStartProgress = 0.85;\n  const fadeEndProgress = 0.95;\n  const opacity =\n    progress < fadeStartProgress\n      ? 1\n      : progress > fadeEndProgress\n        ? 0\n        : 1 -\n        (progress - fadeStartProgress) / (fadeEndProgress - fadeStartProgress);\n\n  // Pacman (slowest)\n  if (paths.pacman && pacman) {\n    const pacmanSpeed = characterSpeeds[\"pacman\"] ?? 1.0;\n    const rawPacmanProgress = Math.min(progress * pacmanSpeed, 1);\n    const easedPacmanProgress = Math.pow(rawPacmanProgress, 1.25);\n    const pacmanPoint = paths.pacman.getPointAt(easedPacmanProgress);\n    if (pacmanPoint) {\n      pacman.position.copy(pacmanPoint);\n      slerpToLayDown(pacman, pausedRotations[\"pacman\"], easedPacmanProgress);\n      // Animate pacman opacity\n      pacman.traverse((child) => {\n        if ((child as any).isMesh && (child as any).material) {\n          (child as any).material.opacity = opacity;\n        }\n      });\n    }\n  }\n\n  // Ghosts (each with their own speed)\n  Object.entries(ghosts).forEach(([key, ghost]) => {\n    const path = paths[key];\n    if (path) {\n      const ghostSpeed = characterSpeeds[key] ?? 1.0;\n      const rawGhostProgress = Math.min(progress * ghostSpeed, 1);\n      const easedGhostProgress = Math.pow(rawGhostProgress, 1.25);\n      const ghostPoint = path.getPointAt(easedGhostProgress);\n      if (ghostPoint) {\n        ghost.position.copy(ghostPoint);\n        slerpToLayDown(ghost, pausedRotations[key], easedGhostProgress);\n        // Animate ghost opacity\n        if ((ghost as any).material) {\n          (ghost as any).material.opacity = opacity;\n        }\n      }\n    }\n  });\n}\n","import { ghosts } from \"../core/objects\";\nimport { getHomePaths, TangentSmoother } from \"../paths/paths\";\nimport { onFrame, clock } from \"../core/scene\";\nimport * as THREE from \"three\";\nimport { calculateObjectOrientation } from \"./util\";\nimport { initHomeScrollAnimation } from \"./home-scroll\";\n\nconst LOOP_DURATION = 50;\nlet isHomeLoopActive = true;\nlet animationTime = 0;\nlet pausedT = 0;\nlet pausedPositions: Record<string, THREE.Vector3> = {};\nlet pausedRotations: Record<string, THREE.Quaternion> = {};\nlet homeLoopFrameRegistered = false;\n\n// Tangent smoothers for home loop (separate from scroll smoothers)\nconst homeLoopTangentSmoothers: Record<string, TangentSmoother> = {};\n\n// Initialize home loop tangent smoothers\nfunction initializeHomeLoopTangentSmoothers() {\n  homeLoopTangentSmoothers.pacman = new TangentSmoother(new THREE.Vector3(1, 0, 0), 0.06);\n  homeLoopTangentSmoothers.ghost1 = new TangentSmoother(new THREE.Vector3(1, 0, 0), 0.06);\n  homeLoopTangentSmoothers.ghost2 = new TangentSmoother(new THREE.Vector3(1, 0, 0), 0.06);\n  homeLoopTangentSmoothers.ghost3 = new TangentSmoother(new THREE.Vector3(1, 0, 0), 0.06);\n  homeLoopTangentSmoothers.ghost4 = new TangentSmoother(new THREE.Vector3(1, 0, 0), 0.06);\n  homeLoopTangentSmoothers.ghost5 = new TangentSmoother(new THREE.Vector3(1, 0, 0), 0.06);\n}\n\nfunction stopHomeLoop() {\n  if (!isHomeLoopActive) return;\n  isHomeLoopActive = false;\n  pausedT = (animationTime % LOOP_DURATION) / LOOP_DURATION;\n  pausedPositions = {};\n  pausedRotations = {};\n  Object.entries(ghosts).forEach(([key, ghost]) => {\n    pausedPositions[key] = ghost.position.clone();\n    pausedRotations[key] = ghost.quaternion.clone();\n  });\n  initHomeScrollAnimation(pausedPositions, pausedRotations);\n}\n\nfunction startHomeLoop() {\n  isHomeLoopActive = true;\n  animationTime = pausedT * LOOP_DURATION;\n\n  // Initialize smooth tangent smoothers for home loop\n  initializeHomeLoopTangentSmoothers();\n\n  const homePaths = getHomePaths();\n  Object.entries(ghosts).forEach(([key, ghost]) => {\n    const path = homePaths[key];\n    if (path) {\n      const position = path.getPointAt(0);\n      if (position) ghost.position.copy(position);\n\n      // Reset the smoother with initial tangent\n      if (homeLoopTangentSmoothers[key]) {\n        const initialTangent = path.getTangentAt(0);\n        if (initialTangent) {\n          homeLoopTangentSmoothers[key].reset(initialTangent);\n        }\n      }\n    }\n  });\n\n  if (!homeLoopFrameRegistered) {\n    onFrame(() => updateHomeLoop(clock.getDelta()));\n    homeLoopFrameRegistered = true;\n  }\n}\n\nfunction updateHomeLoop(delta: number) {\n  if (!isHomeLoopActive) return;\n  animationTime += delta;\n  const t = (animationTime % LOOP_DURATION) / LOOP_DURATION;\n  const homePaths = getHomePaths();\n  Object.entries(ghosts).forEach(([key, ghost]) => {\n    const path = homePaths[key];\n    if (path) {\n      const position = path.getPointAt(t);\n      if (position) ghost.position.copy(position);\n\n      // Apply smooth tangent-based orientation\n      if (homeLoopTangentSmoothers[key] && t > 0) {\n        const rawTangent = path.getTangentAt(t);\n        if (rawTangent && rawTangent.length() > 0) {\n          const smoothTangent = homeLoopTangentSmoothers[key].update(rawTangent);\n          const objectType = key === \"pacman\" ? \"pacman\" : \"ghost\";\n          calculateObjectOrientation(ghost, smoothTangent, objectType);\n        }\n      }\n    }\n  });\n}\n\n// when scroll is 0 - home loop is running.\n// Home= pacman and ghosts moving on their paths - scroll doesn't mattermatter\nexport function homeLoopHandler() {\n  if (window.scrollY === 0) {\n    startHomeLoop();\n  }\n}\n\nexport function setupHomeLoopScrollHandler() {\n  window.addEventListener(\"scroll\", () => {\n    if (window.scrollY !== 0) {\n      stopHomeLoop();\n    }\n  });\n}\n","import {\n  startRenderLoop,\n  initRenderer,\n  setupLighting,\n  scene,\n} from \"./core/scene\";\nimport {\n  homeLoopHandler,\n  setupHomeLoopScrollHandler,\n} from \"./animation/home-loop\";\nimport { loadModel } from \"./core/objects\";\nimport { setupCamera } from \"./core/camera\";\n\nasync function main() {\n  initRenderer();\n  setupLighting();\n  setupCamera();\n  await loadModel(scene);\n\n  homeLoopHandler();\n  setupHomeLoopScrollHandler();\n\n  startRenderLoop();\n}\n\nmain();\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","THREE","isMobile","window","innerWidth","DOM_ELEMENTS","mazeContainer","document","querySelector","canvas","homeSection","introSection","povSection","finalSection","finalContainer","parentElements","querySelectorAll","gsap","ScrollTrigger","objectHomeScrollEndPathPoint","cameraPathPointsConfig","startMobile","startDesktop","secondMobile","secondDesktop","mobileLookAt","desktopLookAt","cameraLookAtSecondDesktop","cameraLookAtSecondMobile","cameraHomeScrollEndLookAt","thirdPosition","cameraHomeScrollEndPathPoint","startPosition","secondPosition","lookAtPosition","cameraLookAtSecondPosition","pacmanHomePathPoints","pos","type","arc","curveCheckPoints","ghost1HomePathPoints","ghost2HomePathPoints","ghost3HomePathPoints","ghost4HomePathPoints","ghost5HomePathPoints","cameraHomeScrollPathPoints","lookAt","getStartPosition","getLookAtPosition","homePaths","pacman","ghost1","ghost2","ghost3","ghost4","ghost5","getCameraHomeScrollPathPoints","camera","innerHeight","scene","renderer","antialias","alpha","powerPreference","precision","clock","frameCallbacks","setPixelRatio","pixelRatio","Math","min","devicePixelRatio","setSize","clientWidth","clientHeight","mazeTexture","load","mazeMaterial","matcap","topMaterial","color","metalness","roughness","envMapIntensity","ghostMaterial","opacity","transparent","depthWrite","depthTest","blending","side","transmission","floorMaterial","pacmanMaterials","blue","white","default","materialMap","CAM_Pacman_Backframe","CAM_Pacman_Logo_1","CAM_Pacman_Logo_2","loader","pacmanMixer","ghosts","ghostContainers","Ghost_EUR","Ghost_CHF","Ghost_YEN","Ghost_USD","Ghost_GBP","pathCache","Map","TangentSmoother","constructor","initialTangent","smoothing","this","currentTangent","clone","update","targetTangent","lerp","normalize","reset","newTangent","copy","setSmoothingFactor","max","createNormalCurveMidPoint","current","next","curveType","x","y","z","createCameraHomeScrollPath","pathPoints","path","length","curve","add","getHomePaths","paths","entries","forEach","pathName","cacheKey","map","p","join","has","i","catmullPoints","console","log","midPoint","set","createMazePath","slerpToLayDown","object","startQuat","progress","layDownQuat1","setFromEuler","PI","layDownQuat2","targetQuat","angleTo","quaternion","slerp","homeScrollTimeline","hasAnimatedFirstScroll","characterSpeeds","initHomeScrollAnimation","pausedPositions","pausedRotations","kill","scrollPaths","scrollPathPoints","pausedPos","arcPoint","createHomeScrollPathPoints","createHomeScrollPath","getHomeScrollPaths","cameraPathPoints","scrollTrigger","id","trigger","start","end","scrub","onScrubComplete","homeLoopHandler","to","immediateRender","onUpdate","cameraPoint","getPointAt","position","lookAtPoint","getPoint","updateProjectionMatrix","fadeStartProgress","pacmanSpeed","rawPacmanProgress","easedPacmanProgress","pow","pacmanPoint","traverse","child","isMesh","material","ghost","ghostSpeed","rawGhostProgress","easedGhostProgress","ghostPoint","updateScrollAnimation","targets","getById","duration","ease","LOOP_DURATION","isHomeLoopActive","animationTime","pausedT","homeLoopFrameRegistered","homeLoopTangentSmoothers","scrollY","callback","getTangentAt","delta","t","rawTangent","tangent","objectType","targetRotation","atan2","rotation","calculateObjectOrientation","updateHomeLoop","getDelta","push","startHomeLoop","async","shadowMap","enabled","appendChild","domElement","body","addEventListener","render","ambientLight","directionalLight","shadow","mapSize","width","height","left","right","top","bottom","near","far","bias","radius","castShadow","setupLighting","setupCamera","values","Promise","resolve","reject","gltf","model","name","children","subChild","visible","item","scale","pacmanActions","animations","clip","action","clipAction","setEffectiveWeight","play","ghostContainer","ghostGroup","startsWith","includes","warn","clonedChild","receiveShadow","node","error","loadModel","requestAnimationFrame","startRenderLoop","main"],"sourceRoot":""}