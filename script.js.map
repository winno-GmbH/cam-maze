{"version":3,"file":"script.js","mappings":"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","sources":["webpack://cam-3d-animation/webpack/runtime/create fake namespace object","webpack://cam-3d-animation/external var \"gsap\"","webpack://cam-3d-animation/external var \"ScrollTrigger\"","webpack://cam-3d-animation/webpack/bootstrap","webpack://cam-3d-animation/webpack/runtime/define property getters","webpack://cam-3d-animation/webpack/runtime/hasOwnProperty shorthand","webpack://cam-3d-animation/webpack/runtime/make namespace object","webpack://cam-3d-animation/external var \"THREE\"","webpack://cam-3d-animation/./src/config.ts","webpack://cam-3d-animation/./src/scene.ts","webpack://cam-3d-animation/./src/camera.ts","webpack://cam-3d-animation/./src/materials.ts","webpack://cam-3d-animation/./src/objects.ts","webpack://cam-3d-animation/./src/pathpoints.ts","webpack://cam-3d-animation/./src/paths.ts","webpack://cam-3d-animation/./src/selectors.ts","webpack://cam-3d-animation/./src/triggers.ts","webpack://cam-3d-animation/./src/pov-animation.ts","webpack://cam-3d-animation/./src/animation.ts","webpack://cam-3d-animation/./src/intro-animations.ts","webpack://cam-3d-animation/./src/main.ts"],"sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","module.exports = gsap;","module.exports = ScrollTrigger;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = THREE;","import * as THREE from \"three\";\n\nexport const isMobile = window.innerWidth < 768;\n\nexport const CAMERA_CONFIG = {\n  originalFOV: 50,\n  wideFOV: 80,\n  near: 0.001,\n  far: 1000,\n};\n\nexport const ASSETS = {\n  mazeTexture: \"https://c-am.b-cdn.net/CAM/matcap24.png\",\n  mazeModel: \"https://c-am.b-cdn.net/CAM/c-am-assets-3.glb\",\n};\n\nexport const MAZE_CENTER = new THREE.Vector3(0.55675, 0.45, 0.45175);\n\nexport const POV_POSITIONS = {\n  ghost1: new THREE.Vector3(0.65725, 0.55, 0.75325),\n  ghost2: new THREE.Vector3(0.9085, 0.55, 0.8035),\n  ghost3: new THREE.Vector3(0.75775, 0.55, 1.05475),\n  ghost4: new THREE.Vector3(0.65725, 0.55, 1.0045),\n  ghost5: new THREE.Vector3(0.15475, 0.55, 1.15525),\n};\n\nexport const CAMERA_POSITIONS = {\n  startMobile: new THREE.Vector3(0.5, 2.5, 2.5),\n  startDesktop: new THREE.Vector3(-2, 2.5, 2),\n  secondMobile: new THREE.Vector3(0.5, 2.5, 2),\n  secondDesktop: new THREE.Vector3(-1.5, 3, 2),\n  mobileLookAt: new THREE.Vector3(0.5, 0.5, -1.5),\n  desktopLookAt: new THREE.Vector3(-1.25, 0.5, 0.25),\n};\n\nexport const startPosition = isMobile\n  ? CAMERA_POSITIONS.startMobile\n  : CAMERA_POSITIONS.startDesktop;\nexport const secondPosition = isMobile\n  ? CAMERA_POSITIONS.secondMobile\n  : CAMERA_POSITIONS.secondDesktop;\nexport const lookAtPosition = isMobile\n  ? CAMERA_POSITIONS.mobileLookAt\n  : CAMERA_POSITIONS.desktopLookAt;\n\n// DOM Selectors\nexport const SELECTORS = {\n  mazeContainer: \".el--home-maze.el\",\n  homeSection: \".sc--home.sc\",\n  introSection: \".sc--intro.sc\",\n  povSection: \".sc--pov.sc\",\n  finalSection: \".sc--final.sc\",\n  scrollComponent: \".cmp--scroll.cmp\",\n  parentElements: \".cmp--pov.cmp\",\n  pov: \".pov\",\n  cam: \".cam\",\n  finalContainer: \".cr--final.cr\",\n};\n\n// DOM Elements\nexport const DOM_ELEMENTS = {\n  mazeContainer: document.querySelector(SELECTORS.mazeContainer) as HTMLElement,\n  canvas: document.querySelector(\"canvas\") as HTMLCanvasElement,\n  finalSection: document.querySelector(SELECTORS.finalSection) as HTMLElement,\n  finalContainer: document.querySelector(\n    SELECTORS.finalContainer\n  ) as HTMLElement,\n  parentElements: document.querySelectorAll(\n    SELECTORS.parentElements\n  ) as NodeListOf<Element>,\n};\n","import * as THREE from \"three\";\nimport { isMobile, DOM_ELEMENTS } from \"./config\";\n\nexport const scene = new THREE.Scene();\n\nexport const renderer = new THREE.WebGLRenderer({\n  antialias: true,\n  alpha: true,\n  powerPreference: \"high-performance\",\n  precision: \"highp\",\n});\n\nexport const clock = new THREE.Clock();\n\nfunction enhanceAntiAliasing(): void {\n  if (isMobile) {\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n  } else {\n    renderer.setPixelRatio(window.devicePixelRatio);\n  }\n  renderer.shadowMap.enabled = true;\n  renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n}\n\nfunction setPixelRatio(): void {\n  const pixelRatio = Math.min(window.devicePixelRatio, isMobile ? 2 : 3);\n  renderer.setPixelRatio(pixelRatio);\n\n  if (DOM_ELEMENTS.mazeContainer) {\n    renderer.setSize(\n      DOM_ELEMENTS.mazeContainer.clientWidth,\n      DOM_ELEMENTS.mazeContainer.clientHeight\n    );\n  } else {\n    renderer.setSize(window.innerWidth, window.innerHeight);\n  }\n}\n\nexport function initRenderer(): void {\n  enhanceAntiAliasing();\n\n  renderer.shadowMap.enabled = true;\n  renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n  if (DOM_ELEMENTS.mazeContainer) {\n    renderer.setSize(\n      DOM_ELEMENTS.mazeContainer.clientWidth,\n      DOM_ELEMENTS.mazeContainer.clientHeight\n    );\n    DOM_ELEMENTS.mazeContainer.appendChild(renderer.domElement);\n  } else {\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n  }\n\n  if (document.readyState === \"loading\") {\n    document.addEventListener(\"DOMContentLoaded\", setPixelRatio);\n  } else {\n    setPixelRatio();\n  }\n  window.addEventListener(\"resize\", setPixelRatio);\n}\n\nexport function setupLighting(): void {\n  const ambientLight = new THREE.AmbientLight(0xffffff);\n  scene.add(ambientLight);\n\n  const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n  scene.add(directionalLight);\n  directionalLight.position.set(-5, 15, 10);\n  directionalLight.shadow.mapSize.width = 4096;\n  directionalLight.shadow.mapSize.height = 4096;\n  directionalLight.shadow.camera.left = -20;\n  directionalLight.shadow.camera.right = 20;\n  directionalLight.shadow.camera.top = 20;\n  directionalLight.shadow.camera.bottom = -20;\n  directionalLight.shadow.camera.near = 0.1;\n  directionalLight.shadow.camera.far = 50;\n  directionalLight.shadow.bias = -0.001;\n  directionalLight.shadow.radius = 3;\n  directionalLight.castShadow = true;\n}\n","import * as THREE from \"three\";\nimport {\n  CAMERA_CONFIG,\n  startPosition,\n  secondPosition,\n  lookAtPosition,\n} from \"./config\";\n\nexport const camera = new THREE.PerspectiveCamera(\n  CAMERA_CONFIG.originalFOV,\n  window.innerWidth / window.innerHeight,\n  CAMERA_CONFIG.near,\n  CAMERA_CONFIG.far\n);\n\nexport function initCamera(): void {\n  camera.position.copy(startPosition);\n  camera.lookAt(lookAtPosition);\n}\n\nexport const startQuaternion = camera.quaternion.clone();\nexport const endQuaternion = new THREE.Quaternion().setFromEuler(\n  new THREE.Euler(-1.5708, 0, 0)\n);\n\nexport function getCameraLookAtPoint(): THREE.Vector3 {\n  const direction = new THREE.Vector3(0, 0, -1);\n  direction.applyQuaternion(camera.quaternion);\n  const lookAtPoint = new THREE.Vector3();\n  lookAtPoint.copy(camera.position).add(direction.multiplyScalar(10));\n  return lookAtPoint;\n}\n\n/*(window as any).setCamera = function (lookAt: string | THREE.Vector3): void {\n  if (typeof lookAt === \"string\") {\n    const [x, y, z] = lookAt.split(\",\").map(Number);\n    lookAt = new THREE.Vector3(x, y, z);\n  }\n  camera.lookAt(lookAt);\n  camera.updateProjectionMatrix();\n  camera.updateMatrix();\n  camera.updateMatrixWorld();\n};*/\n\nexport function setupCameraResize(): void {\n  const updateCamera = () => {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n  };\n\n  window.addEventListener(\"resize\", updateCamera);\n}\n","import * as THREE from \"three\";\nimport { ASSETS } from \"./config\";\n\nconst textureLoader = new THREE.TextureLoader();\n\nexport const mazeTexture = textureLoader.load(ASSETS.mazeTexture);\n\nexport const mazeMaterial = new THREE.MeshMatcapMaterial({\n  matcap: mazeTexture,\n});\n\nexport const topMaterial = new THREE.MeshStandardMaterial({\n  color: 0xf2f9f9,\n  metalness: 0.4,\n  roughness: 0,\n  envMapIntensity: 10,\n});\n\nexport const ghostMaterial = new THREE.MeshPhysicalMaterial({\n  color: 0xffffff,\n  opacity: 1,\n  transparent: true,\n  depthWrite: false,\n  depthTest: true,\n  blending: THREE.NormalBlending,\n  side: THREE.DoubleSide,\n  roughness: 0.75,\n  metalness: 0.2,\n  transmission: 0.5,\n});\n\nexport const floorMaterial = new THREE.MeshStandardMaterial({\n  color: 0xffffff,\n  opacity: 0.8,\n  transparent: true,\n  roughness: 0.5,\n  metalness: 0.1,\n});\n\nconst pacmanMaterials = {\n  blue: new THREE.MeshBasicMaterial({\n    color: 0x1469d3,\n    transparent: true,\n    opacity: 1,\n  }),\n  white: new THREE.MeshBasicMaterial({\n    color: 0xffffff,\n    transparent: true,\n    opacity: 1,\n  }),\n  default: new THREE.MeshBasicMaterial({\n    color: 0x1469d3,\n    transparent: true,\n    opacity: 1,\n  }),\n};\n\nexport const materialMap = {\n  CAM_Pacman_Backframe: pacmanMaterials.blue,\n  \"CAM-Pacman_Bitcoin_1\": pacmanMaterials.white,\n  \"CAM-Pacman_Bitcoin_2\": pacmanMaterials.white,\n  \"CAM-Pacman_Bottom\": pacmanMaterials.blue,\n  \"CAM-Pacman_Top\": pacmanMaterials.blue,\n  \"CAM-Pacman_Eye\": pacmanMaterials.white,\n  CAM_Pacman_Logo_1: pacmanMaterials.white,\n  CAM_Pacman_Logo_2: pacmanMaterials.white,\n  \"CAM-Pacman_Shell_Boolean\": pacmanMaterials.blue,\n  \"CAM-Pacman_Shell\": pacmanMaterials.blue,\n  \"CAM-Pacman_Bottom_electronic\": pacmanMaterials.white,\n  \"CAM-Pacman_Top_electronic\": pacmanMaterials.white,\n  \"CAM-Pacman_Bottom_Text\": pacmanMaterials.white,\n  \"CAM-Pacman_Top_Text\": pacmanMaterials.white,\n  default: pacmanMaterials.blue,\n};\n\nexport const ghostCoverMaterials = Array(5).fill(ghostMaterial);\n","import * as THREE from \"three\";\nimport { ASSETS } from \"./config\";\nimport { GhostContainer } from \"./types\";\nimport { scene, clock } from \"./scene\";\nimport {\n  mazeMaterial,\n  topMaterial,\n  ghostMaterial,\n  floorMaterial,\n  materialMap,\n} from \"./materials\";\n\nexport { clock };\n\nconst loader = new THREE.GLTFLoader();\n\nexport let pacmanMixer: THREE.AnimationMixer;\n\nexport const pacman = new THREE.Group();\nscene.add(pacman);\n\nexport const ghosts: GhostContainer = {\n  pacman: pacman,\n  ghost1: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost2: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost3: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost4: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost5: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n};\n\nconst ghostContainers = {\n  Ghost_EUR: ghosts.ghost1,\n  Ghost_CHF: ghosts.ghost2,\n  Ghost_YEN: ghosts.ghost3,\n  Ghost_USD: ghosts.ghost4,\n  Ghost_GBP: ghosts.ghost5,\n};\n\nObject.values(ghosts).forEach((ghost) => scene.add(ghost));\n\nexport async function loadModel(): Promise<void> {\n  return new Promise((resolve, reject) => {\n    loader.load(\n      ASSETS.mazeModel,\n      function (gltf) {\n        const model = gltf.scene;\n\n        model.traverse((child: THREE.Object3D) => {\n          if (child.name === \"CAM-Pacman\") {\n            const children: THREE.Object3D[] = [];\n            child.traverse((subChild: THREE.Object3D) => {\n              if (\n                (subChild as any).isMesh &&\n                subChild.name !== \"CAM-Pacman_Shell\" &&\n                subChild.name !== \"CAM-Pacman_Shell_Boolean\"\n              ) {\n                const material =\n                  materialMap[subChild.name as keyof typeof materialMap] ||\n                  materialMap.default;\n                (subChild as THREE.Mesh).material = material;\n                children.push(subChild);\n              } else if (\n                subChild.name === \"CAM-Pacman_Shell\" ||\n                subChild.name === \"CAM-Pacman_Shell_Boolean\"\n              ) {\n                subChild.visible = false;\n              }\n            });\n\n            children.forEach((item) => ghosts.pacman.add(item));\n            ghosts.pacman.scale.set(0.075, 0.075, 0.075);\n            ghosts.pacman.rotation.set(Math.PI / 2, Math.PI / 2, Math.PI / 4);\n\n            pacmanMixer = new THREE.AnimationMixer(ghosts.pacman);\n            const pacmanActions: { [key: string]: THREE.AnimationAction } = {};\n\n            gltf.animations.forEach((clip: THREE.AnimationClip) => {\n              const action = pacmanMixer.clipAction(clip);\n              pacmanActions[clip.name] = action;\n              action.setEffectiveWeight(1);\n              action.play();\n            });\n          } else if (\n            child.name &&\n            ghostContainers[child.name as keyof typeof ghostContainers]\n          ) {\n            const ghostContainer =\n              ghostContainers[child.name as keyof typeof ghostContainers];\n            const ghostGroup = new THREE.Group();\n\n            child.rotation.z = Math.PI;\n            child.rotation.x = Math.PI / 2;\n            child.scale.set(0.75, 0.75, 0.75);\n\n            const children: THREE.Object3D[] = [];\n            child.traverse((subChild: THREE.Object3D) => {\n              if ((subChild as any).isMesh) {\n                if (subChild.name && subChild.name.startsWith(\"Ghost_Mesh\")) {\n                  (subChild as THREE.Mesh).material = ghostMaterial;\n                } else if (\n                  subChild.name &&\n                  [\"EUR\", \"CHF\", \"YEN\", \"USD\", \"GBP\"].includes(subChild.name)\n                ) {\n                  subChild.visible = false;\n                }\n                children.push(subChild);\n              }\n            });\n\n            children.forEach((item) => {\n              if (\n                item.name &&\n                (item.name.includes(\"EUR\") ||\n                  item.name.startsWith(\"Ghost_Mesh\"))\n              ) {\n                item.rotation.z = Math.PI;\n                item.rotation.x = Math.PI / 2;\n              } else {\n                item.rotation.set(0, 0, 0);\n              }\n              ghostGroup.add(item);\n            });\n\n            ghostContainer.add(ghostGroup);\n          }\n\n          if ((child as any).isMesh) {\n            if (child.name === \"CAM-Arena_LowRes_Top\") {\n              (child as THREE.Mesh).material = topMaterial;\n              child.castShadow = true;\n            } else if (child.name === \"CAM-Arena_LowRes_Bottom\") {\n              (child as THREE.Mesh).material = mazeMaterial;\n              child.castShadow = true;\n            } else if (child.name === \"CAM-Floor\") {\n              const clonedChild = child.clone();\n              child.position.y = -0.1;\n              child.position.x = 0;\n              child.position.z = 0;\n              (child as THREE.Mesh).material = new THREE.MeshBasicMaterial({\n                color: 0xffffff,\n                opacity: 1,\n                transparent: false,\n                depthWrite: true,\n                depthTest: true,\n                side: THREE.FrontSide,\n              });\n              child.receiveShadow = false;\n              child.castShadow = true;\n              child.scale.set(0.5, 0.5, 0.5);\n\n              (clonedChild as THREE.Mesh).material = floorMaterial;\n              clonedChild.position.y = -0.5;\n              clonedChild.receiveShadow = true;\n              scene.add(clonedChild);\n            }\n          }\n        });\n\n        model.traverse(function (node: THREE.Object3D) {\n          if ((node as any).isMesh) {\n            node.castShadow = true;\n            node.receiveShadow = true;\n          }\n        });\n\n        scene.add(model);\n        model.position.set(0.5, 0.5, 0.5);\n\n        resolve();\n      },\n      function (progress: any) {},\n      function (error: any) {\n        reject(error);\n      }\n    );\n  });\n}\n","import * as THREE from \"three\";\nimport { PathPoint } from \"./types\";\n\nexport const pacmanHomePathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.6025), type: \"straight\" },\n];\n\nexport const ghost1HomePathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.502), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.75775, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.004, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.0965, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.502), type: \"straight\" },\n];\n\nexport const ghost2HomePathPoints: PathPoint[] = [\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.004, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.502), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.3055, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.3055, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.0965, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n];\n\nexport const ghost3HomePathPoints: PathPoint[] = [\n  {\n    pos: new THREE.Vector3(0.808, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.15475, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.55675, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.009, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.904), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.75775, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.004, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.808, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n];\n\nexport const ghost4HomePathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.65725, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.15975, 0.55, 0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.6025), type: \"straight\" },\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.4015), type: \"straight\" },\n];\n\nexport const ghost5HomePathPoints: PathPoint[] = [\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.04975),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.3055, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, -0.101), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.04975),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n];\n\nexport const cameraPOVPathPoints: PathPoint[] = [\n  {\n    pos: new THREE.Vector3(0.55675, -0.5, 0.45175),\n    type: \"curve\",\n    curveType: \"forwardDownArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.607, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.7075, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.9085, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.85375), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.15525),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.9085, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.808, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.75775, 0.55, 1.15525), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 1.05475),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.7075, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.205, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.15475, 0.55, 1.05475), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.15525),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.205, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.5065, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 1.306),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.44825, 1, 2.0095), type: \"straight\" },\n];\n\nexport const ghost1POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.009, 0.55, 0.8035), type: \"straight\" },\n  { pos: new THREE.Vector3(0.9085, 0.55, 0.8035), type: \"straight\" },\n];\n\nexport const ghost2POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.009, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 1.15525), type: \"straight\" },\n  { pos: new THREE.Vector3(0.95875, 0.55, 1.05475), type: \"straight\" },\n];\n\nexport const ghost3POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.904), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.95425),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.406, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.5065, 0.55, 1.0045), type: \"straight\" },\n];\n\nexport const ghost4POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(0.15475, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.05475),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.205, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.3055, 0.55, 1.0045), type: \"straight\" },\n];\n\nexport const ghost5POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(0.55675, 0.55, 1.306), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 1.25575),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.5065, 0.55, 1.2055), type: \"straight\" },\n  { pos: new THREE.Vector3(0.406, 0.55, 1.2055), type: \"straight\" },\n];\n","import * as THREE from \"three\";\nimport { PathPoint } from \"./types\";\nimport { startPosition, secondPosition } from \"./config\";\nimport * as pathPoints from \"./pathpoints\";\n\nexport const cameraHomePath = new THREE.CubicBezierCurve3(\n  startPosition,\n  secondPosition,\n  new THREE.Vector3(0.55675, 3, 0.45175),\n  new THREE.Vector3(0.55675, 0.5, 0.45175)\n);\n\nexport const paths = {\n  pacmanHome: createPath(pathPoints.pacmanHomePathPoints),\n  ghost1Home: createPath(pathPoints.ghost1HomePathPoints),\n  ghost2Home: createPath(pathPoints.ghost2HomePathPoints),\n  ghost3Home: createPath(pathPoints.ghost3HomePathPoints),\n  ghost4Home: createPath(pathPoints.ghost4HomePathPoints),\n  ghost5Home: createPath(pathPoints.ghost5HomePathPoints),\n  cameraPOV: createPath(pathPoints.cameraPOVPathPoints),\n  ghost1POV: createPath(pathPoints.ghost1POVPathPoints),\n  ghost2POV: createPath(pathPoints.ghost2POVPathPoints),\n  ghost3POV: createPath(pathPoints.ghost3POVPathPoints),\n  ghost4POV: createPath(pathPoints.ghost4POVPathPoints),\n  ghost5POV: createPath(pathPoints.ghost5POVPathPoints),\n};\n\nfunction createPath(pathPoints: PathPoint[]): THREE.CurvePath<THREE.Vector3> {\n  const path = new THREE.CurvePath<THREE.Vector3>();\n\n  for (let i = 0; i < pathPoints.length - 1; i++) {\n    const current = pathPoints[i];\n    const next = pathPoints[i + 1];\n\n    if (current.type === \"straight\") {\n      const line = new THREE.LineCurve3(current.pos, next.pos);\n      path.add(line);\n    } else if (current.type === \"curve\") {\n      let midPoint: THREE.Vector3;\n      if (current.curveType === \"upperArc\") {\n        midPoint = new THREE.Vector3(current.pos.x, current.pos.y, next.pos.z);\n      } else if (current.curveType === \"lowerArc\") {\n        midPoint = new THREE.Vector3(next.pos.x, current.pos.y, current.pos.z);\n      } else if (current.curveType === \"forwardDownArc\") {\n        midPoint = new THREE.Vector3(current.pos.x, next.pos.y, current.pos.z);\n      } else {\n        midPoint = new THREE.Vector3(current.pos.x, current.pos.y, next.pos.z);\n      }\n      const curve = new THREE.QuadraticBezierCurve3(\n        current.pos,\n        midPoint,\n        next.pos\n      );\n      path.add(curve);\n    }\n  }\n  return path;\n}\n\nexport function getPathsForSection(section: string) {\n  if (section === \"home\") {\n    return {\n      pacman: paths.pacmanHome,\n      ghost1: paths.ghost1Home,\n      ghost2: paths.ghost2Home,\n      ghost3: paths.ghost3Home,\n      ghost4: paths.ghost4Home,\n      ghost5: paths.ghost5Home,\n    };\n  } else if (section === \"pov\") {\n    return {\n      pacman: paths.cameraPOV,\n      ghost1: paths.ghost1POV,\n      ghost2: paths.ghost2POV,\n      ghost3: paths.ghost3POV,\n      ghost4: paths.ghost4POV,\n      ghost5: paths.ghost5POV,\n    };\n  }\n  return {};\n}\n","const SELECTORS = {\n  mazeContainer: \".el--home-maze.el\",\n\n  homeSection: \".sc--home.sc\",\n  introSection: \".sc--intro.sc\",\n  introHeader: \".sc_h--intro\",\n  introBody: \".sc_b--intro\",\n  povSection: \".sc--pov.sc\",\n  finalSection: \".sc--final.sc\",\n  finalContainer: \".cr--final.cr\",\n\n  scrollComponent: \".cmp--scroll.cmp\",\n  parentElements: \".cmp--pov.cmp\",\n\n  pov: \".pov\",\n  cam: \".cam\",\n};\n\nexport const DOM_ELEMENTS = {\n  mazeContainer: document.querySelector(SELECTORS.mazeContainer) as HTMLElement,\n  canvas: document.querySelector(\"canvas\") as HTMLCanvasElement,\n\n  homeSection: document.querySelector(SELECTORS.homeSection) as HTMLElement,\n  introSection: document.querySelector(SELECTORS.introSection) as HTMLElement,\n  introHeader: document.querySelector(SELECTORS.introHeader) as HTMLElement,\n  introBody: document.querySelector(SELECTORS.introBody) as HTMLElement,\n  povSection: document.querySelector(SELECTORS.povSection) as HTMLElement,\n  finalSection: document.querySelector(SELECTORS.finalSection) as HTMLElement,\n  finalContainer: document.querySelector(\n    SELECTORS.finalContainer\n  ) as HTMLElement,\n\n  parentElements: document.querySelectorAll(\n    SELECTORS.parentElements\n  ) as NodeListOf<Element>,\n};\n","import * as THREE from \"three\";\nimport { DOM_ELEMENTS } from \"./selectors\";\n\nexport const TriggerPositions = {\n  ghost1: {\n    triggerPos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    ghostTextPos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    camTextPos: new THREE.Vector3(0.75775, 0.55, 0.8035),\n    endPosition: new THREE.Vector3(0.85825, 0.55, 0.8035),\n    parent: DOM_ELEMENTS.parentElements[0] || null,\n    active: false,\n  },\n  ghost2: {\n    triggerPos: new THREE.Vector3(0.9085, 0.55, 0.8035),\n    ghostTextPos: new THREE.Vector3(0.95875, 0.55, 0.85375),\n    camTextPos: new THREE.Vector3(0.95875, 0.55, 0.904),\n    endPosition: new THREE.Vector3(0.95875, 0.55, 1.0045),\n    parent: DOM_ELEMENTS.parentElements[1] || null,\n    active: false,\n  },\n  ghost3: {\n    triggerPos: new THREE.Vector3(0.75775, 0.55, 1.05475),\n    ghostTextPos: new THREE.Vector3(0.7075, 0.55, 1.0045),\n    camTextPos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    endPosition: new THREE.Vector3(0.55675, 0.55, 1.0045),\n    parent: DOM_ELEMENTS.parentElements[2] || null,\n    active: false,\n  },\n  ghost4: {\n    triggerPos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    ghostTextPos: new THREE.Vector3(0.5065, 0.55, 1.0045),\n    camTextPos: new THREE.Vector3(0.45625, 0.55, 1.0045),\n    endPosition: new THREE.Vector3(0.35575, 0.55, 1.0045),\n    parent: DOM_ELEMENTS.parentElements[3] || null,\n    active: false,\n  },\n  ghost5: {\n    triggerPos: new THREE.Vector3(0.15475, 0.55, 1.15525),\n    ghostTextPos: new THREE.Vector3(0.205, 0.55, 1.2055),\n    camTextPos: new THREE.Vector3(0.25525, 0.55, 1.2055),\n    endPosition: new THREE.Vector3(0.35575, 0.55, 1.2055),\n    parent: DOM_ELEMENTS.parentElements[4] || null,\n    active: false,\n  },\n};\n","import * as THREE from \"three\";\nimport { camera } from \"./camera\";\nimport { ghosts } from \"./objects\";\nimport { DOM_ELEMENTS } from \"./selectors\";\nimport { getPathsForSection } from \"./paths\";\nimport { MAZE_CENTER } from \"./config\";\nimport { TriggerPositions } from \"./triggers\";\n\n// Flag to track POV animation state\nlet isPOVAnimationActive = false;\n\n// Camera FOV settings\nconst POV_FOV = 80; // Wider FOV for POV animation\nconst DEFAULT_FOV = 50; // Default FOV\n\n// Camera manual rotation override\nlet cameraManualRotation: THREE.Quaternion | null = null;\nexport function setCameraManualRotation(q: THREE.Quaternion | null) {\n  cameraManualRotation = q;\n}\n\n// Get all POV paths for camera and ghosts\nconst povPaths = getPathsForSection(\"pov\") as Record<\n  string,\n  THREE.CurvePath<THREE.Vector3>\n>;\n\n// Debug: Log the paths to see what we're working with\nconsole.log(\"POV Paths loaded:\", Object.keys(povPaths));\nconsole.log(\"Maze Center:\", MAZE_CENTER);\nObject.entries(povPaths).forEach(([key, path]) => {\n  console.log(`${key} path length:`, path.getLength());\n  console.log(`${key} start point:`, path.getPointAt(0));\n  console.log(`${key} end point:`, path.getPointAt(1));\n\n  // Test a few points along the path to see the Y values\n  for (let i = 0; i <= 10; i++) {\n    const progress = i / 10;\n    const point = path.getPointAt(progress);\n    console.log(`${key} at ${progress * 100}%:`, point);\n  }\n});\n\n// List of ghost keys to animate\nconst ghostKeys = [\"ghost1\", \"ghost2\", \"ghost3\", \"ghost4\", \"ghost5\"];\n\n// Debug: Check if ghosts exist\nconsole.log(\"Available ghosts:\", Object.keys(ghosts));\nghostKeys.forEach((key) => {\n  console.log(`${key} exists:`, !!ghosts[key]);\n  if (ghosts[key]) {\n    console.log(`${key} position:`, ghosts[key].position);\n    console.log(`${key} visible:`, ghosts[key].visible);\n  }\n});\n\n// Debug: Check camera\nconsole.log(\"Camera position:\", camera.position);\nconsole.log(\"Camera FOV:\", camera.fov);\n\n// Store previous camera quaternion for slerp\nlet prevCameraQuat: THREE.Quaternion | null = null;\nconst CAMERA_SLERP_ALPHA = 0.18; // Slerp factor for smoothness\n\n// Scrub smoothing for camera movement\nlet smoothedProgress = 0;\nlet targetProgress = 0;\nconst SCRUB_SMOOTHING = 0.08; // Very light smoothing for responsive feel\n\n// POV Animation State for text transitions\ninterface POVTriggerState {\n  triggerCameraProgress?: number;\n  ghostTextCameraProgress?: number;\n  camTextCameraProgress?: number;\n  endCameraProgress?: number;\n  ghostTextOpacity: number;\n  camTextOpacity: number;\n  active: boolean;\n}\n\n// Initialize trigger states\nconst povTriggerStates: { [key: string]: POVTriggerState } = {};\nObject.keys(TriggerPositions).forEach((key) => {\n  povTriggerStates[key] = {\n    ghostTextOpacity: 0,\n    camTextOpacity: 0,\n    active: false,\n  };\n});\n\n// Export function to check if POV is active (for animation system)\nexport function isPOVActive(): boolean {\n  return isPOVAnimationActive;\n}\n\n// Find closest progress on camera POV path\nfunction findClosestProgressOnPOVPath(\n  targetPoint: THREE.Vector3,\n  samples: number = 2000\n): number {\n  if (!povPaths.pacman) return 0;\n\n  let minDist = Infinity;\n  let minT = 0;\n\n  for (let i = 0; i <= samples; i++) {\n    const t = i / samples;\n    const p = povPaths.pacman.getPointAt(t);\n    const d = p.distanceTo(targetPoint);\n    if (d < minDist) {\n      minDist = d;\n      minT = t;\n    }\n  }\n\n  return minT;\n}\n\n// Test function to manually trigger POV animation\nexport function testPOVAnimation(progress: number = 0.5) {\n  console.log(\"=== TESTING POV ANIMATION ===\");\n  console.log(\"Testing at progress:\", progress);\n\n  // Check if paths exist\n  if (!povPaths.pacman) {\n    console.error(\"POV camera path not found!\");\n    return;\n  }\n\n  // Check camera position before\n  console.log(\"Camera position before:\", camera.position.clone());\n  console.log(\"Camera FOV before:\", camera.fov);\n\n  // Test camera path\n  const camPos = povPaths.pacman.getPointAt(progress);\n  console.log(\"Camera path position at\", progress, \":\", camPos);\n\n  // Test ghost paths\n  ghostKeys.forEach((key) => {\n    const path = povPaths[key];\n    const ghost = ghosts[key];\n    if (path && ghost) {\n      const pos = path.getPointAt(progress);\n      console.log(`${key} path position at ${progress}:`, pos);\n      console.log(`${key} current position:`, ghost.position.clone());\n      console.log(`${key} visible:`, ghost.visible);\n    } else {\n      console.warn(`${key} path or ghost not found`);\n    }\n  });\n\n  // Run the actual update\n  updatePOVAnimation(progress);\n\n  // Check camera position after\n  console.log(\"Camera position after:\", camera.position.clone());\n  console.log(\"Camera FOV after:\", camera.fov);\n\n  console.log(\"=== END TEST ===\");\n}\n\n// --- Main update function (to be called in animation loop) ---\nexport function updatePOVAnimation(progress: number) {\n  // Don't run POV animation if we're in the middle of a scroll animation\n  // This prevents conflicts with the home section scroll animation\n  if (progress < 0.01) {\n    isPOVAnimationActive = false;\n    return;\n  }\n\n  // Additional check: if we're in a scroll animation (home section), don't run POV\n  // This prevents conflicts between the two animation systems\n  const homeSection = document.querySelector(\".sc--home.sc\") as HTMLElement;\n  if (homeSection) {\n    const rect = homeSection.getBoundingClientRect();\n    const homeProgress = Math.max(\n      0,\n      Math.min(1, 1 - rect.bottom / window.innerHeight)\n    );\n\n    // If home section is still in view (progress > 0), don't run POV animation\n    if (homeProgress > 0.01) {\n      isPOVAnimationActive = false;\n      return;\n    }\n  }\n\n  isPOVAnimationActive = true;\n\n  // Use progress directly - GSAP ScrollTrigger already handles smoothing\n  const currentProgress = progress;\n\n  // 1. Move camera along camera POV path with sophisticated handling\n  updatePOVCamera(currentProgress);\n\n  // 2. Move all ghosts along their respective POV paths\n  ghostKeys.forEach((key) => {\n    const ghost = ghosts[key];\n    const path = povPaths[key];\n    if (ghost && path) {\n      // Ghosts should move along their paths for the full duration\n      // Since their paths are short, we'll make them move continuously\n      const ghostProgress = currentProgress; // Use full progress - ghosts will loop through their short paths\n      const pos = path.getPointAt(ghostProgress);\n      ghost.position.copy(pos);\n\n      // Look ahead for orientation\n      const lookAheadProgress = Math.min(ghostProgress + 0.03, 1);\n      const lookAheadPos = path.getPointAt(lookAheadProgress);\n      ghost.lookAt(lookAheadPos);\n\n      // Make ghosts visible during POV animation - ensure they're visible\n      ghost.visible = true;\n\n      // IMPORTANT: Don't override opacity during POV animation if we're in scroll animation\n      // This prevents conflicts with the fade-out animation\n      const homeSection = document.querySelector(\".sc--home.sc\") as HTMLElement;\n      const isInScrollAnimation =\n        homeSection &&\n        (() => {\n          const rect = homeSection.getBoundingClientRect();\n          const homeProgress = Math.max(\n            0,\n            Math.min(1, 1 - rect.bottom / window.innerHeight)\n          );\n          return homeProgress > 0.01;\n        })();\n\n      // Only set materials to full opacity if we're not in scroll animation\n      if (!isInScrollAnimation) {\n        function ensureGhostVisible(obj: THREE.Object3D) {\n          if ((obj as any).material) {\n            const mats = Array.isArray((obj as any).material)\n              ? (obj as any).material\n              : [(obj as any).material];\n            mats.forEach((mat: any) => {\n              if (mat) {\n                // Only set to full opacity if the material is currently transparent\n                // This prevents overriding fade-out animations\n                if (mat.transparent && mat.opacity < 1) {\n                  mat.opacity = 1;\n                  mat.transparent = false;\n                  mat.depthWrite = true;\n                  mat.needsUpdate = true;\n                }\n              }\n            });\n          }\n        }\n        ensureGhostVisible(ghost);\n        if (ghost instanceof THREE.Group) ghost.traverse(ensureGhostVisible);\n      }\n\n      // Debug: log ghost movement to verify they're following paths\n      if (currentProgress % 0.1 < 0.01) {\n        // Log every 10% progress for more detail\n        console.log(\n          `${key} at progress ${currentProgress.toFixed(\n            2\n          )}: ghostProgress=${ghostProgress.toFixed(\n            2\n          )}, position=${pos.x.toFixed(3)}, ${pos.y.toFixed(\n            3\n          )}, ${pos.z.toFixed(3)}`\n        );\n      }\n    }\n  });\n\n  // 3. Update POV text animations\n  updatePOVTexts(currentProgress);\n}\n\n// Update POV Texts with proper animation logic\nfunction updatePOVTexts(progress: number) {\n  if (!povPaths.pacman) return;\n\n  const cameraPosition = povPaths.pacman.getPointAt(progress);\n\n  Object.entries(TriggerPositions).forEach(([key, trigger]) => {\n    const triggerState = povTriggerStates[key];\n    const currentCameraProgress = findClosestProgressOnPOVPath(cameraPosition);\n\n    // Calculate trigger positions on camera path (only once)\n    if (triggerState.triggerCameraProgress === undefined) {\n      triggerState.triggerCameraProgress = findClosestProgressOnPOVPath(\n        trigger.triggerPos\n      );\n      triggerState.ghostTextCameraProgress = findClosestProgressOnPOVPath(\n        trigger.ghostTextPos\n      );\n      triggerState.camTextCameraProgress = findClosestProgressOnPOVPath(\n        trigger.camTextPos\n      );\n      triggerState.endCameraProgress = findClosestProgressOnPOVPath(\n        trigger.endPosition\n      );\n    }\n\n    // Calculate text opacities\n    let targetGhostOpacity = 0;\n    let targetCamOpacity = 0;\n\n    if (currentCameraProgress >= triggerState.triggerCameraProgress!) {\n      // Use actual section length for calculations\n      const sectionLength =\n        triggerState.endCameraProgress! - triggerState.triggerCameraProgress!;\n\n      // Ghost Text Animation\n      const fadeInStart = triggerState.ghostTextCameraProgress!;\n      const fadeInEnd = fadeInStart + sectionLength * 0.07; // 7% for fade in\n      const stayVisibleUntil =\n        triggerState.endCameraProgress! - sectionLength * 0.15; // Stay visible until 85%\n      const fadeOutEnd = triggerState.endCameraProgress!;\n\n      if (\n        currentCameraProgress >= fadeInStart &&\n        currentCameraProgress < fadeInEnd\n      ) {\n        // Einblendphase\n        const fadeProgress =\n          (currentCameraProgress - fadeInStart) / (fadeInEnd - fadeInStart);\n        targetGhostOpacity = fadeProgress;\n      } else if (\n        currentCameraProgress >= fadeInEnd &&\n        currentCameraProgress < stayVisibleUntil\n      ) {\n        // Voll sichtbare Phase\n        targetGhostOpacity = 1.0;\n      } else if (\n        currentCameraProgress >= stayVisibleUntil &&\n        currentCameraProgress <= fadeOutEnd\n      ) {\n        // Ausblendphase\n        const fadeProgress =\n          (currentCameraProgress - stayVisibleUntil) /\n          (fadeOutEnd - stayVisibleUntil);\n        targetGhostOpacity = 1.0 - fadeProgress;\n      }\n\n      // Cam Text Animation\n      if (currentCameraProgress >= triggerState.camTextCameraProgress!) {\n        const camFadeInStart = triggerState.camTextCameraProgress!;\n        const camFadeInEnd = camFadeInStart + sectionLength * 0.07;\n        const camStayVisibleUntil = stayVisibleUntil; // Same as ghost\n\n        if (\n          currentCameraProgress >= camFadeInStart &&\n          currentCameraProgress < camFadeInEnd\n        ) {\n          // Einblendphase\n          const fadeProgress =\n            (currentCameraProgress - camFadeInStart) /\n            (camFadeInEnd - camFadeInStart);\n          targetCamOpacity = fadeProgress;\n        } else if (\n          currentCameraProgress >= camFadeInEnd &&\n          currentCameraProgress < camStayVisibleUntil\n        ) {\n          // Voll sichtbare Phase\n          targetCamOpacity = 1.0;\n        } else if (\n          currentCameraProgress >= camStayVisibleUntil &&\n          currentCameraProgress <= fadeOutEnd\n        ) {\n          // Ausblendphase\n          const fadeProgress =\n            (currentCameraProgress - camStayVisibleUntil) /\n            (fadeOutEnd - camStayVisibleUntil);\n          targetCamOpacity = 1.0 * (1.0 - fadeProgress);\n        }\n      }\n    }\n\n    // Smooth interpolation\n    const fadeInSpeed = 0.2; // Schnelleres Einblenden\n    const fadeOutSpeed = 0.1; // Langsameres Ausblenden\n\n    // Update Ghost-Text Opazität\n    if (targetGhostOpacity > triggerState.ghostTextOpacity) {\n      triggerState.ghostTextOpacity +=\n        (targetGhostOpacity - triggerState.ghostTextOpacity) * fadeInSpeed;\n    } else {\n      triggerState.ghostTextOpacity +=\n        (targetGhostOpacity - triggerState.ghostTextOpacity) * fadeOutSpeed;\n    }\n\n    // Update CAM-Text Opazität\n    if (targetCamOpacity > triggerState.camTextOpacity) {\n      triggerState.camTextOpacity +=\n        (targetCamOpacity - triggerState.camTextOpacity) * fadeInSpeed;\n    } else {\n      triggerState.camTextOpacity +=\n        (targetCamOpacity - triggerState.camTextOpacity) * fadeOutSpeed;\n    }\n\n    // Update DOM elements\n    updatePOVTextElements(trigger, triggerState);\n  });\n}\n\n// Function to stop POV animation\nexport function stopPOVAnimation() {\n  isPOVAnimationActive = false;\n  camera.fov = DEFAULT_FOV;\n  camera.updateProjectionMatrix();\n  cameraManualRotation = null;\n  prevCameraQuat = null;\n\n  // Reset all trigger states\n  Object.values(povTriggerStates).forEach((state) => {\n    state.ghostTextOpacity = 0;\n    state.camTextOpacity = 0;\n    state.active = false;\n  });\n\n  // Hide all POV elements\n  Object.entries(TriggerPositions).forEach(([key, trigger]) => {\n    if (trigger.parent) {\n      const el = trigger.parent as HTMLElement;\n      el.style.opacity = \"0\";\n      el.style.visibility = \"hidden\";\n      el.style.pointerEvents = \"none\";\n\n      // Hide .pov and .cam elements\n      const povElements = el.querySelectorAll(\".pov\");\n      const camElements = el.querySelectorAll(\".cam\");\n\n      povElements.forEach((povElement: Element) => {\n        const element = povElement as HTMLElement;\n        element.style.opacity = \"0\";\n        element.style.visibility = \"hidden\";\n      });\n\n      camElements.forEach((camElement: Element) => {\n        const element = camElement as HTMLElement;\n        element.style.opacity = \"0\";\n        element.style.visibility = \"hidden\";\n        element.style.display = \"none\";\n      });\n    }\n  });\n\n  console.log(\"POV Animation stopped\");\n}\n\n// --- POV ScrollTrigger Setup ---\nexport async function initPOVAnimationSystem() {\n  console.log(\"Initializing POV Animation System...\");\n\n  // Check if POV section exists\n  if (!DOM_ELEMENTS.povSection) {\n    console.error(\"POV section not found! Check if .sc--pov.sc exists in HTML\");\n    console.log(\"Available DOM elements:\", {\n      homeSection: !!DOM_ELEMENTS.homeSection,\n      introSection: !!DOM_ELEMENTS.introSection,\n      povSection: !!DOM_ELEMENTS.povSection,\n      finalSection: !!DOM_ELEMENTS.finalSection,\n    });\n    console.log(\n      \"All sections in document:\",\n      document.querySelectorAll('[class*=\"sc--\"]')\n    );\n    return;\n  }\n  console.log(\"POV section found:\", DOM_ELEMENTS.povSection);\n\n  // Check if POV paths exist\n  if (!povPaths.pacman) {\n    console.error(\n      \"POV paths not found! Check pathPoints.ts for POV path definitions\"\n    );\n    console.log(\"Available POV paths:\", Object.keys(povPaths));\n    return;\n  }\n  console.log(\"POV paths loaded successfully:\", Object.keys(povPaths));\n\n  // Check if ghosts exist\n  const missingGhosts = ghostKeys.filter((key) => !ghosts[key]);\n  if (missingGhosts.length > 0) {\n    console.warn(\"Some ghosts are missing:\", missingGhosts);\n    console.log(\"Available ghosts:\", Object.keys(ghosts));\n  }\n\n  // Check if trigger elements exist\n  const missingTriggers = Object.entries(TriggerPositions).filter(\n    ([key, trigger]) => !trigger.parent\n  );\n  if (missingTriggers.length > 0) {\n    console.warn(\n      \"Some trigger elements are missing:\",\n      missingTriggers.map(([key]) => key)\n    );\n    console.log(\n      \"Available parent elements:\",\n      DOM_ELEMENTS.parentElements.length\n    );\n  }\n\n  // Dynamically import GSAP\n  const gsapModule = await import(\"gsap\");\n  const scrollTriggerModule = await import(\"gsap/ScrollTrigger\");\n  const gsap = gsapModule.gsap || gsapModule.default;\n  const ScrollTrigger =\n    scrollTriggerModule.ScrollTrigger || scrollTriggerModule.default;\n  gsap.registerPlugin(ScrollTrigger);\n\n  // Setup ScrollTrigger for .sc--pov\n  const povScrollTrigger = ScrollTrigger.create({\n    trigger: \".sc--pov\",\n    start: \"top top\",\n    end: \"bottom bottom\",\n    scrub: 1.2, // Increased scrub for better smoothing\n    onUpdate: (self) => {\n      // Progress von 0 (top top) bis 1 (bottom bottom)\n      const progress = self.progress;\n      updatePOVAnimation(progress);\n    },\n    onEnter: () => {\n      console.log(\"POV section entered!\");\n      isPOVAnimationActive = true;\n    },\n    onLeave: () => {\n      console.log(\"POV section left!\");\n      stopPOVAnimation();\n    },\n  });\n\n  console.log(\"POV Animation System initialized successfully!\");\n  console.log(\"ScrollTrigger created:\", povScrollTrigger);\n}\n\n// Update POV Text DOM Elements - TWO-STAGE ANIMATION\nfunction updatePOVTextElements(trigger: any, triggerState: POVTriggerState) {\n  if (!trigger.parent) return;\n\n  // Find ALL elements with .pov and .cam classes\n  const povElements = trigger.parent.querySelectorAll(\".pov\");\n  const camElements = trigger.parent.querySelectorAll(\".cam\");\n  const cmpPovElement = trigger.parent; // The .cmp--pov element itself\n\n  // STAGE 1: Fade in .cmp--pov element (first trigger) - SMOOTHER\n  const cmpPovOpacity = Math.max(\n    0,\n    Math.min(1, Math.round(triggerState.ghostTextOpacity * 1000) / 1000)\n  );\n\n  if (cmpPovOpacity > 0.01) {\n    // Fade in the .cmp--pov element with smooth transition\n    cmpPovElement.style.opacity = cmpPovOpacity.toString();\n    cmpPovElement.style.visibility = \"visible\";\n    cmpPovElement.style.pointerEvents = \"auto\";\n    cmpPovElement.style.transition = \"opacity 0.3s ease-in-out\";\n  } else {\n    // Hide the .cmp--pov element\n    cmpPovElement.style.opacity = \"0\";\n    cmpPovElement.style.visibility = \"hidden\";\n    cmpPovElement.style.pointerEvents = \"none\";\n    cmpPovElement.style.transition = \"opacity 0.3s ease-in-out\";\n  }\n\n  // STAGE 2: Animate .pov and .cam elements properly\n  const camOpacity = Math.max(\n    0,\n    Math.min(1, Math.round(triggerState.camTextOpacity * 1000) / 1000)\n  );\n\n  // Animate .pov elements (fade out from opacity 1 to 0)\n  povElements.forEach((povElement: Element) => {\n    const element = povElement as HTMLElement;\n    if (camOpacity > 0.01) {\n      // Fade out animation: opacity 1 to 0\n      const fadeOutOpacity = 1 - camOpacity; // Invert the opacity for fade out\n      element.style.opacity = fadeOutOpacity.toString();\n      element.style.visibility = \"visible\";\n      element.style.transition = \"opacity 0.4s ease-in-out\";\n\n      // Ensure full fade out when cam text is fully visible\n      if (camOpacity >= 0.99) {\n        element.style.opacity = \"0\";\n        element.style.visibility = \"hidden\";\n      }\n    } else {\n      // Keep full opacity when not transitioning\n      element.style.opacity = \"1\";\n      element.style.visibility = \"visible\";\n      element.style.transition = \"opacity 0.4s ease-in-out\";\n    }\n  });\n\n  // Animate .cam elements (fade in from opacity 0 to 1)\n  camElements.forEach((camElement: Element) => {\n    const element = camElement as HTMLElement;\n    if (camOpacity > 0.01) {\n      // Fade in animation: opacity 0 to 1\n      element.style.display = \"block\";\n      element.style.opacity = camOpacity.toString();\n      element.style.visibility = \"visible\";\n      element.style.transition = \"opacity 0.4s ease-in-out\";\n\n      // Ensure full fade in when cam text is fully visible\n      if (camOpacity >= 0.99) {\n        element.style.opacity = \"1\";\n        element.style.visibility = \"visible\";\n      }\n    } else {\n      // Hide when opacity is 0\n      element.style.opacity = \"0\";\n      element.style.visibility = \"hidden\";\n      element.style.display = \"none\";\n      element.style.transition = \"opacity 0.4s ease-in-out\";\n    }\n  });\n}\n\n// Sophisticated camera update with transition phases and flexible direction\nfunction updatePOVCamera(progress: number) {\n  if (!povPaths.pacman) return;\n\n  const cameraPosition = povPaths.pacman.getPointAt(progress);\n  camera.position.copy(cameraPosition);\n\n  // Calculate transition phase - use first third of path for transition\n  const transitionEndProgress = 0.33; // Transition until 33% of path\n\n  if (progress < transitionEndProgress) {\n    // Phase 1: Transition from entry to path following\n    const transitionProgress = progress / transitionEndProgress; // 0 to 1 during transition\n    const smoothTransition = smoothStep(transitionProgress);\n\n    // Entry rotation: 45° forward-down to straight ahead\n    const forwardVector = new THREE.Vector3(0, 0, 1);\n    const downVector = new THREE.Vector3(0, -1, 0);\n    const upVector = new THREE.Vector3(0, 1, 0);\n\n    // 45° forward-down direction (initial look)\n    const forwardDownDirection = new THREE.Vector3()\n      .addVectors(\n        forwardVector.clone().multiplyScalar(0.8),\n        downVector.clone().multiplyScalar(0.2)\n      )\n      .normalize();\n\n    // Straight ahead direction (final look)\n    const straightAheadDirection = new THREE.Vector3(0, 0, 1);\n\n    // Blend from entry rotation to path following\n    const entryDirection = forwardDownDirection;\n    const flexibleDirection = getFlexibleCameraDirection(progress);\n\n    const blendedDirection = new THREE.Vector3()\n      .addVectors(\n        entryDirection.clone().multiplyScalar(1.0 - smoothTransition),\n        flexibleDirection.clone().multiplyScalar(smoothTransition)\n      )\n      .normalize();\n\n    const lookAtPoint = camera.position.clone().add(blendedDirection);\n\n    // Direct rotation during entry phase\n    const tempMatrix = new THREE.Matrix4();\n    tempMatrix.lookAt(camera.position, lookAtPoint, camera.up);\n    const targetQuaternion = new THREE.Quaternion().setFromRotationMatrix(\n      tempMatrix\n    );\n    camera.quaternion.copy(targetQuaternion);\n\n    // Reset smoothing state\n    prevCameraQuat = targetQuaternion.clone();\n  } else {\n    // Normal flexible camera behavior after transition\n    const flexibleDirection = getFlexibleCameraDirection(progress);\n    const lookAtPoint = camera.position.clone().add(flexibleDirection);\n    applySmoothCameraRotation(lookAtPoint);\n  }\n\n  camera.fov = POV_FOV;\n  camera.updateProjectionMatrix();\n  camera.updateMatrixWorld();\n}\n\n// Get flexible camera direction for natural movement\nfunction getFlexibleCameraDirection(progress: number): THREE.Vector3 {\n  if (!povPaths.pacman) return new THREE.Vector3(0, 0, 1);\n\n  // Get smooth tangent\n  const smoothTangent = getSmoothCameraTangent(progress);\n\n  // Add slight upward tilt for more natural walking perspective\n  const upTilt = new THREE.Vector3(0, 0.1, 0);\n  const direction = new THREE.Vector3()\n    .addVectors(smoothTangent, upTilt)\n    .normalize();\n\n  return direction;\n}\n\n// Get smooth tangent with different smoothing for turns vs straight sections\nfunction getSmoothCameraTangent(progress: number): THREE.Vector3 {\n  if (!povPaths.pacman) return new THREE.Vector3(0, 0, 1);\n\n  const LOOK_AHEAD_DISTANCE = 0.05;\n\n  // Get current tangent\n  const currentTangent = povPaths.pacman.getTangentAt(progress).normalize();\n\n  // Get look-ahead tangent for smoothing\n  const lookAheadProgress = Math.min(progress + LOOK_AHEAD_DISTANCE, 1);\n  const lookAheadTangent = povPaths.pacman\n    .getTangentAt(lookAheadProgress)\n    .normalize();\n\n  // Get look-behind tangent for more context\n  const lookBehindProgress = Math.max(progress - LOOK_AHEAD_DISTANCE, 0);\n  const lookBehindTangent = povPaths.pacman\n    .getTangentAt(lookBehindProgress)\n    .normalize();\n\n  // Calculate average tangent for smoothing\n  const averageTangent = new THREE.Vector3()\n    .addVectors(lookBehindTangent, currentTangent)\n    .add(lookAheadTangent)\n    .divideScalar(3)\n    .normalize();\n\n  // Detect sharp turns\n  const dotProduct = currentTangent.dot(lookAheadTangent);\n  const isSharpTurn = dotProduct < 0.3;\n  const isModerateTurn = dotProduct < 0.7;\n\n  if (isSharpTurn) {\n    // For sharp turns, use very strong smoothing\n    return new THREE.Vector3()\n      .addVectors(\n        currentTangent.clone().multiplyScalar(0.05),\n        averageTangent.clone().multiplyScalar(0.95)\n      )\n      .normalize();\n  } else if (isModerateTurn) {\n    // For moderate turns, use strong smoothing\n    return new THREE.Vector3()\n      .addVectors(\n        currentTangent.clone().multiplyScalar(0.15),\n        averageTangent.clone().multiplyScalar(0.85)\n      )\n      .normalize();\n  } else {\n    // For straight sections, use moderate smoothing\n    return new THREE.Vector3()\n      .addVectors(\n        currentTangent.clone().multiplyScalar(0.6),\n        averageTangent.clone().multiplyScalar(0.4)\n      )\n      .normalize();\n  }\n}\n\n// Apply smooth camera rotation with dynamic smoothing\nfunction applySmoothCameraRotation(targetLookAt: THREE.Vector3) {\n  // Calculate target rotation\n  const tempMatrix = new THREE.Matrix4();\n  tempMatrix.lookAt(camera.position, targetLookAt, camera.up);\n  const targetQuaternion = new THREE.Quaternion().setFromRotationMatrix(\n    tempMatrix\n  );\n\n  if (!prevCameraQuat) {\n    // First frame - set rotation directly\n    camera.quaternion.copy(targetQuaternion);\n    prevCameraQuat = targetQuaternion.clone();\n    return;\n  }\n\n  // Calculate rotation difference\n  const angleDifference = camera.quaternion.angleTo(targetQuaternion);\n\n  // Dynamic smoothing based on rotation angle\n  let dynamicSmoothing = CAMERA_SLERP_ALPHA;\n\n  // Check if we're near the end of the path\n  const isNearExit = camera.position.z > 1.8;\n\n  if (isNearExit) {\n    // Smooth rotation for end sequence\n    dynamicSmoothing = 0.15;\n  } else if (angleDifference > Math.PI / 8) {\n    // Sharp corner - balanced smoothing\n    dynamicSmoothing = CAMERA_SLERP_ALPHA * 0.7;\n  } else if (angleDifference > Math.PI / 16) {\n    // Moderate corner - light smoothing\n    dynamicSmoothing = CAMERA_SLERP_ALPHA * 0.85;\n  } else {\n    // Small rotations - normal smoothing\n    dynamicSmoothing = CAMERA_SLERP_ALPHA;\n  }\n\n  // Apply smooth rotation\n  camera.quaternion.slerpQuaternions(\n    prevCameraQuat,\n    targetQuaternion,\n    dynamicSmoothing\n  );\n  prevCameraQuat.copy(camera.quaternion);\n}\n\n// Smooth step function for easing\nfunction smoothStep(x: number): number {\n  return x * x * (3 - 2 * x);\n}\n","import * as THREE from \"three\";\nimport { camera, endQuaternion } from \"./camera\";\nimport { scene, renderer, clock } from \"./scene\";\nimport { ghosts, pacman, pacmanMixer } from \"./objects\";\nimport { getPathsForSection, cameraHomePath } from \"./paths\";\nimport { MAZE_CENTER, DOM_ELEMENTS, SELECTORS } from \"./config\";\nimport { isPOVActive } from \"./pov-animation\";\n\n// Animation state\nexport type AnimationState = \"HOME\" | \"SCROLL_ANIMATION\";\n\nconst HOME_ANIMATION_SPEED = 0.03; // loop speed - doubled for smoother movement\nconst CAMERA_FOV = 50;\nconst TRANSITION_DURATION = 0.5; // seconds for smooth transition back to home\n\n// Speed multipliers for scroll animation - higher = faster\nconst GHOST_SPEED_MULTIPLIERS: Record<string, number> = {\n  ghost1: 1.4, // Fastest - arrives first\n  ghost2: 1.3,\n  ghost3: 1.2,\n  ghost4: 1.1,\n  ghost5: 1,\n  pacman: 0.9, // Slowest - arrives last, synchronized with camera\n};\n\n// When ghosts should finish their animation (0.8 = 80% of scroll progress)\nconst GHOSTS_END_AT = 0.8;\nconst GHOST_OPACITY_FADE_START = 0.9;\n\nlet animationState: AnimationState = \"HOME\";\nlet homeProgress = 0;\nlet scrollProgress = 0;\nlet bezierCurves: Record<string, THREE.QuadraticBezierCurve3> = {};\nlet capturedPositions: Record<string, THREE.Vector3> = {};\nlet capturedRotations: Record<string, THREE.Euler> = {};\nlet cameraScrollCurve: THREE.CubicBezierCurve3 | null = null;\nlet cameraScrollStartQuat: THREE.Quaternion | null = null;\nlet scrollTriggerInitialized = false;\nlet homePositionsCaptured = false;\nlet pausedHomeProgress = 0;\n\n// Simple transition variables\nlet isTransitioningToHome = false;\nlet transitionProgress = 0;\nlet transitionStartPositions: Record<string, THREE.Vector3> = {};\nlet transitionStartRotations: Record<string, THREE.Euler> = {};\n\nconst homePathKeys = [\n  \"pacman\",\n  \"ghost1\",\n  \"ghost2\",\n  \"ghost3\",\n  \"ghost4\",\n  \"ghost5\",\n] as const;\ntype HomePathKey = (typeof homePathKeys)[number];\nconst homePaths = getPathsForSection(\"home\") as Record<\n  HomePathKey,\n  THREE.CurvePath<THREE.Vector3>\n>;\n\nfunction easeInOutCubic(t: number): number {\n  return t < 0.5 ? 4 * t * t * t : 1 - Math.pow(-2 * t + 2, 3) / 2;\n}\n\nfunction animateHomeLoop(dt: number) {\n  homeProgress = (homeProgress + dt * HOME_ANIMATION_SPEED) % 1;\n  Object.entries(ghosts).forEach(([key, ghost]) => {\n    if ((homePathKeys as readonly string[]).includes(key)) {\n      const path = homePaths[key as HomePathKey];\n      if (path) {\n        const t = homeProgress;\n        const pos = path.getPointAt(t);\n        ghost.position.copy(pos);\n        const tangent = path.getTangentAt(t).normalize();\n        ghost.lookAt(pos.clone().add(tangent));\n        // Pacman rotation smoothing\n        if (key === \"pacman\") {\n          const zRot = Math.atan2(tangent.x, tangent.z);\n          ghost.rotation.set(Math.PI / 2, Math.PI, zRot + Math.PI / 2);\n        }\n        setGhostOpacity(ghost, 1);\n      }\n    }\n  });\n}\n\nfunction setGhostOpacity(ghost: THREE.Object3D, opacity: number) {\n  let opacitySet = false;\n\n  function applyOpacity(mesh: THREE.Mesh) {\n    if (mesh.material) {\n      const materials = Array.isArray(mesh.material)\n        ? mesh.material\n        : [mesh.material];\n\n      materials.forEach((material: any) => {\n        if (material) {\n          // Handle different material types\n          if (\n            material.isMeshBasicMaterial ||\n            material.isMeshStandardMaterial ||\n            material.isMeshPhysicalMaterial ||\n            material.isMeshMatcapMaterial\n          ) {\n            material.opacity = opacity;\n            material.transparent = opacity < 1;\n            material.depthWrite = opacity === 1;\n            material.needsUpdate = true;\n            opacitySet = true;\n          } else if (material.isShaderMaterial) {\n            // For shader materials, try to set opacity uniform if it exists\n            if (material.uniforms && material.uniforms.opacity) {\n              material.uniforms.opacity.value = opacity;\n              material.needsUpdate = true;\n              opacitySet = true;\n            }\n          } else {\n            // Fallback for any material with opacity property\n            if (\"opacity\" in material) {\n              material.opacity = opacity;\n              material.transparent = opacity < 1;\n              material.depthWrite = opacity === 1;\n              material.needsUpdate = true;\n              opacitySet = true;\n            }\n          }\n        }\n      });\n    }\n  }\n\n  if (ghost instanceof THREE.Mesh) {\n    applyOpacity(ghost);\n  } else if (ghost instanceof THREE.Group) {\n    ghost.traverse((child) => {\n      if (child instanceof THREE.Mesh) {\n        applyOpacity(child);\n      }\n    });\n  }\n\n  // Debug: log if opacity was set and what type of object\n  if (opacity < 1) {\n    console.log(\n      `setGhostOpacity: ${ghost.name || \"unknown\"} (${\n        ghost.constructor.name\n      }), opacity=${opacity}, opacitySet=${opacitySet}`\n    );\n  }\n}\n\nfunction captureGhostPositions() {\n  if (homePositionsCaptured) return;\n\n  Object.entries(ghosts).forEach(([key, ghost]) => {\n    capturedPositions[key] = ghost.position.clone();\n    capturedRotations[key] = ghost.rotation.clone();\n  });\n\n  // Create bezier curves once with more linear paths\n  bezierCurves = {};\n  Object.entries(capturedPositions).forEach(([key, startPos]) => {\n    const endPos = MAZE_CENTER.clone();\n\n    // Create a more linear path by placing control points closer to the line\n    // This reduces the extreme acceleration/deceleration at the ends\n    const midPoint = new THREE.Vector3(\n      (startPos.x + endPos.x) / 2,\n      (startPos.y + endPos.y) / 2,\n      (startPos.z + endPos.z) / 2\n    );\n\n    // Move control point closer to the midpoint for more linear movement\n    const control = new THREE.Vector3(\n      midPoint.x + (midPoint.x - (startPos.x + endPos.x) / 2) * 0.3,\n      midPoint.y + 1.5, // Higher elevation for more dramatic arc\n      midPoint.z + (midPoint.z - (startPos.z + endPos.z) / 2) * 0.3\n    );\n\n    bezierCurves[key] = new THREE.QuadraticBezierCurve3(\n      startPos,\n      control,\n      endPos\n    );\n  });\n\n  // Create camera curve once\n  cameraScrollCurve = new THREE.CubicBezierCurve3(\n    camera.position.clone(),\n    new THREE.Vector3(\n      (camera.position.x + MAZE_CENTER.x) / 2,\n      2,\n      (camera.position.z + MAZE_CENTER.z) / 2\n    ),\n    new THREE.Vector3(0.55675, 3, 0.45175),\n    MAZE_CENTER.clone()\n  );\n  cameraScrollStartQuat = camera.quaternion.clone();\n\n  homePositionsCaptured = true;\n}\n\nfunction startSmoothTransitionToHome() {\n  isTransitioningToHome = true;\n  transitionProgress = 0;\n\n  // Capture current positions as transition start points\n  transitionStartPositions = {};\n  transitionStartRotations = {};\n  Object.entries(ghosts).forEach(([key, ghost]) => {\n    transitionStartPositions[key] = ghost.position.clone();\n    transitionStartRotations[key] = ghost.rotation.clone();\n  });\n}\n\nfunction animateTransitionToHome(dt: number) {\n  transitionProgress += dt / TRANSITION_DURATION;\n  const easedProgress = easeInOutCubic(Math.min(transitionProgress, 1));\n\n  // Interpolate ghosts from their current positions to home path positions\n  Object.entries(ghosts).forEach(([key, ghost]) => {\n    if ((homePathKeys as readonly string[]).includes(key)) {\n      const path = homePaths[key as HomePathKey];\n      if (path) {\n        // Calculate target position on home path\n        const targetPos = path.getPointAt(homeProgress);\n        const startPos = transitionStartPositions[key];\n\n        // Interpolate position\n        ghost.position.lerpVectors(startPos, targetPos, easedProgress);\n\n        // Interpolate rotation using quaternions for shortest path\n        const startRot = transitionStartRotations[key];\n        const tangent = path.getTangentAt(homeProgress).normalize();\n        const targetRot = new THREE.Euler();\n\n        if (key === \"pacman\") {\n          const zRot = Math.atan2(tangent.x, tangent.z);\n          targetRot.set(Math.PI / 2, Math.PI, zRot + Math.PI / 2);\n        } else {\n          targetRot.setFromQuaternion(\n            new THREE.Quaternion().setFromUnitVectors(\n              new THREE.Vector3(0, 0, 1),\n              tangent\n            )\n          );\n        }\n\n        // Convert to quaternions for smooth shortest-path interpolation\n        const startQuat = new THREE.Quaternion().setFromEuler(startRot);\n        const targetQuat = new THREE.Quaternion().setFromEuler(targetRot);\n        const interpolatedQuat = new THREE.Quaternion();\n\n        // Slerp for shortest path rotation\n        interpolatedQuat.slerpQuaternions(startQuat, targetQuat, easedProgress);\n\n        // Apply the interpolated rotation\n        ghost.quaternion.copy(interpolatedQuat);\n\n        // Keep opacity at 1 during transition\n        setGhostOpacity(ghost, 1);\n      }\n    }\n  });\n\n  // Check if transition is complete\n  if (transitionProgress >= 1) {\n    isTransitioningToHome = false;\n    homePositionsCaptured = false;\n  }\n}\n\n// Add a small threshold to prevent rapid state switching\nlet lastScrollProgress = 0;\nconst PROGRESS_THRESHOLD = 0.001; // Reduced for smoother movement\n\nexport function setScrollProgress(progress: number) {\n  // Prevent rapid progress changes that cause flickering\n  const progressChange = Math.abs(progress - lastScrollProgress);\n  if (progressChange < PROGRESS_THRESHOLD) return;\n\n  scrollProgress = Math.max(0, Math.min(1, progress));\n  lastScrollProgress = progress;\n}\n\nfunction animateScrollToCenter(progress: number) {\n  Object.entries(ghosts).forEach(([key, ghost]) => {\n    const speed = GHOST_SPEED_MULTIPLIERS[key] || 1.0;\n\n    // All ghosts start immediately, but travel at different speeds\n    let ghostProgress = Math.min(progress * speed, 1);\n\n    const curve = bezierCurves[key];\n    if (!curve) return;\n\n    // Use getPointAt for smoother interpolation along the curve\n    const pos = curve.getPointAt(ghostProgress);\n    ghost.position.copy(pos);\n\n    // Interpolate rotation more smoothly using quaternions\n    const origRot = capturedRotations[key];\n    const targetRot = new THREE.Euler(-Math.PI / 2, 0, 0);\n\n    // Use quaternions for shortest path rotation\n    const startQuat = new THREE.Quaternion().setFromEuler(origRot);\n    const endQuat = new THREE.Quaternion().setFromEuler(targetRot);\n    const interpolatedQuat = new THREE.Quaternion();\n\n    // Use easing for smoother rotation transition\n    const easedProgress = easeInOutCubic(ghostProgress);\n    interpolatedQuat.slerpQuaternions(startQuat, endQuat, easedProgress);\n\n    // Apply the interpolated rotation\n    ghost.quaternion.copy(interpolatedQuat);\n\n    // Fade out starting at 90% of the overall scroll progress (not individual ghost progress)\n    let opacity = 1;\n    if (progress >= 0.9) {\n      const fadeProgress = (progress - 0.9) / 0.1; // 0 to 1 over last 10% (90% to 100%)\n      opacity = 1 - fadeProgress;\n      opacity = Math.max(0, opacity);\n\n      // Debug: log fade-out\n      console.log(\n        `${key} fade-out: progress=${progress.toFixed(\n          3\n        )}, opacity=${opacity.toFixed(3)}`\n      );\n    }\n\n    setGhostOpacity(ghost, opacity);\n  });\n}\n\nfunction animateCameraScroll(progress: number) {\n  if (!cameraScrollCurve || !cameraScrollStartQuat) return;\n  const pos = cameraScrollCurve.getPoint(progress);\n  camera.position.copy(pos);\n  camera.fov = CAMERA_FOV;\n  camera.updateProjectionMatrix();\n  // Slerp rotation\n  const q = new THREE.Quaternion();\n  q.slerpQuaternions(cameraScrollStartQuat, endQuaternion, progress);\n  camera.quaternion.copy(q);\n}\n\nfunction render() {\n  renderer.render(scene, camera);\n}\n\nfunction animationLoop() {\n  requestAnimationFrame(animationLoop);\n  const dt = clock.getDelta();\n\n  if (pacmanMixer) pacmanMixer.update(dt);\n\n  // Check if POV animation is active - if so, skip home/scroll animations\n  if (isPOVActive()) {\n    // POV animation is controlling camera and ghosts, just render\n    // Make sure ghosts are visible during POV animation\n    Object.values(ghosts).forEach((ghost) => {\n      ghost.visible = true;\n    });\n    render();\n    return;\n  }\n\n  // Handle different animation states\n  if (isTransitioningToHome) {\n    animateTransitionToHome(dt);\n  } else if (scrollProgress > 0.01) {\n    // Scroll animation\n    if (!homePositionsCaptured) {\n      captureGhostPositions();\n      pausedHomeProgress = homeProgress;\n    }\n    animateScrollToCenter(scrollProgress);\n    animateCameraScroll(scrollProgress);\n  } else {\n    // Home animation - start transition if we were in scroll animation\n    if (homePositionsCaptured && !isTransitioningToHome) {\n      startSmoothTransitionToHome();\n    } else if (!isTransitioningToHome) {\n      animateHomeLoop(dt);\n    }\n  }\n\n  render();\n}\n\nasync function setupScrollTrigger() {\n  try {\n    // Dynamic import GSAP and ScrollTrigger\n    const gsapModule = await import(\"gsap\");\n    const scrollTriggerModule = await import(\"gsap/ScrollTrigger\");\n\n    const gsap = gsapModule.gsap || gsapModule.default;\n    const ScrollTrigger =\n      scrollTriggerModule.ScrollTrigger || scrollTriggerModule.default;\n\n    if (!gsap || !ScrollTrigger) {\n      throw new Error(\"GSAP modules not loaded properly\");\n    }\n\n    gsap.registerPlugin(ScrollTrigger);\n\n    // Get home section element\n    const homeSection = document.querySelector(\n      SELECTORS.homeSection\n    ) as HTMLElement;\n    if (!homeSection) {\n      console.warn(\"Home section not found, scroll animation disabled\");\n      return;\n    }\n\n    // Create a timeline for proper scrub functionality\n    const tl = gsap.timeline({\n      scrollTrigger: {\n        trigger: homeSection,\n        start: \"top top\",\n        end: \"bottom top\",\n        scrub: 1, // 1 second scrub delay\n        // Remove onUpdate from ScrollTrigger to prevent dual updates\n      },\n    });\n\n    // Add a dummy animation to the timeline (required for scrub to work)\n    tl.to(\n      {},\n      {\n        duration: 1,\n        onUpdate: function () {\n          const progress = this.progress();\n          setScrollProgress(progress);\n        },\n      }\n    );\n\n    scrollTriggerInitialized = true;\n  } catch (error) {\n    console.error(\"❌ GSAP ScrollTrigger setup failed:\", error);\n    setupManualScrollListener();\n  }\n}\n\nfunction setupManualScrollListener() {\n  window.addEventListener(\"scroll\", () => {\n    const homeSection = document.querySelector(\n      SELECTORS.homeSection\n    ) as HTMLElement;\n    if (homeSection) {\n      const rect = homeSection.getBoundingClientRect();\n      const progress = Math.max(\n        0,\n        Math.min(1, 1 - rect.bottom / window.innerHeight)\n      );\n      setScrollProgress(progress);\n    }\n  });\n}\n\nexport function initAnimationSystem() {\n  // Start home animation loop\n  animationState = \"HOME\";\n  homeProgress = 0;\n  scrollProgress = 0;\n  animationLoop();\n\n  // Setup GSAP ScrollTrigger\n  setupScrollTrigger();\n\n  // Add manual test function to window for debugging\n  (window as any).testOpacity = () => {\n    console.log(\"Testing opacity on all ghosts...\");\n    Object.entries(ghosts).forEach(([key, ghost]) => {\n      console.log(`Testing ${key}...`);\n      setGhostOpacity(ghost, 0.5);\n    });\n  };\n}\n","// Intro animations for the intro section\n// Extracted from old animation-system.ts and adapted for current structure\n\nimport { DOM_ELEMENTS } from \"./selectors\";\n\nlet isHeaderAnimating = false;\nlet isBodyAnimating = false;\n\nfunction easeInOutCubic(t: number): number {\n  return t < 0.5 ? 4 * t * t * t : 1 - Math.pow(-2 * t + 2, 3) / 2;\n}\n\nfunction animateIntroHeaderDirect(directProgress: number) {\n  const introHeader = DOM_ELEMENTS.introHeader;\n  if (!introHeader) {\n    return;\n  }\n\n  // Header animation: directProgress goes from 0-1 for the full header animation\n  let scale = 0;\n  let opacity = 0;\n\n  if (directProgress > 0 && directProgress < 1) {\n    if (directProgress <= 0.2) {\n      // 0% - 20%: scale 0->0.8, opacity 0->1\n      const keyframeProgress = directProgress / 0.2;\n      const easedProgress = easeInOutCubic(keyframeProgress);\n      scale = easedProgress * 0.8;\n      opacity = easedProgress; // 0.0 -> 1.0\n    } else if (directProgress <= 0.8) {\n      // 20% - 80%: scale 0.8->1.2, opacity stays 1\n      const keyframeProgress = (directProgress - 0.2) / 0.6;\n      scale = 0.8 + keyframeProgress * 0.4; // 0.8 -> 1.2\n      opacity = 1;\n    } else {\n      // 80% - 100%: scale 1.2->1.5, opacity 1->0\n      const keyframeProgress = (directProgress - 0.8) / 0.2;\n      scale = 1.2 + keyframeProgress * 0.3; // 1.2 -> 1.5\n      opacity = 1 - keyframeProgress; // 1 -> 0.0\n    }\n  } else if (directProgress >= 1) {\n    // Header finished\n    scale = 1.5;\n    opacity = 0;\n  } else {\n    // Header not started\n    scale = 0;\n    opacity = 0;\n  }\n\n  // Update transform and opacity\n  introHeader.style.setProperty(\"transform\", `scale(${scale})`, \"important\");\n  introHeader.style.opacity = opacity.toString();\n}\n\nfunction animateIntroBodyDirect(directProgress: number) {\n  const introBody = DOM_ELEMENTS.introBody;\n  if (!introBody) {\n    return;\n  }\n\n  // Body animation: directProgress goes from 0-1 for the full body animation\n  let scale = 0.5;\n  let opacity = 0;\n\n  if (directProgress > 0 && directProgress < 1) {\n    if (directProgress <= 0.2) {\n      // 0% - 20%: scale 0.5->0.8, opacity 0->1\n      const keyframeProgress = directProgress / 0.2;\n      const easedProgress = easeInOutCubic(keyframeProgress);\n      scale = 0.5 + easedProgress * 0.3; // 0.5 -> 0.8\n      opacity = easedProgress; // 0.0 -> 1.0\n    } else if (directProgress <= 0.8) {\n      // 20% - 80%: scale 0.8->1.2, opacity stays 1\n      const keyframeProgress = (directProgress - 0.2) / 0.6;\n      scale = 0.8 + keyframeProgress * 0.4; // 0.8 -> 1.2\n      opacity = 1;\n    } else {\n      // 80% - 100%: scale 1.2->1.5, opacity 1->0\n      const keyframeProgress = (directProgress - 0.8) / 0.2;\n      scale = 1.2 + keyframeProgress * 0.3; // 1.2 -> 1.5\n      opacity = 1 - keyframeProgress; // 1 -> 0.0\n    }\n  } else if (directProgress >= 1) {\n    // Body finished\n    scale = 1.5;\n    opacity = 0;\n  } else {\n    // Body not started yet\n    scale = 0.5;\n    opacity = 0;\n  }\n\n  // Update transform and opacity\n  introBody.style.setProperty(\"transform\", `scale(${scale})`, \"important\");\n  introBody.style.opacity = opacity.toString();\n}\n\nasync function setupGSAPIntroAnimations() {\n  try {\n    // Dynamic import GSAP with validation\n    const gsapModule = await import(\"gsap\");\n    const scrollTriggerModule = await import(\"gsap/ScrollTrigger\");\n\n    const gsap = gsapModule.gsap || gsapModule.default;\n    const ScrollTrigger =\n      scrollTriggerModule.ScrollTrigger || scrollTriggerModule.default;\n\n    if (!gsap || !ScrollTrigger) {\n      throw new Error(\"GSAP modules not loaded properly\");\n    }\n\n    gsap.registerPlugin(ScrollTrigger);\n\n    // Configure GSAP for smooth performance\n    gsap.config({\n      force3D: true, // Hardware acceleration\n      nullTargetWarn: false,\n      autoSleep: 60, // Keep animations responsive\n    });\n\n    // Optimize ScrollTrigger for smooth performance\n    ScrollTrigger.config({\n      autoRefreshEvents: \"visibilitychange,DOMContentLoaded,load\",\n      limitCallbacks: true,\n    });\n\n    // Header: 0% bis 50% Progress (top top bis center center)\n    ScrollTrigger.create({\n      trigger: DOM_ELEMENTS.introSection,\n      start: \"top top\",\n      end: \"center center\",\n      scrub: 0.3,\n      pin: DOM_ELEMENTS.introHeader,\n      pinSpacing: false,\n      invalidateOnRefresh: true,\n      onUpdate: (self) => {\n        const progress = self.progress;\n        animateIntroHeaderDirect(progress);\n        animateIntroBodyDirect(0);\n      },\n      onEnter: () => DOM_ELEMENTS.introHeader.classList.add(\"intro-centered\"),\n      onEnterBack: () =>\n        DOM_ELEMENTS.introHeader.classList.add(\"intro-centered\"),\n      onLeave: () =>\n        DOM_ELEMENTS.introHeader.classList.remove(\"intro-centered\"),\n      onLeaveBack: () =>\n        DOM_ELEMENTS.introHeader.classList.remove(\"intro-centered\"),\n    });\n\n    // Body: 50% bis 100% Progress (center center bis bottom bottom)\n    ScrollTrigger.create({\n      trigger: DOM_ELEMENTS.introSection,\n      start: \"center center\",\n      end: \"bottom bottom\",\n      scrub: 0.3,\n      pin: DOM_ELEMENTS.introBody,\n      pinSpacing: false,\n      invalidateOnRefresh: true,\n      onUpdate: (self) => {\n        const progress = self.progress;\n        animateIntroHeaderDirect(1);\n        animateIntroBodyDirect(progress);\n      },\n      onEnter: () => DOM_ELEMENTS.introBody.classList.add(\"intro-centered\"),\n      onEnterBack: () => DOM_ELEMENTS.introBody.classList.add(\"intro-centered\"),\n      onLeave: () => DOM_ELEMENTS.introBody.classList.remove(\"intro-centered\"),\n      onLeaveBack: () =>\n        DOM_ELEMENTS.introBody.classList.remove(\"intro-centered\"),\n    });\n  } catch (error) {\n    console.error(\"❌ GSAP intro animations setup failed:\", error);\n    setupManualIntroAnimations();\n  }\n}\n\nfunction setupManualIntroAnimations() {\n  let scrollCount = 0;\n  window.addEventListener(\"scroll\", () => {\n    scrollCount++;\n\n    // Manual intro animation: Use the exact backup.js timing\n    if (\n      DOM_ELEMENTS.introSection &&\n      DOM_ELEMENTS.introHeader &&\n      DOM_ELEMENTS.introBody\n    ) {\n      const rect = DOM_ELEMENTS.introSection.getBoundingClientRect();\n\n      if (rect.top <= 0 && rect.bottom >= 0) {\n        // Section is visible - calculate progress\n        const scrolledDistance = Math.abs(rect.top);\n        const overallProgress = Math.min(1, scrolledDistance / rect.height);\n\n        // HEADER: 0% to 50% (backup.js: \"top top\" to \"center center\")\n        if (overallProgress <= 0.5) {\n          const headerProgress = overallProgress / 0.5;\n          animateIntroHeaderDirect(headerProgress);\n          animateIntroBodyDirect(0);\n        } else {\n          // BODY: 50% to 100% (backup.js: \"center center\" to \"bottom bottom\")\n          const bodyProgress = (overallProgress - 0.5) / 0.5;\n          animateIntroHeaderDirect(1);\n          animateIntroBodyDirect(bodyProgress);\n        }\n      } else {\n        // Section not visible - reset\n        animateIntroHeaderDirect(0);\n        animateIntroBodyDirect(0);\n      }\n    }\n  });\n}\n\nexport function initIntroAnimations() {\n  setupGSAPIntroAnimations();\n}\n","import { initRenderer, setupLighting } from \"./scene\";\nimport { initCamera, setupCameraResize } from \"./camera\";\nimport { loadModel } from \"./objects\";\nimport { initAnimationSystem } from \"./animation\";\nimport { initIntroAnimations } from \"./intro-animations\";\nimport { initPOVAnimationSystem } from \"./pov-animation\";\n\nasync function init() {\n  try {\n    initRenderer();\n    setupLighting();\n    initCamera();\n    setupCameraResize();\n\n    await loadModel();\n\n    initAnimationSystem();\n    initIntroAnimations();\n    await initPOVAnimationSystem();\n  } catch (error) {\n    console.error(\"Initialization error:\", error);\n  }\n}\n\n// Start the application\ninit();\n"],"names":["leafPrototypes","getProto","module","exports","gsap","ScrollTrigger","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","Object","getPrototypeOf","obj","t","value","mode","this","__esModule","then","ns","create","r","def","current","indexOf","getOwnPropertyNames","forEach","key","d","definition","o","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","THREE","isMobile","window","innerWidth","MAZE_CENTER","CAMERA_POSITIONS","startMobile","startDesktop","secondMobile","secondDesktop","mobileLookAt","desktopLookAt","startPosition","secondPosition","lookAtPosition","SELECTORS","DOM_ELEMENTS","mazeContainer","document","querySelector","canvas","finalSection","finalContainer","parentElements","querySelectorAll","scene","renderer","antialias","alpha","powerPreference","precision","clock","setPixelRatio","pixelRatio","Math","min","devicePixelRatio","setSize","clientWidth","clientHeight","innerHeight","quaternion","clone","endQuaternion","setFromEuler","mazeTexture","load","mazeMaterial","matcap","topMaterial","color","metalness","roughness","envMapIntensity","ghostMaterial","opacity","transparent","depthWrite","depthTest","blending","side","transmission","floorMaterial","pacmanMaterials","blue","white","default","materialMap","CAM_Pacman_Backframe","CAM_Pacman_Logo_1","CAM_Pacman_Logo_2","loader","Array","fill","pacmanMixer","pacman","add","ghost1","ghost2","ghost3","ghost4","ghost5","ghostContainers","Ghost_EUR","Ghost_CHF","Ghost_YEN","Ghost_USD","Ghost_GBP","values","ghost","pacmanHomePathPoints","pos","type","curveType","ghost1HomePathPoints","ghost2HomePathPoints","ghost3HomePathPoints","ghost4HomePathPoints","ghost5HomePathPoints","cameraPOVPathPoints","ghost1POVPathPoints","ghost2POVPathPoints","ghost3POVPathPoints","ghost4POVPathPoints","ghost5POVPathPoints","paths","pacmanHome","createPath","ghost1Home","ghost2Home","ghost3Home","ghost4Home","ghost5Home","cameraPOV","ghost1POV","ghost2POV","ghost3POV","ghost4POV","ghost5POV","pathPoints","path","i","length","next","line","midPoint","x","y","z","curve","getPathsForSection","section","homeSection","introSection","introHeader","introBody","povSection","TriggerPositions","triggerPos","ghostTextPos","camTextPos","endPosition","parent","active","isPOVAnimationActive","cameraManualRotation","povPaths","console","log","keys","entries","getLength","getPointAt","progress","point","ghostKeys","position","visible","fov","prevCameraQuat","povTriggerStates","findClosestProgressOnPOVPath","targetPoint","samples","minDist","Infinity","minT","distanceTo","async","initPOVAnimationSystem","error","missingGhosts","filter","warn","missingTriggers","trigger","map","gsapModule","scrollTriggerModule","registerPlugin","povScrollTrigger","start","end","scrub","onUpdate","self","rect","getBoundingClientRect","max","bottom","currentProgress","cameraPosition","copy","smoothTransition","forwardVector","downVector","forwardDownDirection","addVectors","multiplyScalar","normalize","entryDirection","flexibleDirection","getFlexibleCameraDirection","blendedDirection","lookAtPoint","tempMatrix","lookAt","up","targetQuaternion","setFromRotationMatrix","targetLookAt","angleDifference","angleTo","dynamicSmoothing","PI","CAMERA_SLERP_ALPHA","slerpQuaternions","applySmoothCameraRotation","updateProjectionMatrix","updateMatrixWorld","updatePOVCamera","ghostProgress","lookAheadProgress","lookAheadPos","ensureGhostVisible","material","isArray","mat","needsUpdate","traverse","toFixed","triggerState","currentCameraProgress","triggerCameraProgress","ghostTextCameraProgress","camTextCameraProgress","endCameraProgress","targetGhostOpacity","targetCamOpacity","sectionLength","fadeInStart","fadeInEnd","stayVisibleUntil","fadeOutEnd","camFadeInStart","camFadeInEnd","ghostTextOpacity","camTextOpacity","povElements","camElements","cmpPovElement","cmpPovOpacity","round","style","toString","visibility","pointerEvents","transition","camOpacity","povElement","element","fadeOutOpacity","camElement","display","updatePOVTextElements","updatePOVTexts","updatePOVAnimation","onEnter","onLeave","state","el","smoothTangent","currentTangent","getTangentAt","lookAheadTangent","lookBehindProgress","lookBehindTangent","averageTangent","divideScalar","dotProduct","dot","isModerateTurn","getSmoothCameraTangent","upTilt","GHOST_SPEED_MULTIPLIERS","animationState","homeProgress","scrollProgress","bezierCurves","capturedPositions","capturedRotations","cameraScrollCurve","cameraScrollStartQuat","scrollTriggerInitialized","homePositionsCaptured","pausedHomeProgress","isTransitioningToHome","transitionProgress","transitionStartPositions","transitionStartRotations","homePathKeys","homePaths","easeInOutCubic","pow","setGhostOpacity","opacitySet","applyOpacity","mesh","isMeshBasicMaterial","isMeshStandardMaterial","isMeshPhysicalMaterial","isMeshMatcapMaterial","isShaderMaterial","uniforms","child","name","constructor","lastScrollProgress","setScrollProgress","abs","render","animationLoop","requestAnimationFrame","dt","getDelta","update","easedProgress","includes","targetPos","startPos","lerpVectors","startRot","tangent","targetRot","zRot","atan2","set","setFromQuaternion","setFromUnitVectors","startQuat","targetQuat","interpolatedQuat","animateTransitionToHome","rotation","endPos","control","speed","origRot","endQuat","getPoint","q","animateCameraScroll","animateHomeLoop","animateIntroHeaderDirect","directProgress","scale","keyframeProgress","setProperty","animateIntroBodyDirect","shadowMap","enabled","appendChild","domElement","body","readyState","addEventListener","ambientLight","directionalLight","shadow","mapSize","width","height","camera","left","right","top","near","far","bias","radius","castShadow","setupLighting","aspect","Promise","resolve","reject","gltf","model","children","subChild","isMesh","push","item","pacmanActions","animations","clip","action","clipAction","setEffectiveWeight","play","ghostContainer","ghostGroup","startsWith","clonedChild","receiveShadow","node","loadModel","Error","timeline","scrollTrigger","to","duration","setupScrollTrigger","testOpacity","config","force3D","nullTargetWarn","autoSleep","autoRefreshEvents","limitCallbacks","pin","pinSpacing","invalidateOnRefresh","classList","onEnterBack","remove","onLeaveBack","scrolledDistance","overallProgress","bodyProgress","setupGSAPIntroAnimations","init"],"sourceRoot":""}