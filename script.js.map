{"version":3,"file":"script.js","mappings":"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","sources":["webpack://cam-3d-animation/webpack/bootstrap","webpack://cam-3d-animation/webpack/runtime/compat get default export","webpack://cam-3d-animation/webpack/runtime/define property getters","webpack://cam-3d-animation/webpack/runtime/hasOwnProperty shorthand","webpack://cam-3d-animation/external var \"THREE\"","webpack://cam-3d-animation/./src/config/config.ts","webpack://cam-3d-animation/./src/config/selectors.ts","webpack://cam-3d-animation/external var \"gsap\"","webpack://cam-3d-animation/external var \"ScrollTrigger\"","webpack://cam-3d-animation/./src/paths/pathpoints.ts","webpack://cam-3d-animation/./src/core/camera.ts","webpack://cam-3d-animation/./src/core/scene.ts","webpack://cam-3d-animation/./src/core/materials.ts","webpack://cam-3d-animation/./src/core/objects.ts","webpack://cam-3d-animation/./src/paths/paths.ts","webpack://cam-3d-animation/./src/animation/util.ts","webpack://cam-3d-animation/./src/animation/HomeScroll.ts","webpack://cam-3d-animation/./src/animation/HomeLoop.ts","webpack://cam-3d-animation/./src/animation/POVAnimation.ts","webpack://cam-3d-animation/./src/main.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = THREE;","export const isMobile = window.innerWidth < 768;\n\nexport const CAMERA_CONFIG = {\n  originalFOV: 50,\n  wideFOV: 80,\n  near: 0.001,\n  far: 100,\n};\n\nexport const ASSETS = {\n  mazeTexture: \"https://c-am.b-cdn.net/CAM/matcap24.png\",\n  mazeModel: \"https://c-am.b-cdn.net/CAM/c-am-assets-3.glb\",\n};\n","const SELECTORS = {\n  mazeContainer: \".el--home-maze.el\",\n\n  homeSection: \".sc--home.sc\",\n  introSection: \".sc--intro.sc\",\n  povSection: \".sc--pov.sc\",\n  finalSection: \".sc--final.sc\",\n  finalContainer: \".cr--final.cr\",\n\n  scrollComponent: \".cmp--scroll.cmp\",\n  parentElements: \".cmp--pov.cmp\",\n\n  pov: \".pov\",\n  cam: \".cam\",\n};\n\nexport const DOM_ELEMENTS = {\n  mazeContainer: document.querySelector(SELECTORS.mazeContainer) as HTMLElement,\n  canvas: document.querySelector(\"canvas\") as HTMLCanvasElement,\n\n  homeSection: document.querySelector(SELECTORS.homeSection) as HTMLElement,\n  introSection: document.querySelector(SELECTORS.introSection) as HTMLElement,\n  povSection: document.querySelector(SELECTORS.povSection) as HTMLElement,\n  finalSection: document.querySelector(SELECTORS.finalSection) as HTMLElement,\n  finalContainer: document.querySelector(\n    SELECTORS.finalContainer\n  ) as HTMLElement,\n\n  parentElements: document.querySelectorAll(\n    SELECTORS.parentElements\n  ) as NodeListOf<Element>,\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = gsap;","const __WEBPACK_NAMESPACE_OBJECT__ = ScrollTrigger;","import * as THREE from \"three\";\nimport { MazePathPoint, PathPoint, CameraPathPoint } from \"../types/types\";\nimport { isMobile } from \"../config/config\";\n\nconst objectHomeScrollEndPathPoint = new THREE.Vector3(0.55675, 0.35, 0.45175);\nconst cameraHomeScrollEndPathPoint = new THREE.Vector3(0.55675, 0.5, 0.45175);\nconst cameraHomeScrollEndLookAt = new THREE.Vector3(0.55675, -5, 0.35);\n\nconst cameraPathPointsConfig = {\n  startMobile: new THREE.Vector3(0.5, 2.5, 2.5),\n  startDesktop: new THREE.Vector3(-2, 2.5, 2),\n  secondMobile: new THREE.Vector3(0.5, 2.5, 2),\n  secondDesktop: new THREE.Vector3(-1.5, 3, 0.75),\n  mobileLookAt: new THREE.Vector3(0.5, 0.5, -1.5),\n  desktopLookAt: new THREE.Vector3(-1.25, 0.5, 0.25),\n};\n\nconst startPosition = isMobile\n  ? cameraPathPointsConfig.startMobile\n  : cameraPathPointsConfig.startDesktop;\nconst secondPosition = isMobile\n  ? cameraPathPointsConfig.secondMobile\n  : cameraPathPointsConfig.secondDesktop;\nconst lookAtPosition = isMobile\n  ? cameraPathPointsConfig.mobileLookAt\n  : cameraPathPointsConfig.desktopLookAt;\n\nconst pacmanHomePathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.0045),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.6025), type: \"straight\" },\n];\n\nconst ghost1HomePathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.75775, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.004, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.0965, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n];\n\nconst ghost2HomePathPoints: MazePathPoint[] = [\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.004, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.502), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.3055, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.3055, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.0965, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n];\n\nconst ghost3HomePathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.75325), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.15475, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.55675, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.009, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.904), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.75775, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.004, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.808, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.75325), type: \"straight\" },\n];\n\nconst ghost4HomePathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.65725, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.15975, 0.55, 0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.6025), type: \"straight\" },\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.4015), type: \"straight\" },\n];\n\nconst ghost5HomePathPoints: MazePathPoint[] = [\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.04975),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.3055, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, -0.101), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.04975),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n];\n\nconst cameraHomeScrollPathPoints: CameraPathPoint[] = [\n  { pos: startPosition, lookAt: lookAtPosition },\n  { pos: secondPosition, lookAt: new THREE.Vector3(-0.75, 0.5, -0.75) }, //(0.55675, -5, 0.35)\n  {\n    pos: new THREE.Vector3(0.55675, 3, 0.45175),\n    lookAt: cameraHomeScrollEndLookAt,\n  },\n  { pos: cameraHomeScrollEndPathPoint, lookAt: cameraHomeScrollEndLookAt },\n];\n\nconst cameraPOVPathPoints: CameraPathPoint[] = [\n  {\n    pos: new THREE.Vector3(0.55675, 0.5, 0.45175),\n    type: \"curve\",\n    curveType: \"forwardDownArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.607, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.9085, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.85375),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.15525),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.9085, 0.55, 1.2055),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.808, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 1.15525),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 1.05475),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.7075, 0.55, 1.0045),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.205, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.05475),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.15525),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.205, 0.55, 1.2055),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.5065, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 1.306),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 1, 2.0095),\n    type: \"straight\",\n  },\n];\n\nconst ghost1POVPathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.009, 0.55, 0.8035), type: \"straight\" },\n  { pos: new THREE.Vector3(0.9085, 0.55, 0.8035), type: \"straight\" },\n];\n\nconst ghost2POVPathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.009, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 1.15525), type: \"straight\" },\n  { pos: new THREE.Vector3(0.95875, 0.55, 1.05475), type: \"straight\" },\n];\n\nconst ghost3POVPathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.904), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.95425),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.406, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.5065, 0.55, 1.0045), type: \"straight\" },\n];\n\nconst ghost4POVPathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(0.15475, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.05475),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.205, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.3055, 0.55, 1.0045), type: \"straight\" },\n];\n\nconst ghost5POVPathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(0.55675, 0.55, 1.306), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 1.25575),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.5065, 0.55, 1.2055), type: \"straight\" },\n  { pos: new THREE.Vector3(0.406, 0.55, 1.2055), type: \"straight\" },\n];\n\nexport const povTriggerPositions = {\n  ghost1: {\n    triggerPos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    ghostTextPos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    camTextPos: new THREE.Vector3(0.75775, 0.55, 0.8035),\n    endPosition: new THREE.Vector3(0.85825, 0.55, 0.8035),\n  },\n  ghost2: {\n    triggerPos: new THREE.Vector3(0.9085, 0.55, 0.8035),\n    ghostTextPos: new THREE.Vector3(0.95875, 0.55, 0.85375),\n    camTextPos: new THREE.Vector3(0.95875, 0.55, 0.904),\n    endPosition: new THREE.Vector3(0.95875, 0.55, 1.0045),\n  },\n  ghost3: {\n    triggerPos: new THREE.Vector3(0.75775, 0.55, 1.05475),\n    ghostTextPos: new THREE.Vector3(0.7075, 0.55, 1.0045),\n    camTextPos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    endPosition: new THREE.Vector3(0.55675, 0.55, 1.0045),\n  },\n  ghost4: {\n    triggerPos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    ghostTextPos: new THREE.Vector3(0.5065, 0.55, 1.0045),\n    camTextPos: new THREE.Vector3(0.45625, 0.55, 1.0045),\n    endPosition: new THREE.Vector3(0.35575, 0.55, 1.0045),\n  },\n  ghost5: {\n    triggerPos: new THREE.Vector3(0.15475, 0.55, 1.15525),\n    ghostTextPos: new THREE.Vector3(0.205, 0.55, 1.2055),\n    camTextPos: new THREE.Vector3(0.25525, 0.55, 1.2055),\n    endPosition: new THREE.Vector3(0.35575, 0.55, 1.2055),\n  },\n};\n\nexport function getStartPosition() {\n  return startPosition;\n}\n\nexport function getSecondPosition() {\n  return secondPosition;\n}\n\nexport function getLookAtPosition() {\n  return lookAtPosition;\n}\n\nexport const homePaths = {\n  pacman: pacmanHomePathPoints,\n  ghost1: ghost1HomePathPoints,\n  ghost2: ghost2HomePathPoints,\n  ghost3: ghost3HomePathPoints,\n  ghost4: ghost4HomePathPoints,\n  ghost5: ghost5HomePathPoints,\n} as const;\n\nexport const povPaths = {\n  camera: cameraPOVPathPoints,\n  ghost1: ghost1POVPathPoints,\n  ghost2: ghost2POVPathPoints,\n  ghost3: ghost3POVPathPoints,\n  ghost4: ghost4POVPathPoints,\n  ghost5: ghost5POVPathPoints,\n} as const;\n\nexport function createHomeScrollPathPoints(\n  pausedPositions: Record<string, THREE.Vector3>\n): Record<string, PathPoint[]> {\n  const scrollPaths: Record<string, PathPoint[]> = {};\n\n  Object.entries(pausedPositions).forEach(([key, pausedPos]) => {\n    const arcPoint = new THREE.Vector3(\n      pausedPos.x * (1 / 4) + objectHomeScrollEndPathPoint.x * (3 / 4),\n      1.5,\n      pausedPos.z * (1 / 4) + objectHomeScrollEndPathPoint.z * (3 / 4)\n    );\n\n    scrollPaths[key] = [\n      { pos: pausedPos.clone() },\n      { pos: arcPoint },\n      { pos: objectHomeScrollEndPathPoint },\n    ];\n  });\n\n  return scrollPaths;\n}\n\nexport function getCameraHomeScrollPathPoints(): CameraPathPoint[] {\n  return cameraHomeScrollPathPoints;\n}\n","import * as THREE from \"three\";\nimport gsap from \"gsap\";\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\nimport { getLookAtPosition, getStartPosition } from \"../paths/pathpoints\";\nimport { CAMERA_CONFIG } from \"../config/config\";\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport const camera = new THREE.PerspectiveCamera(\n  50,\n  window.innerWidth / window.innerHeight,\n  CAMERA_CONFIG.near,\n  CAMERA_CONFIG.far\n);\n\nexport function setupCamera(): void {\n  const startPosition = getStartPosition();\n  const lookAtPosition = getLookAtPosition();\n  camera.position.set(startPosition.x, startPosition.y, startPosition.z);\n  camera.lookAt(lookAtPosition.x, lookAtPosition.y, lookAtPosition.z);\n}\n","import * as THREE from \"three\";\nimport { isMobile } from \"../config/config\";\nimport { DOM_ELEMENTS } from \"../config/selectors\";\nimport { camera } from \"./camera\";\n\nfunction enhanceAntiAliasing(): void {\n  if (isMobile) {\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n  } else {\n    renderer.setPixelRatio(window.devicePixelRatio);\n  }\n  renderer.shadowMap.enabled = true;\n  renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n}\n\nfunction setPixelRatio(): void {\n  const pixelRatio = Math.min(window.devicePixelRatio, isMobile ? 2 : 3);\n  renderer.setPixelRatio(pixelRatio);\n\n  if (DOM_ELEMENTS.mazeContainer) {\n    renderer.setSize(\n      DOM_ELEMENTS.mazeContainer.clientWidth,\n      DOM_ELEMENTS.mazeContainer.clientHeight\n    );\n  } else {\n    renderer.setSize(window.innerWidth, window.innerHeight);\n  }\n}\n\nexport function setupLighting(): void {\n  const ambientLight = new THREE.AmbientLight(0xffffff);\n  scene.add(ambientLight);\n\n  const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n  scene.add(directionalLight);\n  directionalLight.position.set(-5, 15, 10);\n  directionalLight.shadow.mapSize.width = 4096;\n  directionalLight.shadow.mapSize.height = 4096;\n  directionalLight.shadow.camera.left = -20;\n  directionalLight.shadow.camera.right = 20;\n  directionalLight.shadow.camera.top = 20;\n  directionalLight.shadow.camera.bottom = -20;\n  directionalLight.shadow.camera.near = 0.1;\n  directionalLight.shadow.camera.far = 50;\n  directionalLight.shadow.bias = -0.001;\n  directionalLight.shadow.radius = 3;\n  directionalLight.castShadow = true;\n}\n\nexport const scene = new THREE.Scene();\n\nconst renderer = new THREE.WebGLRenderer({\n  antialias: true,\n  alpha: true,\n  powerPreference: \"high-performance\",\n  precision: \"highp\",\n});\n\nconst clock = new THREE.Clock();\nconst frameCallbacks: (() => void)[] = [];\n\nexport function initRenderer(): void {\n  enhanceAntiAliasing();\n\n  if (DOM_ELEMENTS.mazeContainer) {\n    renderer.setSize(\n      DOM_ELEMENTS.mazeContainer.clientWidth,\n      DOM_ELEMENTS.mazeContainer.clientHeight\n    );\n    DOM_ELEMENTS.mazeContainer.appendChild(renderer.domElement);\n  } else {\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n  }\n\n  if (document.readyState === \"loading\") {\n    document.addEventListener(\"DOMContentLoaded\", setPixelRatio);\n  } else {\n    setPixelRatio();\n  }\n  window.addEventListener(\"resize\", setPixelRatio);\n\n  renderer.render(scene, camera);\n}\n\nexport function startRenderLoop(): void {\n  const render = () => {\n    frameCallbacks.forEach((callback) => callback());\n\n    renderer.render(scene, camera);\n\n    requestAnimationFrame(render);\n  };\n  render();\n}\n\nexport function onFrame(callback: () => void): void {\n  frameCallbacks.push(callback);\n}\n\nexport { renderer, clock };\n","import * as THREE from \"three\";\nimport { ASSETS } from \"../config/config\";\n\nconst textureLoader = new THREE.TextureLoader();\n\nconst mazeTexture = textureLoader.load(ASSETS.mazeTexture);\n\nexport const mazeMaterial = new THREE.MeshMatcapMaterial({\n  matcap: mazeTexture,\n});\n\nexport const topMaterial = new THREE.MeshStandardMaterial({\n  color: 0xf2f9f9,\n  metalness: 0.4,\n  roughness: 0,\n  envMapIntensity: 10,\n});\n\nexport const ghostMaterial = new THREE.MeshPhysicalMaterial({\n  color: 0xffffff,\n  opacity: 1,\n  transparent: true,\n  depthWrite: false,\n  depthTest: true,\n  blending: THREE.NormalBlending,\n  side: THREE.DoubleSide,\n  roughness: 0.75,\n  metalness: 0.2,\n  transmission: 0.5,\n});\n\nexport const floorMaterial = new THREE.MeshStandardMaterial({\n  color: 0xffffff,\n  opacity: 0.8,\n  transparent: true,\n  roughness: 0.5,\n  metalness: 0.1,\n});\n\nconst pacmanMaterials = {\n  blue: new THREE.MeshBasicMaterial({\n    color: 0x1469d3,\n    transparent: true,\n    opacity: 1,\n  }),\n  white: new THREE.MeshBasicMaterial({\n    color: 0xffffff,\n    transparent: true,\n    opacity: 1,\n  }),\n  default: new THREE.MeshBasicMaterial({\n    color: 0x1469d3,\n    transparent: true,\n    opacity: 1,\n  }),\n};\n\nexport const materialMap = {\n  CAM_Pacman_Backframe: pacmanMaterials.blue,\n  \"CAM-Pacman_Bitcoin_1\": pacmanMaterials.white,\n  \"CAM-Pacman_Bitcoin_2\": pacmanMaterials.white,\n  \"CAM-Pacman_Bottom\": pacmanMaterials.blue,\n  \"CAM-Pacman_Top\": pacmanMaterials.blue,\n  \"CAM-Pacman_Eye\": pacmanMaterials.white,\n  CAM_Pacman_Logo_1: pacmanMaterials.white,\n  CAM_Pacman_Logo_2: pacmanMaterials.white,\n  \"CAM-Pacman_Shell_Boolean\": pacmanMaterials.blue,\n  \"CAM-Pacman_Shell\": pacmanMaterials.blue,\n  \"CAM-Pacman_Bottom_electronic\": pacmanMaterials.white,\n  \"CAM-Pacman_Top_electronic\": pacmanMaterials.white,\n  \"CAM-Pacman_Bottom_Text\": pacmanMaterials.white,\n  \"CAM-Pacman_Top_Text\": pacmanMaterials.white,\n  default: pacmanMaterials.blue,\n};\n","import * as THREE from \"three\";\nimport { ASSETS } from \"../config/config\";\nimport { GhostContainer } from \"../types/types\";\nimport { clock } from \"./scene\";\nimport {\n  mazeMaterial,\n  topMaterial,\n  ghostMaterial,\n  floorMaterial,\n  materialMap,\n} from \"./materials\";\n\nexport { clock };\n\nconst loader = new THREE.GLTFLoader();\n\nexport let pacmanMixer: THREE.AnimationMixer;\n\nexport const pacman = new THREE.Group();\n\nexport const ghosts: GhostContainer = {\n  pacman: pacman,\n  ghost1: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost2: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost3: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost4: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost5: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n};\n\nconst ghostContainers = {\n  Ghost_EUR: ghosts.ghost1,\n  Ghost_CHF: ghosts.ghost2,\n  Ghost_YEN: ghosts.ghost3,\n  Ghost_USD: ghosts.ghost4,\n  Ghost_GBP: ghosts.ghost5,\n};\n\nexport async function loadModel(scene: THREE.Scene): Promise<void> {\n  Object.values(ghosts).forEach((ghost) => scene.add(ghost));\n  scene.add(pacman);\n  return new Promise((resolve, reject) => {\n    loader.load(\n      ASSETS.mazeModel,\n      function (gltf) {\n        const model = gltf.scene;\n\n        // Print all elements in the 3D model\n        console.log(\"=== 3D Model Hierarchy ===\");\n        model.traverse((obj: THREE.Object3D) => {\n          console.log(`[${obj.type}] ${obj.name}`);\n        });\n        console.log(\"=========================\");\n\n        model.traverse((child: THREE.Object3D) => {\n          if (child.name === \"CAM-Pacman\") {\n            const children: THREE.Object3D[] = [];\n            child.traverse((subChild: THREE.Object3D) => {\n              if (\n                (subChild as any).isMesh &&\n                subChild.name !== \"CAM-Pacman_Shell\" &&\n                subChild.name !== \"CAM-Pacman_Shell_Boolean\"\n              ) {\n                const material =\n                  materialMap[subChild.name as keyof typeof materialMap] ||\n                  materialMap.default;\n                (subChild as THREE.Mesh).material = material;\n                children.push(subChild);\n              } else if (\n                subChild.name === \"CAM-Pacman_Shell\" ||\n                subChild.name === \"CAM-Pacman_Shell_Boolean\"\n              ) {\n                subChild.visible = false;\n              }\n            });\n\n            children.forEach((item) => ghosts.pacman.add(item));\n            ghosts.pacman.scale.set(0.05, 0.05, 0.05);\n            ghosts.pacman.rotation.set(Math.PI / 2, Math.PI / 2, Math.PI / 4);\n\n            pacmanMixer = new THREE.AnimationMixer(ghosts.pacman);\n            const pacmanActions: { [key: string]: THREE.AnimationAction } = {};\n\n            gltf.animations.forEach((clip: THREE.AnimationClip) => {\n              const action = pacmanMixer.clipAction(clip);\n              pacmanActions[clip.name] = action;\n              action.setEffectiveWeight(1);\n              action.play();\n            });\n          } else if (\n            child.name &&\n            ghostContainers[child.name as keyof typeof ghostContainers]\n          ) {\n            const ghostContainer =\n              ghostContainers[child.name as keyof typeof ghostContainers];\n            const ghostGroup = new THREE.Group();\n\n            child.rotation.z = Math.PI;\n            child.rotation.x = Math.PI / 2;\n            child.scale.set(0.75, 0.75, 0.75);\n\n            const children: THREE.Object3D[] = [];\n            child.traverse((subChild: THREE.Object3D) => {\n              if ((subChild as any).isMesh) {\n                if (subChild.name && subChild.name.startsWith(\"Ghost_Mesh\")) {\n                  (subChild as THREE.Mesh).material = ghostMaterial;\n                } else if (\n                  subChild.name &&\n                  [\"EUR\", \"CHF\", \"YEN\", \"USD\", \"GBP\"].includes(subChild.name)\n                ) {\n                  subChild.visible = false;\n                }\n                children.push(subChild);\n              }\n            });\n\n            children.forEach((item) => {\n              if (\n                item.name &&\n                (item.name.includes(\"EUR\") ||\n                  item.name.startsWith(\"Ghost_Mesh\"))\n              ) {\n                item.rotation.z = Math.PI;\n                item.rotation.x = Math.PI / 2;\n              } else {\n                item.rotation.set(0, 0, 0);\n              }\n              ghostGroup.add(item);\n            });\n\n            if (ghostContainer) {\n              ghostContainer.add(ghostGroup);\n            } else {\n              console.warn(`ghostContainer for ${child.name} is undefined!`);\n            }\n          }\n\n          if ((child as any).isMesh) {\n            if (child.name === \"CAM-Arena_LowRes_Top\") {\n              (child as THREE.Mesh).material = topMaterial;\n              child.castShadow = true;\n            } else if (child.name === \"CAM-Arena_LowRes_Bottom\") {\n              (child as THREE.Mesh).material = mazeMaterial;\n              child.castShadow = true;\n            } else if (child.name === \"CAM-Floor\") {\n              const clonedChild = child.clone();\n              child.position.y = -0.1;\n              child.position.x = 0;\n              child.position.z = 0;\n              (child as THREE.Mesh).material = new THREE.MeshBasicMaterial({\n                color: 0xffffff,\n                opacity: 1,\n                transparent: false,\n                depthWrite: true,\n                depthTest: true,\n                side: THREE.FrontSide,\n              });\n              child.receiveShadow = false;\n              child.castShadow = true;\n              child.scale.set(0.5, 0.5, 0.5);\n\n              (clonedChild as THREE.Mesh).material = floorMaterial;\n              clonedChild.position.y = -0.5;\n              clonedChild.receiveShadow = true;\n              scene.add(clonedChild);\n            }\n          }\n        });\n\n        model.traverse(function (node: THREE.Object3D) {\n          if ((node as any).isMesh) {\n            node.castShadow = true;\n            node.receiveShadow = true;\n          }\n        });\n\n        scene.add(model);\n        model.position.set(0.5, 0.5, 0.5);\n\n        resolve();\n      },\n      function (progress: any) {},\n      function (error: any) {\n        reject(error);\n      }\n    );\n  });\n}\n","import * as THREE from \"three\";\nimport { MazePathPoint, PathPoint, CameraPathPoint } from \"../types/types\";\nimport {\n  homePaths,\n  povPaths,\n  createHomeScrollPathPoints,\n  getCameraHomeScrollPathPoints,\n} from \"./pathpoints\";\n\nfunction createMazePath(\n  pathPoints: (MazePathPoint | CameraPathPoint)[]\n): THREE.CurvePath<THREE.Vector3> {\n  const path = new THREE.CurvePath<THREE.Vector3>();\n\n  const typedPathPoints = pathPoints.filter(\n    (point) => \"type\" in point\n  ) as Array<{\n    pos: THREE.Vector3;\n    type: \"straight\" | \"curve\";\n    curveType?: \"upperArc\" | \"lowerArc\" | \"forwardDownArc\";\n  }>;\n\n  for (let i = 0; i < typedPathPoints.length - 1; i++) {\n    const current = typedPathPoints[i];\n    const next = typedPathPoints[i + 1];\n\n    if (current.type === \"straight\") {\n      path.add(new THREE.LineCurve3(current.pos, next.pos));\n    } else if (current.type === \"curve\") {\n      const hasPrevCurve = i > 0 && typedPathPoints[i - 1].type === \"curve\";\n      const hasNextCurve =\n        i < typedPathPoints.length - 2 &&\n        typedPathPoints[i + 1].type === \"curve\";\n\n      const midPoint =\n        hasPrevCurve || hasNextCurve\n          ? createDoubleCurveMidPoint(current, next, hasPrevCurve, hasNextCurve)\n          : createSingleCurveMidPoint(current, next);\n\n      path.add(\n        new THREE.QuadraticBezierCurve3(current.pos, midPoint, next.pos)\n      );\n    }\n  }\n  return path;\n}\n\nfunction createCameraPath(\n  pathPoints: CameraPathPoint[]\n): THREE.CurvePath<THREE.Vector3> {\n  // Use the same logic as createMazePath since they handle the same curve types\n  return createMazePath(pathPoints);\n}\n\nfunction createSingleCurveMidPoint(\n  current: { pos: THREE.Vector3; curveType?: string },\n  next: { pos: THREE.Vector3; curveType?: string }\n): THREE.Vector3 {\n  if (current.curveType) {\n    const curveType = current.curveType;\n\n    if (curveType === \"upperArc\") {\n      return new THREE.Vector3(current.pos.x, current.pos.y, next.pos.z);\n    } else if (curveType === \"lowerArc\") {\n      return new THREE.Vector3(next.pos.x, current.pos.y, current.pos.z);\n    } else if (curveType === \"forwardDownArc\") {\n      return new THREE.Vector3(current.pos.x, next.pos.y, current.pos.z);\n    }\n  }\n\n  return new THREE.Vector3(current.pos.x, current.pos.y, next.pos.z);\n}\n\nfunction createDoubleCurveMidPoint(\n  current: { pos: THREE.Vector3; curveType?: string },\n  next: { pos: THREE.Vector3; curveType?: string },\n  hasPrevCurve: boolean,\n  hasNextCurve: boolean\n): THREE.Vector3 {\n  const smoothingFactor = 0.12;\n  const originalMidPoint = createSingleCurveMidPoint(current, next);\n  const straightMidPoint = current.pos.clone().lerp(next.pos, 0.5);\n\n  return originalMidPoint.clone().lerp(straightMidPoint, smoothingFactor);\n}\n\nfunction createHomeScrollPath(\n  pathPoints: PathPoint[]\n): THREE.CurvePath<THREE.Vector3> {\n  const path = new THREE.CurvePath<THREE.Vector3>();\n\n  if (pathPoints.length === 3) {\n    const curve = new THREE.QuadraticBezierCurve3(\n      pathPoints[0].pos,\n      pathPoints[1].pos,\n      pathPoints[2].pos\n    );\n    path.add(curve);\n  }\n\n  return path;\n}\n\nfunction createCameraHomeScrollPath(\n  pathPoints: CameraPathPoint[]\n): THREE.CurvePath<THREE.Vector3> {\n  const path = new THREE.CurvePath<THREE.Vector3>();\n\n  console.log(\"createCameraHomeScrollPath - pathPoints:\", pathPoints);\n\n  if (pathPoints.length === 4) {\n    const curve = new THREE.CubicBezierCurve3(\n      pathPoints[0].pos,\n      pathPoints[1].pos,\n      pathPoints[2].pos,\n      pathPoints[3].pos\n    );\n    console.log(\n      \"createCameraHomeScrollPath - created curve with points:\",\n      pathPoints[0].pos,\n      pathPoints[1].pos,\n      pathPoints[2].pos,\n      pathPoints[3].pos\n    );\n    path.add(curve);\n  }\n\n  return path;\n}\n\nexport function getHomePaths(): Record<string, THREE.CurvePath<THREE.Vector3>> {\n  const paths: Record<string, THREE.CurvePath<THREE.Vector3>> = {};\n\n  Object.entries(homePaths).forEach(([key, pathPoints]) => {\n    paths[key] = createMazePath(pathPoints);\n  });\n\n  return paths;\n}\n\nexport function getHomeScrollPaths(\n  pausedPositions: Record<string, THREE.Vector3>\n): Record<string, THREE.CurvePath<THREE.Vector3>> {\n  const scrollPathPoints = createHomeScrollPathPoints(pausedPositions);\n  const cameraPathPoints = getCameraHomeScrollPathPoints();\n\n  const paths: Record<string, THREE.CurvePath<THREE.Vector3>> = {\n    camera: createCameraHomeScrollPath(cameraPathPoints),\n  };\n\n  Object.entries(scrollPathPoints).forEach(([key, pathPoints]) => {\n    paths[key] = createHomeScrollPath(pathPoints);\n  });\n\n  return paths;\n}\n\nexport function getPOVPaths(): Record<string, THREE.CurvePath<THREE.Vector3>> {\n  const paths: Record<string, THREE.CurvePath<THREE.Vector3>> = {};\n\n  Object.entries(povPaths).forEach(([key, pathPoints]) => {\n    if (key === \"camera\") {\n      paths[key] = createCameraPath(pathPoints as CameraPathPoint[]);\n    } else {\n      paths[key] = createMazePath(pathPoints as MazePathPoint[]);\n    }\n  });\n\n  return paths;\n}\n","import * as THREE from \"three\";\n\nexport function calculateObjectOrientation(\n  object: THREE.Object3D,\n  tangent: THREE.Vector3,\n  objectType: \"pacman\" | \"ghost\" | \"camera\" = \"ghost\"\n): void {\n  if (!tangent || tangent.length() === 0) return;\n\n  const targetRotation = Math.atan2(tangent.x, tangent.z);\n\n  if (objectType === \"pacman\") {\n    object.rotation.set(Math.PI / 2, Math.PI, targetRotation + Math.PI / 2);\n  } else if (objectType === \"ghost\") {\n    object.rotation.set(0, targetRotation, 0);\n  } else if (objectType === \"camera\") {\n    const lookAtPoint = object.position.clone().add(tangent);\n    object.lookAt(lookAtPoint);\n  }\n}\n\nexport function slerpToLayDown(\n  object: THREE.Object3D,\n  startQuat: THREE.Quaternion,\n  progress: number\n) {\n  const layDownQuat1 = new THREE.Quaternion().setFromEuler(\n    new THREE.Euler(Math.PI / 2, 0, 0)\n  );\n  const layDownQuat2 = new THREE.Quaternion().setFromEuler(\n    new THREE.Euler(-Math.PI / 2, 0, 0)\n  );\n\n  const d1 = startQuat.angleTo(layDownQuat1);\n  const d2 = startQuat.angleTo(layDownQuat2);\n  const targetQuat = d1 < d2 ? layDownQuat1 : layDownQuat2;\n\n  object.quaternion.copy(startQuat.clone().slerp(targetQuat, progress));\n}\n","import * as THREE from \"three\";\nimport { getHomeScrollPaths } from \"../paths/paths\";\nimport { pacman, ghosts } from \"../core/objects\";\nimport gsap from \"gsap\";\nimport { slerpToLayDown } from \"./util\";\nimport { HomeLoopHandler } from \"./HomeLoop\";\nimport { getCameraHomeScrollPathPoints } from \"../paths/pathpoints\";\nimport { camera } from \"../core/camera\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\n\nlet homeScrollTimeline: gsap.core.Timeline | null = null;\nlet hasAnimatedFirstScroll = false;\n\nconst characterSpeeds: Record<string, number> = {\n  pacman: 0.9,\n  ghost1: 1,\n  ghost2: 1.1,\n  ghost3: 1.2,\n  ghost4: 1.3,\n  ghost5: 1.4,\n};\n\nexport function initHomeScrollAnimation(\n  pausedPositions: Record<string, THREE.Vector3>,\n  pausedRotations: Record<string, THREE.Quaternion>\n) {\n  if (homeScrollTimeline) {\n    homeScrollTimeline.kill();\n    homeScrollTimeline = null;\n  }\n\n  const scrollPaths = getHomeScrollPaths(pausedPositions);\n  const cameraPathPoints = getCameraHomeScrollPathPoints();\n\n  homeScrollTimeline = gsap\n    .timeline({\n      scrollTrigger: {\n        id: \"homeScroll\",\n        trigger: \".sc--home\",\n        start: \"top top\",\n        end: \"bottom top\",\n        scrub: 0.5,\n        onScrubComplete: () => {\n          HomeLoopHandler();\n        },\n      },\n    })\n    .to(\n      { progress: 0 },\n      {\n        progress: 1,\n        immediateRender: false,\n        onUpdate: function () {\n          const progress = this.targets()[0].progress;\n          updateScrollAnimation(\n            progress,\n            scrollPaths,\n            pausedRotations,\n            cameraPathPoints\n          );\n        },\n      }\n    );\n\n  // Sync timeline progress to current scroll position, with ease-in on first scroll\n  const trigger = ScrollTrigger.getById(\"homeScroll\");\n  if (trigger && homeScrollTimeline) {\n    if (!hasAnimatedFirstScroll) {\n      hasAnimatedFirstScroll = true;\n      gsap.to(homeScrollTimeline, {\n        progress: trigger.progress,\n        duration: 0.5, // Adjust duration as needed\n        ease: \"power2.out\",\n      });\n    } else {\n      homeScrollTimeline.progress(trigger.progress);\n    }\n  }\n}\n\nfunction updateScrollAnimation(\n  progress: number,\n  paths: Record<string, THREE.CurvePath<THREE.Vector3>>,\n  pausedRotations: Record<string, THREE.Quaternion>,\n  cameraPathPoints: any[]\n) {\n  if (paths.camera) {\n    const cameraPoint = paths.camera.getPointAt(progress);\n    camera.position.copy(cameraPoint);\n\n    const lookAtCurve = new THREE.CubicBezierCurve3(\n      cameraPathPoints[0].lookAt,\n      cameraPathPoints[1].lookAt,\n      cameraPathPoints[2].lookAt,\n      cameraPathPoints[3].lookAt\n    );\n    const lookAtPoint = lookAtCurve.getPoint(progress);\n    camera.lookAt(lookAtPoint);\n    camera.updateProjectionMatrix();\n    console.log(\"Camera lookAt:\", lookAtPoint.clone());\n  }\n\n  const fadeStartProgress = 0.85;\n  const fadeEndProgress = 0.95;\n  const opacity =\n    progress < fadeStartProgress\n      ? 1\n      : progress > fadeEndProgress\n      ? 0\n      : 1 -\n        (progress - fadeStartProgress) / (fadeEndProgress - fadeStartProgress);\n\n  // Pacman (slowest)\n  if (paths.pacman && pacman) {\n    const pacmanSpeed = characterSpeeds[\"pacman\"] ?? 1.0;\n    const rawPacmanProgress = Math.min(progress * pacmanSpeed, 1);\n    const easedPacmanProgress = Math.pow(rawPacmanProgress, 1.25);\n    const pacmanPoint = paths.pacman.getPointAt(easedPacmanProgress);\n    if (pacmanPoint) {\n      pacman.position.copy(pacmanPoint);\n      slerpToLayDown(pacman, pausedRotations[\"pacman\"], easedPacmanProgress);\n      // Animate pacman opacity\n      pacman.traverse((child) => {\n        if ((child as any).isMesh && (child as any).material) {\n          (child as any).material.opacity = opacity;\n        }\n      });\n    }\n  }\n\n  // Ghosts (each with their own speed)\n  Object.entries(ghosts).forEach(([key, ghost]) => {\n    const path = paths[key];\n    if (path) {\n      const ghostSpeed = characterSpeeds[key] ?? 1.0;\n      const rawGhostProgress = Math.min(progress * ghostSpeed, 1);\n      const easedGhostProgress = Math.pow(rawGhostProgress, 1.25);\n      const ghostPoint = path.getPointAt(easedGhostProgress);\n      if (ghostPoint) {\n        ghost.position.copy(ghostPoint);\n        slerpToLayDown(ghost, pausedRotations[key], easedGhostProgress);\n        // Animate ghost opacity\n        if ((ghost as any).material) {\n          (ghost as any).material.opacity = opacity;\n        }\n      }\n    }\n  });\n}\n","import { ghosts } from \"../core/objects\";\nimport { getHomePaths } from \"../paths/paths\";\nimport { onFrame, clock } from \"../core/scene\";\nimport * as THREE from \"three\";\nimport { calculateObjectOrientation } from \"./util\";\nimport { initHomeScrollAnimation } from \"./HomeScroll\";\n\nconst LOOP_DURATION = 50;\nlet isHomeLoopActive = true;\nlet animationTime = 0;\nlet pausedT = 0;\nlet pausedPositions: Record<string, THREE.Vector3> = {};\nlet pausedRotations: Record<string, THREE.Quaternion> = {};\nlet homeLoopFrameRegistered = false;\n\nfunction stopHomeLoop() {\n  if (!isHomeLoopActive) return;\n  isHomeLoopActive = false;\n  pausedT = (animationTime % LOOP_DURATION) / LOOP_DURATION;\n  pausedPositions = {};\n  pausedRotations = {};\n  Object.entries(ghosts).forEach(([key, ghost]) => {\n    pausedPositions[key] = ghost.position.clone();\n    pausedRotations[key] = ghost.quaternion.clone();\n  });\n  initHomeScrollAnimation(pausedPositions, pausedRotations);\n}\n\nfunction startHomeLoop() {\n  isHomeLoopActive = true;\n  animationTime = pausedT * LOOP_DURATION;\n\n  const homePaths = getHomePaths();\n  Object.entries(ghosts).forEach(([key, ghost]) => {\n    const path = homePaths[key];\n    if (path) {\n      const position = path.getPointAt(0);\n      if (position) ghost.position.copy(position);\n    }\n  });\n\n  if (!homeLoopFrameRegistered) {\n    onFrame(() => updateHomeLoop(clock.getDelta()));\n    homeLoopFrameRegistered = true;\n  }\n}\n\nfunction updateHomeLoop(delta: number) {\n  if (!isHomeLoopActive) return;\n  animationTime += delta;\n  const t = (animationTime % LOOP_DURATION) / LOOP_DURATION;\n  const homePaths = getHomePaths();\n  Object.entries(ghosts).forEach(([key, ghost]) => {\n    const path = homePaths[key];\n    if (path) {\n      const position = path.getPointAt(t);\n      const tangent = path.getTangentAt(t);\n      if (position) ghost.position.copy(position);\n      if (tangent && tangent.length() > 0) {\n        const objectType = key === \"pacman\" ? \"pacman\" : \"ghost\";\n        calculateObjectOrientation(ghost, tangent, objectType);\n      }\n    }\n  });\n}\n\nexport function HomeLoopHandler() {\n  if (window.scrollY === 0) {\n    startHomeLoop();\n  }\n}\nexport function setupHomeLoopScrollHandler() {\n  window.addEventListener(\"scroll\", () => {\n    if (window.scrollY !== 0) {\n      stopHomeLoop();\n    }\n  });\n}\n","import * as THREE from \"three\";\nimport gsap from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport { camera } from \"../core/camera\";\nimport { getPOVPaths } from \"../paths/paths\";\nimport { povTriggerPositions } from \"../paths/pathpoints\";\nimport { GhostContainer } from \"../types/types\";\n\ngsap.registerPlugin(ScrollTrigger);\n\ninterface POVAnimationState {\n  isInPOVSection: boolean;\n  animationStarted: boolean;\n  rotationStarted: boolean;\n  startedInitEndScreen: boolean;\n  endScreenPassed: boolean;\n  startEndProgress: number;\n  cachedStartYAngle: number | null;\n}\n\nclass POVAnimationHandler {\n  private paths: Record<string, THREE.CurvePath<THREE.Vector3>>;\n  private ghosts: GhostContainer;\n  private state: POVAnimationState;\n  private timeline: gsap.core.Timeline | null = null;\n\n  // Animation constants\n  private readonly TRIGGER_DISTANCE = 0.1; // Increased for testing\n  private readonly START_END_SCREEN_SECTION_PROGRESS = 0.8;\n  private readonly ROTATION_STARTING_POINT = 0.973;\n\n  // Key positions\n  private readonly startRotationPoint = new THREE.Vector3(0.55675, 0.55, 1.306);\n  private readonly endRotationPoint = new THREE.Vector3(-0.14675, 1, 1.8085);\n  private readonly targetLookAt = new THREE.Vector3(0.55675, 0.1, 1.306);\n  private readonly finalLookAt = new THREE.Vector3(-0.14675, 0, 1.8085);\n  private readonly povStartPoint1 = new THREE.Vector3(0.55675, -5, 0.45175);\n  private readonly povStartPoint2 = new THREE.Vector3(0.55675, -2.5, 0.45175);\n\n  constructor(ghosts: GhostContainer) {\n    this.ghosts = ghosts;\n    this.paths = getPOVPaths();\n\n    // Debug: Log available paths and trigger positions\n    console.log(\"POV Paths available:\", Object.keys(this.paths));\n    console.log(\"POV Trigger positions:\", povTriggerPositions);\n\n    this.state = {\n      isInPOVSection: false,\n      animationStarted: false,\n      rotationStarted: false,\n      startedInitEndScreen: false,\n      endScreenPassed: false,\n      startEndProgress: 0,\n      cachedStartYAngle: null,\n    };\n\n    this.setupPOVTimeline();\n  }\n\n  private setupPOVTimeline(): void {\n    this.timeline = gsap\n      .timeline({\n        scrollTrigger: {\n          trigger: \".sc--pov\",\n          start: \"top bottom\",\n          end: \"bottom top\",\n          endTrigger: \".sc--final\",\n          scrub: 5, // Increased for testing\n          toggleActions: \"play none none reverse\",\n          onLeave: () => this.handleLeavePOV(),\n          onLeaveBack: () => this.handleLeavePOV(),\n        },\n      })\n      .to(\n        { progress: 0 },\n        {\n          progress: 1,\n          immediateRender: false,\n          onStart: () => this.handleAnimationStart(),\n          onUpdate: () => this.handleAnimationUpdate(),\n          onReverseComplete: () => this.resetState(true),\n          onComplete: () => this.resetState(),\n        }\n      );\n  }\n\n  private handleAnimationStart(): void {\n    // Hide pacman during POV\n    if (this.ghosts.pacman) {\n      this.ghosts.pacman.visible = false;\n    }\n\n    // Hide all ghosts initially\n    Object.entries(this.ghosts).forEach(([key, ghost]) => {\n      if (key !== \"pacman\") {\n        ghost.visible = false;\n      }\n    });\n\n    this.state.animationStarted = true;\n  }\n\n  private handleAnimationUpdate(): void {\n    if (!this.timeline) return;\n\n    const progress = this.timeline.progress();\n    this.updateCamera(progress);\n    this.updateGhosts(progress);\n  }\n\n  private updateCamera(progress: number): void {\n    if (!this.paths.camera) return;\n\n    const position = this.paths.camera.getPointAt(progress);\n    camera.position.copy(position);\n    camera.fov = 80; // wideFOV\n\n    const tangent = this.paths.camera.getTangentAt(progress).normalize();\n    const defaultLookAt = position.clone().add(tangent);\n\n    // Handle initial transition\n    if (progress === 0) {\n      camera.lookAt(new THREE.Vector3(camera.position.x, 2, camera.position.z));\n    } else if (progress < 0.1) {\n      const transitionProgress = progress / 0.1;\n      const upLookAt = new THREE.Vector3(\n        camera.position.x,\n        1,\n        camera.position.z\n      );\n      const frontLookAt = new THREE.Vector3(\n        camera.position.x,\n        0.5,\n        camera.position.z + 1\n      );\n\n      const interpolatedLookAt = new THREE.Vector3();\n      interpolatedLookAt.lerpVectors(\n        upLookAt,\n        frontLookAt,\n        this.smoothStep(transitionProgress)\n      );\n\n      camera.lookAt(interpolatedLookAt);\n    }\n\n    // Find key progress points\n    const point1Progress = this.findClosestProgressOnPath(\n      this.paths.camera,\n      this.povStartPoint1\n    );\n    const point2Progress = this.findClosestProgressOnPath(\n      this.paths.camera,\n      this.povStartPoint2\n    );\n    const startRotationProgress = this.findClosestProgressOnPath(\n      this.paths.camera,\n      this.startRotationPoint\n    );\n    const endRotationProgress = this.findClosestProgressOnPath(\n      this.paths.camera,\n      this.endRotationPoint\n    );\n\n    // Handle different phases\n    if (progress <= point2Progress) {\n      this.handleHomeTransition(\n        progress,\n        position,\n        defaultLookAt,\n        point1Progress,\n        point2Progress\n      );\n    } else if (\n      progress >= startRotationProgress &&\n      progress <= endRotationProgress\n    ) {\n      this.handleRotationPhase(\n        progress,\n        position,\n        defaultLookAt,\n        startRotationProgress,\n        endRotationProgress\n      );\n    } else if (\n      progress > this.START_END_SCREEN_SECTION_PROGRESS &&\n      this.state.endScreenPassed\n    ) {\n      this.handleEndSequence(progress);\n    } else {\n      this.handleDefaultOrientation(\n        progress,\n        startRotationProgress,\n        endRotationProgress,\n        defaultLookAt\n      );\n    }\n\n    camera.updateProjectionMatrix();\n  }\n\n  private handleHomeTransition(\n    progress: number,\n    position: THREE.Vector3,\n    defaultLookAt: THREE.Vector3,\n    point1Progress: number,\n    point2Progress: number\n  ): void {\n    const transitionProgress =\n      (progress - point1Progress) / (point2Progress - point1Progress);\n\n    if (transitionProgress >= 0 && transitionProgress <= 1) {\n      const targetQuaternion = new THREE.Quaternion().setFromRotationMatrix(\n        new THREE.Matrix4().lookAt(position, defaultLookAt, camera.up)\n      );\n\n      const easedProgress = this.smoothStep(transitionProgress);\n      const newQuaternion = new THREE.Quaternion()\n        .copy(camera.quaternion)\n        .slerp(targetQuaternion, easedProgress);\n\n      camera.quaternion.copy(newQuaternion);\n    } else if (transitionProgress > 1) {\n      camera.lookAt(defaultLookAt);\n    }\n  }\n\n  private handleRotationPhase(\n    progress: number,\n    position: THREE.Vector3,\n    defaultLookAt: THREE.Vector3,\n    startRotationProgress: number,\n    endRotationProgress: number\n  ): void {\n    const sectionProgress =\n      (progress - startRotationProgress) /\n      (endRotationProgress - startRotationProgress);\n\n    if (this.state.cachedStartYAngle === null) {\n      const startDir = new THREE.Vector2(\n        defaultLookAt.x - position.x,\n        defaultLookAt.z - position.z\n      ).normalize();\n      this.state.cachedStartYAngle = Math.atan2(startDir.y, startDir.x);\n      this.state.cachedStartYAngle =\n        this.state.cachedStartYAngle > 3\n          ? this.state.cachedStartYAngle / 2\n          : this.state.cachedStartYAngle;\n    }\n\n    const targetDir = new THREE.Vector2(\n      this.targetLookAt.x - position.x,\n      this.targetLookAt.z - position.z\n    ).normalize();\n    let targetYAngle = Math.atan2(targetDir.y, targetDir.x);\n\n    let angleDiff = targetYAngle - this.state.cachedStartYAngle;\n    if (angleDiff > Math.PI) angleDiff -= Math.PI * 2;\n    else if (angleDiff < -Math.PI) angleDiff += Math.PI * 2;\n\n    angleDiff = -angleDiff * 1.75;\n    targetYAngle = this.state.cachedStartYAngle + angleDiff;\n\n    const easedProgress = this.smoothStep(sectionProgress);\n    const newYAngle =\n      this.state.cachedStartYAngle * (1 - easedProgress) +\n      targetYAngle * easedProgress;\n\n    const radius = 1.0;\n    const newLookAt = new THREE.Vector3(\n      position.x + Math.cos(newYAngle) * radius,\n      position.y,\n      position.z + Math.sin(newYAngle) * radius\n    );\n\n    camera.lookAt(newLookAt);\n\n    if (progress >= endRotationProgress) {\n      this.state.cachedStartYAngle = null;\n    }\n    this.state.rotationStarted = true;\n\n    if (\n      progress >= this.START_END_SCREEN_SECTION_PROGRESS &&\n      !this.state.startedInitEndScreen\n    ) {\n      this.state.startedInitEndScreen = true;\n      this.initEndScreen();\n    }\n  }\n\n  private handleEndSequence(progress: number): void {\n    if (this.state.startEndProgress === 0 && progress !== 1) {\n      const truncatedProgress = Math.floor(progress * 100) / 100;\n      this.state.startEndProgress =\n        truncatedProgress === 0.99 ? this.ROTATION_STARTING_POINT : progress;\n    }\n\n    const animationProgress =\n      (progress - this.state.startEndProgress) /\n      (1 - this.state.startEndProgress);\n\n    if (animationProgress > 0) {\n      const currentLookAt = this.getCameraLookAtPoint();\n      const interpolatedLookAt = new THREE.Vector3().lerpVectors(\n        currentLookAt,\n        this.finalLookAt,\n        this.smoothStep(animationProgress)\n      );\n\n      const startFOV = 80;\n      const targetFOV = 20;\n      camera.fov =\n        startFOV + (targetFOV - startFOV) * this.smoothStep(animationProgress);\n\n      camera.lookAt(interpolatedLookAt);\n    }\n  }\n\n  private handleDefaultOrientation(\n    progress: number,\n    startRotationProgress: number,\n    endRotationProgress: number,\n    defaultLookAt: THREE.Vector3\n  ): void {\n    if (\n      (progress < startRotationProgress || progress > endRotationProgress) &&\n      !this.state.startedInitEndScreen\n    ) {\n      this.state.cachedStartYAngle = null;\n      this.state.rotationStarted = false;\n      this.state.endScreenPassed = false;\n      this.state.startedInitEndScreen = false;\n\n      const finalSection = document.querySelector(\n        \".sc--final.sc\"\n      ) as HTMLElement;\n      if (finalSection) {\n        finalSection.style.opacity = \"0\";\n      }\n    }\n\n    if (!this.state.rotationStarted && !this.state.startedInitEndScreen) {\n      camera.lookAt(defaultLookAt);\n    }\n\n    if (!(this.state.endScreenPassed && progress > 0.8)) {\n      this.state.startEndProgress = 0;\n    }\n  }\n\n  private updateGhosts(cameraProgress: number): void {\n    const pathMapping = this.getPathMapping();\n\n    // Debug: Log ghost update call\n    if (cameraProgress > 0.1 && cameraProgress < 0.2) {\n      console.log(\n        `updateGhosts called at progress: ${cameraProgress.toFixed(3)}`\n      );\n    }\n\n    Object.entries(this.ghosts).forEach(([key, ghost]) => {\n      if (key === \"pacman\") return;\n\n      const pathKey = pathMapping[key];\n      if (\n        this.paths[pathKey] &&\n        povTriggerPositions[key as keyof typeof povTriggerPositions]\n      ) {\n        this.updateGhost(key, ghost, pathKey, cameraProgress);\n      } else {\n        if (key === \"ghost1\") {\n          console.warn(\n            `Ghost1 path or trigger missing - pathKey: ${pathKey}, hasPath: ${!!this\n              .paths[pathKey]}, hasTrigger: ${!!povTriggerPositions[\n              key as keyof typeof povTriggerPositions\n            ]}`\n          );\n        }\n      }\n    });\n  }\n\n  private updateGhost(\n    key: string,\n    ghost: THREE.Object3D,\n    pathKey: string,\n    cameraProgress: number\n  ): void {\n    const triggerData =\n      povTriggerPositions[key as keyof typeof povTriggerPositions];\n    if (!triggerData) {\n      console.warn(`No trigger data for ${key}`);\n      return;\n    }\n\n    const path = this.paths[pathKey];\n    if (!path) {\n      console.warn(`No path found for ${key} (${pathKey})`);\n      return;\n    }\n\n    // Find closest progress on camera path to trigger position\n    const triggerProgress = this.findClosestProgressOnPath(\n      this.paths.camera!,\n      triggerData.triggerPos\n    );\n\n    // Calculate distance to trigger\n    const distanceToTrigger = Math.abs(cameraProgress - triggerProgress);\n\n    // Debug logging\n    if (key === \"ghost1\") {\n      console.log(\n        `Ghost1 - Camera: ${cameraProgress.toFixed(\n          3\n        )}, Trigger: ${triggerProgress.toFixed(\n          3\n        )}, Distance: ${distanceToTrigger.toFixed(3)}`\n      );\n    }\n\n    if (distanceToTrigger < this.TRIGGER_DISTANCE) {\n      // Show ghost and animate it\n      ghost.visible = true;\n\n      // Calculate ghost progress based on camera progress\n      const ghostProgress = Math.max(0, (cameraProgress - triggerProgress) * 2);\n      const clampedProgress = Math.min(1, ghostProgress);\n\n      if (clampedProgress <= 1) {\n        const position = path.getPointAt(clampedProgress);\n        ghost.position.copy(position);\n\n        const tangent = path.getTangentAt(clampedProgress).normalize();\n        ghost.lookAt(position.clone().add(tangent));\n      }\n\n      if (key === \"ghost1\") {\n        console.log(\n          `Ghost1 visible at progress: ${clampedProgress.toFixed(3)}`\n        );\n      }\n    } else {\n      ghost.visible = false;\n    }\n  }\n\n  private findClosestProgressOnPath(\n    path: THREE.CurvePath<THREE.Vector3>,\n    targetPoint: THREE.Vector3,\n    samples = 2000\n  ): number {\n    let closestProgress = 0;\n    let closestDistance = Infinity;\n\n    for (let i = 0; i < samples; i++) {\n      try {\n        const t = i / (samples - 1);\n        const pointOnPath = path.getPointAt(t);\n        if (!pointOnPath) continue;\n\n        const distance = pointOnPath.distanceTo(targetPoint);\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestProgress = t;\n        }\n      } catch (error) {\n        continue;\n      }\n    }\n\n    return closestProgress;\n  }\n\n  private getCameraLookAtPoint(): THREE.Vector3 {\n    const direction = new THREE.Vector3(0, 0, -1);\n    direction.applyQuaternion(camera.quaternion);\n    const lookAtPoint = new THREE.Vector3();\n    lookAtPoint.copy(camera.position).add(direction.multiplyScalar(10));\n    return lookAtPoint;\n  }\n\n  private smoothStep(x: number): number {\n    return x * x * (3 - 2 * x);\n  }\n\n  private getPathMapping(): Record<string, string> {\n    return {\n      pacman: \"camera\", // Pacman follows camera path in POV\n      ghost1: \"ghost1\",\n      ghost2: \"ghost2\",\n      ghost3: \"ghost3\",\n      ghost4: \"ghost4\",\n      ghost5: \"ghost5\",\n    };\n  }\n\n  private initEndScreen(): void {\n    this.state.endScreenPassed = true;\n    const finalSection = document.querySelector(\".sc--final.sc\") as HTMLElement;\n    if (finalSection) {\n      gsap.to(finalSection, {\n        opacity: 1,\n        duration: 1,\n        ease: \"power2.out\",\n      });\n    }\n  }\n\n  private handleLeavePOV(): void {\n    this.state.isInPOVSection = false;\n\n    // Reset camera FOV\n    camera.fov = 50; // originalFOV\n    camera.updateProjectionMatrix();\n\n    // Show pacman again\n    if (this.ghosts.pacman) {\n      this.ghosts.pacman.visible = true;\n    }\n  }\n\n  private resetState(isReverse = false): void {\n    this.state.animationStarted = false;\n    this.state.rotationStarted = false;\n    this.state.cachedStartYAngle = null;\n    this.state.startEndProgress = 0;\n    this.state.startedInitEndScreen = false;\n    this.state.endScreenPassed = false;\n\n    // Reset ghosts visibility\n    Object.entries(this.ghosts).forEach(([key, ghost]) => {\n      if (key !== \"pacman\") {\n        ghost.visible = false;\n      }\n    });\n\n    if (this.ghosts.pacman) {\n      this.ghosts.pacman.visible = true;\n    }\n\n    // Reset camera FOV\n    camera.fov = 50;\n    camera.updateProjectionMatrix();\n  }\n\n  public destroy(): void {\n    if (this.timeline) {\n      this.timeline.kill();\n      this.timeline = null;\n    }\n  }\n}\n\nexport { POVAnimationHandler };\n","import {\n  startRenderLoop,\n  onFrame,\n  initRenderer,\n  setupLighting,\n  scene,\n} from \"./core/scene\";\nimport {\n  HomeLoopHandler,\n  setupHomeLoopScrollHandler,\n} from \"./animation/HomeLoop\";\nimport { POVAnimationHandler } from \"./animation/POVAnimation\";\nimport { loadModel, ghosts } from \"./core/objects\";\nimport { setupCamera } from \"./core/camera\";\n\nasync function main() {\n  initRenderer();\n  setupLighting();\n  setupCamera();\n  await loadModel(scene);\n\n  // Initialize animation handlers\n  HomeLoopHandler();\n  const povHandler = new POVAnimationHandler(ghosts);\n\n  startRenderLoop();\n  setupHomeLoopScrollHandler();\n}\n\nmain();\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","THREE","isMobile","window","innerWidth","DOM_ELEMENTS","mazeContainer","document","querySelector","canvas","homeSection","introSection","povSection","finalSection","finalContainer","parentElements","querySelectorAll","gsap","ScrollTrigger","objectHomeScrollEndPathPoint","cameraHomeScrollEndPathPoint","cameraHomeScrollEndLookAt","cameraPathPointsConfig","startMobile","startDesktop","secondMobile","secondDesktop","mobileLookAt","desktopLookAt","startPosition","secondPosition","lookAtPosition","pacmanHomePathPoints","pos","type","curveType","ghost1HomePathPoints","ghost2HomePathPoints","ghost3HomePathPoints","ghost4HomePathPoints","ghost5HomePathPoints","cameraHomeScrollPathPoints","lookAt","cameraPOVPathPoints","ghost1POVPathPoints","ghost2POVPathPoints","ghost3POVPathPoints","ghost4POVPathPoints","ghost5POVPathPoints","povTriggerPositions","ghost1","triggerPos","ghostTextPos","camTextPos","endPosition","ghost2","ghost3","ghost4","ghost5","getStartPosition","getLookAtPosition","homePaths","pacman","povPaths","camera","getCameraHomeScrollPathPoints","innerHeight","setPixelRatio","pixelRatio","Math","min","devicePixelRatio","renderer","setSize","clientWidth","clientHeight","scene","antialias","alpha","powerPreference","precision","clock","frameCallbacks","mazeTexture","load","mazeMaterial","matcap","topMaterial","color","metalness","roughness","envMapIntensity","ghostMaterial","opacity","transparent","depthWrite","depthTest","blending","side","transmission","floorMaterial","pacmanMaterials","blue","white","default","materialMap","CAM_Pacman_Backframe","CAM_Pacman_Logo_1","CAM_Pacman_Logo_2","loader","pacmanMixer","ghosts","ghostContainers","Ghost_EUR","Ghost_CHF","Ghost_YEN","Ghost_USD","Ghost_GBP","createMazePath","pathPoints","path","typedPathPoints","filter","point","i","length","current","next","add","hasPrevCurve","hasNextCurve","midPoint","createDoubleCurveMidPoint","createSingleCurveMidPoint","x","y","z","originalMidPoint","straightMidPoint","clone","lerp","createCameraHomeScrollPath","console","log","curve","getHomePaths","paths","entries","forEach","slerpToLayDown","object","startQuat","progress","layDownQuat1","setFromEuler","PI","layDownQuat2","targetQuat","angleTo","quaternion","copy","slerp","homeScrollTimeline","hasAnimatedFirstScroll","characterSpeeds","initHomeScrollAnimation","pausedPositions","pausedRotations","kill","scrollPaths","scrollPathPoints","pausedPos","arcPoint","createHomeScrollPathPoints","createHomeScrollPath","getHomeScrollPaths","cameraPathPoints","scrollTrigger","id","trigger","start","end","scrub","onScrubComplete","HomeLoopHandler","to","immediateRender","onUpdate","cameraPoint","getPointAt","position","lookAtPoint","getPoint","updateProjectionMatrix","fadeStartProgress","pacmanSpeed","rawPacmanProgress","easedPacmanProgress","pow","pacmanPoint","traverse","child","isMesh","material","ghost","ghostSpeed","rawGhostProgress","easedGhostProgress","ghostPoint","updateScrollAnimation","this","targets","getById","duration","ease","LOOP_DURATION","isHomeLoopActive","animationTime","pausedT","homeLoopFrameRegistered","scrollY","callback","delta","t","tangent","getTangentAt","objectType","targetRotation","atan2","rotation","set","calculateObjectOrientation","updateHomeLoop","getDelta","push","startHomeLoop","POVAnimationHandler","constructor","timeline","TRIGGER_DISTANCE","START_END_SCREEN_SECTION_PROGRESS","ROTATION_STARTING_POINT","startRotationPoint","endRotationPoint","targetLookAt","finalLookAt","povStartPoint1","povStartPoint2","createCameraPath","getPOVPaths","keys","state","isInPOVSection","animationStarted","rotationStarted","startedInitEndScreen","endScreenPassed","startEndProgress","cachedStartYAngle","setupPOVTimeline","endTrigger","toggleActions","onLeave","handleLeavePOV","onLeaveBack","onStart","handleAnimationStart","handleAnimationUpdate","onReverseComplete","resetState","onComplete","visible","updateCamera","updateGhosts","fov","normalize","defaultLookAt","transitionProgress","upLookAt","frontLookAt","interpolatedLookAt","lerpVectors","smoothStep","point1Progress","findClosestProgressOnPath","point2Progress","startRotationProgress","endRotationProgress","handleHomeTransition","handleRotationPhase","handleEndSequence","handleDefaultOrientation","targetQuaternion","setFromRotationMatrix","up","easedProgress","newQuaternion","sectionProgress","startDir","targetDir","targetYAngle","angleDiff","newYAngle","newLookAt","cos","sin","initEndScreen","truncatedProgress","floor","animationProgress","currentLookAt","getCameraLookAtPoint","startFOV","targetFOV","style","cameraProgress","pathMapping","getPathMapping","toFixed","pathKey","updateGhost","warn","triggerData","triggerProgress","distanceToTrigger","abs","ghostProgress","max","clampedProgress","targetPoint","samples","closestProgress","closestDistance","Infinity","pointOnPath","distance","distanceTo","error","direction","applyQuaternion","multiplyScalar","isReverse","destroy","async","shadowMap","enabled","appendChild","domElement","body","readyState","addEventListener","render","ambientLight","directionalLight","shadow","mapSize","width","height","left","right","top","bottom","near","far","bias","radius","castShadow","setupLighting","setupCamera","values","Promise","resolve","reject","gltf","model","name","children","subChild","item","scale","pacmanActions","animations","clip","action","clipAction","setEffectiveWeight","play","ghostContainer","ghostGroup","startsWith","includes","clonedChild","receiveShadow","node","loadModel","requestAnimationFrame","startRenderLoop","main"],"sourceRoot":""}