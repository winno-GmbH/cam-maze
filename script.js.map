{"version":3,"file":"script.js","mappings":"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","sources":["webpack://cam-3d-animation/webpack/bootstrap","webpack://cam-3d-animation/webpack/runtime/compat get default export","webpack://cam-3d-animation/webpack/runtime/define property getters","webpack://cam-3d-animation/webpack/runtime/hasOwnProperty shorthand","webpack://cam-3d-animation/external var \"THREE\"","webpack://cam-3d-animation/./src/config/config.ts","webpack://cam-3d-animation/./src/config/selectors.ts","webpack://cam-3d-animation/external var \"gsap\"","webpack://cam-3d-animation/external var \"ScrollTrigger\"","webpack://cam-3d-animation/./src/core/camera.ts","webpack://cam-3d-animation/./src/core/materials.ts","webpack://cam-3d-animation/./src/core/objects.ts","webpack://cam-3d-animation/./src/core/scene.ts","webpack://cam-3d-animation/./src/paths/pathpoints.ts","webpack://cam-3d-animation/./src/paths/paths.ts","webpack://cam-3d-animation/./src/animation/HomeLoop.ts","webpack://cam-3d-animation/./src/animation/util.ts","webpack://cam-3d-animation/./src/animation/HomeScroll.ts","webpack://cam-3d-animation/./src/main.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = THREE;","export const isMobile = window.innerWidth < 768;\n\nexport const CAMERA_CONFIG = {\n  originalFOV: 50,\n  wideFOV: 80,\n  near: 0.001,\n  far: 1000,\n};\n\nexport const ASSETS = {\n  mazeTexture: \"https://c-am.b-cdn.net/CAM/matcap24.png\",\n  mazeModel: \"https://c-am.b-cdn.net/CAM/c-am-assets-3.glb\",\n};\n","const SELECTORS = {\n  mazeContainer: \".el--home-maze.el\",\n\n  homeSection: \".sc--home.sc\",\n  introSection: \".sc--intro.sc\",\n  povSection: \".sc--pov.sc\",\n  finalSection: \".sc--final.sc\",\n  finalContainer: \".cr--final.cr\",\n\n  scrollComponent: \".cmp--scroll.cmp\",\n  parentElements: \".cmp--pov.cmp\",\n\n  pov: \".pov\",\n  cam: \".cam\",\n};\n\nexport const DOM_ELEMENTS = {\n  mazeContainer: document.querySelector(SELECTORS.mazeContainer) as HTMLElement,\n  canvas: document.querySelector(\"canvas\") as HTMLCanvasElement,\n\n  homeSection: document.querySelector(SELECTORS.homeSection) as HTMLElement,\n  introSection: document.querySelector(SELECTORS.introSection) as HTMLElement,\n  povSection: document.querySelector(SELECTORS.povSection) as HTMLElement,\n  finalSection: document.querySelector(SELECTORS.finalSection) as HTMLElement,\n  finalContainer: document.querySelector(\n    SELECTORS.finalContainer\n  ) as HTMLElement,\n\n  parentElements: document.querySelectorAll(\n    SELECTORS.parentElements\n  ) as NodeListOf<Element>,\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = gsap;","const __WEBPACK_NAMESPACE_OBJECT__ = ScrollTrigger;","import * as THREE from \"three\";\nimport gsap from \"gsap\";\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\nimport { getLookAtPosition, getStartPosition } from \"../paths/pathpoints\";\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport const camera = new THREE.PerspectiveCamera(\n  50,\n  window.innerWidth / window.innerHeight,\n  0.1,\n  1000\n);\n\nexport function setupCamera(): void {\n  // Position camera to look at the maze center\n  camera.position.set(0.5, 3, 2); // Above and behind the maze\n  camera.lookAt(0.5, 0.5, 0.5); // Look at maze center\n\n  // Debug: Log camera setup\n  console.log(\"Camera position:\", camera.position);\n  console.log(\"Camera lookAt: (0.5, 0.5, 0.5)\");\n  console.log(\"Camera FOV:\", camera.fov);\n}\n\nexport const startQuaternion = camera.quaternion.clone();\nexport const endQuaternion = new THREE.Quaternion().setFromEuler(\n  new THREE.Euler(-1.5708, 0, 0)\n);\n\nexport function getCameraLookAtPoint(): THREE.Vector3 {\n  const direction = new THREE.Vector3(0, 0, -1);\n  direction.applyQuaternion(camera.quaternion);\n  const lookAtPoint = new THREE.Vector3();\n  lookAtPoint.copy(camera.position).add(direction.multiplyScalar(10));\n  return lookAtPoint;\n}\n\nexport function setupCameraResize(): void {\n  const updateCamera = () => {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n  };\n\n  window.addEventListener(\"resize\", updateCamera);\n}\n\nexport function setupCameraAnimation(): void {\n  const startQuat = camera.quaternion.clone();\n  const endPos = new THREE.Vector3(-1.5, 3, 2);\n  const endTangent = new THREE.Vector3(-1.5, 3, 2);\n  let endQuat: THREE.Quaternion | null = null;\n\n  if (endPos && endTangent) {\n    const lookAt = endPos.clone().add(endTangent);\n    camera.position.copy(endPos);\n    camera.lookAt(lookAt);\n    endQuat = camera.quaternion.clone();\n  }\n\n  camera.position.copy(new THREE.Vector3(-2, 2.5, 2));\n  camera.quaternion.copy(startQuat);\n\n  gsap\n    .timeline({\n      scrollTrigger: {\n        trigger: \".sc--home\",\n        start: \"top top\",\n        end: \"bottom top\",\n        scrub: 5,\n      },\n    })\n    .to(\n      { t: 0 },\n      {\n        t: 1,\n        immediateRender: false,\n        onUpdate: function () {\n          const t = this.targets()[0].t;\n\n          const position = new THREE.Vector3(-2, 2.5, 2);\n          camera.position.copy(position);\n          if (startQuat && endQuat) {\n            const currentQuaternion = new THREE.Quaternion();\n            currentQuaternion.slerpQuaternions(startQuat, endQuat, t);\n            camera.quaternion.copy(currentQuaternion);\n          }\n          camera.updateProjectionMatrix();\n        },\n      }\n    );\n}\n","import * as THREE from \"three\";\nimport { ASSETS } from \"../config/config\";\n\nconst textureLoader = new THREE.TextureLoader();\n\nexport const mazeTexture = textureLoader.load(ASSETS.mazeTexture);\n\nexport const mazeMaterial = new THREE.MeshMatcapMaterial({\n  matcap: mazeTexture,\n});\n\nexport const topMaterial = new THREE.MeshStandardMaterial({\n  color: 0xf2f9f9,\n  metalness: 0.4,\n  roughness: 0,\n  envMapIntensity: 10,\n});\n\nexport const ghostMaterial = new THREE.MeshPhysicalMaterial({\n  color: 0xffffff,\n  opacity: 1,\n  transparent: true,\n  depthWrite: false,\n  depthTest: true,\n  blending: THREE.NormalBlending,\n  side: THREE.DoubleSide,\n  roughness: 0.75,\n  metalness: 0.2,\n  transmission: 0.5,\n});\n\nexport const floorMaterial = new THREE.MeshStandardMaterial({\n  color: 0xffffff,\n  opacity: 0.8,\n  transparent: true,\n  roughness: 0.5,\n  metalness: 0.1,\n});\n\nconst pacmanMaterials = {\n  blue: new THREE.MeshBasicMaterial({\n    color: 0x1469d3,\n    transparent: true,\n    opacity: 1,\n  }),\n  white: new THREE.MeshBasicMaterial({\n    color: 0xffffff,\n    transparent: true,\n    opacity: 1,\n  }),\n  default: new THREE.MeshBasicMaterial({\n    color: 0x1469d3,\n    transparent: true,\n    opacity: 1,\n  }),\n};\n\nexport const materialMap = {\n  CAM_Pacman_Backframe: pacmanMaterials.blue,\n  \"CAM-Pacman_Bitcoin_1\": pacmanMaterials.white,\n  \"CAM-Pacman_Bitcoin_2\": pacmanMaterials.white,\n  \"CAM-Pacman_Bottom\": pacmanMaterials.blue,\n  \"CAM-Pacman_Top\": pacmanMaterials.blue,\n  \"CAM-Pacman_Eye\": pacmanMaterials.white,\n  CAM_Pacman_Logo_1: pacmanMaterials.white,\n  CAM_Pacman_Logo_2: pacmanMaterials.white,\n  \"CAM-Pacman_Shell_Boolean\": pacmanMaterials.blue,\n  \"CAM-Pacman_Shell\": pacmanMaterials.blue,\n  \"CAM-Pacman_Bottom_electronic\": pacmanMaterials.white,\n  \"CAM-Pacman_Top_electronic\": pacmanMaterials.white,\n  \"CAM-Pacman_Bottom_Text\": pacmanMaterials.white,\n  \"CAM-Pacman_Top_Text\": pacmanMaterials.white,\n  default: pacmanMaterials.blue,\n};\n\nexport const ghostCoverMaterials = Array(5).fill(ghostMaterial);\n","import * as THREE from \"three\";\nimport { ASSETS } from \"../config/config\";\nimport { GhostContainer } from \"../types/types\";\nimport { clock } from \"./scene\";\nimport {\n  mazeMaterial,\n  topMaterial,\n  ghostMaterial,\n  floorMaterial,\n  materialMap,\n} from \"./materials\";\n\nexport { clock };\n\nconst loader = new THREE.GLTFLoader();\n\nexport let pacmanMixer: THREE.AnimationMixer;\n\nexport const pacman = new THREE.Group();\n\nexport const ghosts: GhostContainer = {\n  pacman: pacman,\n  ghost1: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost2: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost3: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost4: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost5: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n};\n\nconst ghostContainers = {\n  Ghost_EUR: ghosts.ghost1,\n  Ghost_CHF: ghosts.ghost2,\n  Ghost_YEN: ghosts.ghost3,\n  Ghost_USD: ghosts.ghost4,\n  Ghost_GBP: ghosts.ghost5,\n};\n\nexport async function loadModel(scene: THREE.Scene): Promise<void> {\n  Object.values(ghosts).forEach((ghost) => scene.add(ghost));\n  scene.add(pacman);\n  return new Promise((resolve, reject) => {\n    loader.load(\n      ASSETS.mazeModel,\n      function (gltf) {\n        const model = gltf.scene;\n\n        model.traverse((child: THREE.Object3D) => {\n          if (child.name === \"CAM-Pacman\") {\n            const children: THREE.Object3D[] = [];\n            child.traverse((subChild: THREE.Object3D) => {\n              if (\n                (subChild as any).isMesh &&\n                subChild.name !== \"CAM-Pacman_Shell\" &&\n                subChild.name !== \"CAM-Pacman_Shell_Boolean\"\n              ) {\n                const material =\n                  materialMap[subChild.name as keyof typeof materialMap] ||\n                  materialMap.default;\n                (subChild as THREE.Mesh).material = material;\n                children.push(subChild);\n              } else if (\n                subChild.name === \"CAM-Pacman_Shell\" ||\n                subChild.name === \"CAM-Pacman_Shell_Boolean\"\n              ) {\n                subChild.visible = false;\n              }\n            });\n\n            children.forEach((item) => ghosts.pacman.add(item));\n            ghosts.pacman.scale.set(0.05, 0.05, 0.05);\n            ghosts.pacman.rotation.set(Math.PI / 2, Math.PI / 2, Math.PI / 4);\n\n            pacmanMixer = new THREE.AnimationMixer(ghosts.pacman);\n            const pacmanActions: { [key: string]: THREE.AnimationAction } = {};\n\n            gltf.animations.forEach((clip: THREE.AnimationClip) => {\n              const action = pacmanMixer.clipAction(clip);\n              pacmanActions[clip.name] = action;\n              action.setEffectiveWeight(1);\n              action.play();\n            });\n          } else if (\n            child.name &&\n            ghostContainers[child.name as keyof typeof ghostContainers]\n          ) {\n            const ghostContainer =\n              ghostContainers[child.name as keyof typeof ghostContainers];\n            const ghostGroup = new THREE.Group();\n\n            child.rotation.z = Math.PI;\n            child.rotation.x = Math.PI / 2;\n            child.scale.set(0.75, 0.75, 0.75);\n\n            const children: THREE.Object3D[] = [];\n            child.traverse((subChild: THREE.Object3D) => {\n              if ((subChild as any).isMesh) {\n                if (subChild.name && subChild.name.startsWith(\"Ghost_Mesh\")) {\n                  (subChild as THREE.Mesh).material = ghostMaterial;\n                } else if (\n                  subChild.name &&\n                  [\"EUR\", \"CHF\", \"YEN\", \"USD\", \"GBP\"].includes(subChild.name)\n                ) {\n                  subChild.visible = false;\n                }\n                children.push(subChild);\n              }\n            });\n\n            children.forEach((item) => {\n              if (\n                item.name &&\n                (item.name.includes(\"EUR\") ||\n                  item.name.startsWith(\"Ghost_Mesh\"))\n              ) {\n                item.rotation.z = Math.PI;\n                item.rotation.x = Math.PI / 2;\n              } else {\n                item.rotation.set(0, 0, 0);\n              }\n              ghostGroup.add(item);\n            });\n\n            if (ghostContainer) {\n              ghostContainer.add(ghostGroup);\n            } else {\n              console.warn(`ghostContainer for ${child.name} is undefined!`);\n            }\n          }\n\n          if ((child as any).isMesh) {\n            if (child.name === \"CAM-Arena_LowRes_Top\") {\n              (child as THREE.Mesh).material = topMaterial;\n              child.castShadow = true;\n            } else if (child.name === \"CAM-Arena_LowRes_Bottom\") {\n              (child as THREE.Mesh).material = mazeMaterial;\n              child.castShadow = true;\n            } else if (child.name === \"CAM-Floor\") {\n              const clonedChild = child.clone();\n              child.position.y = -0.1;\n              child.position.x = 0;\n              child.position.z = 0;\n              (child as THREE.Mesh).material = new THREE.MeshBasicMaterial({\n                color: 0xffffff,\n                opacity: 1,\n                transparent: false,\n                depthWrite: true,\n                depthTest: true,\n                side: THREE.FrontSide,\n              });\n              child.receiveShadow = false;\n              child.castShadow = true;\n              child.scale.set(0.5, 0.5, 0.5);\n\n              (clonedChild as THREE.Mesh).material = floorMaterial;\n              clonedChild.position.y = -0.5;\n              clonedChild.receiveShadow = true;\n              scene.add(clonedChild);\n            }\n          }\n        });\n\n        model.traverse(function (node: THREE.Object3D) {\n          if ((node as any).isMesh) {\n            node.castShadow = true;\n            node.receiveShadow = true;\n          }\n        });\n\n        scene.add(model);\n        model.position.set(0.5, 0.5, 0.5);\n\n        resolve();\n      },\n      function (progress: any) {},\n      function (error: any) {\n        reject(error);\n      }\n    );\n  });\n}\n","import * as THREE from \"three\";\nimport { isMobile } from \"../config/config\";\nimport { DOM_ELEMENTS } from \"../config/selectors\";\nimport { camera, setupCamera } from \"./camera\";\nimport { loadModel } from \"./objects\";\n\nfunction enhanceAntiAliasing(): void {\n  if (isMobile) {\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n  } else {\n    renderer.setPixelRatio(window.devicePixelRatio);\n  }\n  renderer.shadowMap.enabled = true;\n  renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n}\n\nfunction setPixelRatio(): void {\n  const pixelRatio = Math.min(window.devicePixelRatio, isMobile ? 2 : 3);\n  renderer.setPixelRatio(pixelRatio);\n\n  if (DOM_ELEMENTS.mazeContainer) {\n    renderer.setSize(\n      DOM_ELEMENTS.mazeContainer.clientWidth,\n      DOM_ELEMENTS.mazeContainer.clientHeight\n    );\n  } else {\n    renderer.setSize(window.innerWidth, window.innerHeight);\n  }\n}\n\nfunction setupLighting(): void {\n  const ambientLight = new THREE.AmbientLight(0xffffff);\n  scene.add(ambientLight);\n\n  const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n  scene.add(directionalLight);\n  directionalLight.position.set(-5, 15, 10);\n  directionalLight.shadow.mapSize.width = 4096;\n  directionalLight.shadow.mapSize.height = 4096;\n  directionalLight.shadow.camera.left = -20;\n  directionalLight.shadow.camera.right = 20;\n  directionalLight.shadow.camera.top = 20;\n  directionalLight.shadow.camera.bottom = -20;\n  directionalLight.shadow.camera.near = 0.1;\n  directionalLight.shadow.camera.far = 50;\n  directionalLight.shadow.bias = -0.001;\n  directionalLight.shadow.radius = 3;\n  directionalLight.castShadow = true;\n}\n\nexport const scene = new THREE.Scene();\n\nconst renderer = new THREE.WebGLRenderer({\n  antialias: true,\n  alpha: true,\n  powerPreference: \"high-performance\",\n  precision: \"highp\",\n});\n\nconst clock = new THREE.Clock();\nconst frameCallbacks: (() => void)[] = [];\n\nfunction initRenderer(): void {\n  enhanceAntiAliasing();\n\n  if (DOM_ELEMENTS.mazeContainer) {\n    renderer.setSize(\n      DOM_ELEMENTS.mazeContainer.clientWidth,\n      DOM_ELEMENTS.mazeContainer.clientHeight\n    );\n    DOM_ELEMENTS.mazeContainer.appendChild(renderer.domElement);\n  } else {\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n  }\n\n  if (document.readyState === \"loading\") {\n    document.addEventListener(\"DOMContentLoaded\", setPixelRatio);\n  } else {\n    setPixelRatio();\n  }\n  window.addEventListener(\"resize\", setPixelRatio);\n\n  renderer.render(scene, camera);\n}\n\nexport async function setupScene() {\n  initRenderer();\n  setupLighting();\n  setupCamera();\n  await loadModel(scene);\n\n  // Debug: Log scene setup\n  console.log(\"Scene setup complete\");\n  console.log(\"Scene children count:\", scene.children.length);\n  console.log(\"Camera position after setup:\", camera.position);\n}\n\nexport function startRenderLoop(): void {\n  const render = () => {\n    // Call all registered frame callbacks\n    frameCallbacks.forEach((callback) => callback());\n\n    // Render the scene\n    renderer.render(scene, camera);\n\n    requestAnimationFrame(render);\n  };\n  render();\n}\n\nexport function onFrame(callback: () => void): void {\n  frameCallbacks.push(callback);\n}\n\nexport { renderer, clock };\n","import * as THREE from \"three\";\nimport { MazePathPoint, PathPoint, CameraPathPoint } from \"../types/types\";\nimport { isMobile } from \"../config/config\";\n\nconst mazeCenterPathPoint = new THREE.Vector3(0.45175, 0.5, 0.55675);\n\nconst cameraStartPoints = {\n  startMobile: new THREE.Vector3(0.5, 2.5, 2.5),\n  startDesktop: new THREE.Vector3(-2, 2.5, 2),\n  secondMobile: new THREE.Vector3(0.5, 2.5, 2),\n  secondDesktop: new THREE.Vector3(-1.5, 3, 2),\n  mobileLookAt: new THREE.Vector3(0.5, 0.5, -1.5),\n  desktopLookAt: new THREE.Vector3(-1.25, 0.5, 0.25),\n};\n\nconst startPosition = isMobile\n  ? cameraStartPoints.startMobile\n  : cameraStartPoints.startDesktop;\nconst secondPosition = isMobile\n  ? cameraStartPoints.secondMobile\n  : cameraStartPoints.secondDesktop;\nconst lookAtPosition = isMobile\n  ? cameraStartPoints.mobileLookAt\n  : cameraStartPoints.desktopLookAt;\n\nconst pacmanHomePathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.0045),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.6025), type: \"straight\" },\n];\n\nconst ghost1HomePathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.75775, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.004, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.0965, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n];\n\nconst ghost2HomePathPoints: MazePathPoint[] = [\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.004, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.502), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.3055, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.3055, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.0965, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n];\n\nconst ghost3HomePathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.75325), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.15475, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.55675, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.009, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.904), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.75775, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.004, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.808, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.75325), type: \"straight\" },\n];\n\nconst ghost4HomePathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.65725, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.15975, 0.55, 0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.6025), type: \"straight\" },\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.4015), type: \"straight\" },\n];\n\nconst ghost5HomePathPoints: MazePathPoint[] = [\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.04975),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.3055, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, -0.101), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.04975),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n];\n\nconst cameraHomeScrollPathPoints: CameraPathPoint[] = [\n  { pos: startPosition, lookAt: lookAtPosition },\n  { pos: secondPosition, lookAt: lookAtPosition },\n  { pos: new THREE.Vector3(0.55675, 3, 0.45175), lookAt: lookAtPosition },\n  { pos: mazeCenterPathPoint, lookAt: lookAtPosition },\n];\n\nconst cameraPOVPathPoints: CameraPathPoint[] = [\n  {\n    pos: new THREE.Vector3(0.55675, -0.5, 0.45175),\n    type: \"curve\",\n    curveType: \"forwardDownArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.607, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.9085, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.85375),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.15525),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.9085, 0.55, 1.2055),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.808, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 1.15525),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 1.05475),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.7075, 0.55, 1.0045),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.205, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.05475),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.15525),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.205, 0.55, 1.2055),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.5065, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 1.306),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 1, 2.0095),\n    type: \"straight\",\n  },\n];\n\nconst ghost1POVPathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.009, 0.55, 0.8035), type: \"straight\" },\n  { pos: new THREE.Vector3(0.9085, 0.55, 0.8035), type: \"straight\" },\n];\n\nconst ghost2POVPathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.009, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 1.15525), type: \"straight\" },\n  { pos: new THREE.Vector3(0.95875, 0.55, 1.05475), type: \"straight\" },\n];\n\nconst ghost3POVPathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.904), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.95425),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.406, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.5065, 0.55, 1.0045), type: \"straight\" },\n];\n\nconst ghost4POVPathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(0.15475, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.05475),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.205, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.3055, 0.55, 1.0045), type: \"straight\" },\n];\n\nconst ghost5POVPathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(0.55675, 0.55, 1.306), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 1.25575),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.5065, 0.55, 1.2055), type: \"straight\" },\n  { pos: new THREE.Vector3(0.406, 0.55, 1.2055), type: \"straight\" },\n];\n\nexport const povTriggerPositions = {\n  ghost1: {\n    triggerPos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    ghostTextPos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    camTextPos: new THREE.Vector3(0.75775, 0.55, 0.8035),\n    endPosition: new THREE.Vector3(0.85825, 0.55, 0.8035),\n  },\n  ghost2: {\n    triggerPos: new THREE.Vector3(0.9085, 0.55, 0.8035),\n    ghostTextPos: new THREE.Vector3(0.95875, 0.55, 0.85375),\n    camTextPos: new THREE.Vector3(0.95875, 0.55, 0.904),\n    endPosition: new THREE.Vector3(0.95875, 0.55, 1.0045),\n  },\n  ghost3: {\n    triggerPos: new THREE.Vector3(0.75775, 0.55, 1.05475),\n    ghostTextPos: new THREE.Vector3(0.7075, 0.55, 1.0045),\n    camTextPos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    endPosition: new THREE.Vector3(0.55675, 0.55, 1.0045),\n  },\n  ghost4: {\n    triggerPos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    ghostTextPos: new THREE.Vector3(0.5065, 0.55, 1.0045),\n    camTextPos: new THREE.Vector3(0.45625, 0.55, 1.0045),\n    endPosition: new THREE.Vector3(0.35575, 0.55, 1.0045),\n  },\n  ghost5: {\n    triggerPos: new THREE.Vector3(0.15475, 0.55, 1.15525),\n    ghostTextPos: new THREE.Vector3(0.205, 0.55, 1.2055),\n    camTextPos: new THREE.Vector3(0.25525, 0.55, 1.2055),\n    endPosition: new THREE.Vector3(0.35575, 0.55, 1.2055),\n  },\n};\n\nexport function getStartPosition() {\n  return startPosition;\n}\n\nexport function getSecondPosition() {\n  return secondPosition;\n}\n\nexport function getLookAtPosition() {\n  return lookAtPosition;\n}\n\nexport const homePaths = {\n  pacman: pacmanHomePathPoints,\n  ghost1: ghost1HomePathPoints,\n  ghost2: ghost2HomePathPoints,\n  ghost3: ghost3HomePathPoints,\n  ghost4: ghost4HomePathPoints,\n  ghost5: ghost5HomePathPoints,\n} as const;\n\nexport const povPaths = {\n  camera: cameraPOVPathPoints,\n  ghost1: ghost1POVPathPoints,\n  ghost2: ghost2POVPathPoints,\n  ghost3: ghost3POVPathPoints,\n  ghost4: ghost4POVPathPoints,\n  ghost5: ghost5POVPathPoints,\n} as const;\n\nexport function createHomeScrollPathPoints(\n  pacman: THREE.Object3D,\n  ghosts: Record<string, THREE.Object3D>\n): Record<string, PathPoint[]> {\n  const scrollPaths: Record<string, PathPoint[]> = {};\n\n  Object.entries({ pacman, ...ghosts }).forEach(([key, obj]) => {\n    const pausedPos = obj.position.clone();\n    const arcPoint = new THREE.Vector3(\n      (pausedPos.x + mazeCenterPathPoint.x) / 2,\n      1,\n      (pausedPos.z + mazeCenterPathPoint.z) / 2\n    );\n\n    scrollPaths[key] = [\n      { pos: pausedPos },\n      { pos: arcPoint },\n      { pos: mazeCenterPathPoint },\n    ];\n  });\n\n  return scrollPaths;\n}\n\nexport function getCameraHomeScrollPathPoints(): CameraPathPoint[] {\n  return cameraHomeScrollPathPoints;\n}\n","import * as THREE from \"three\";\nimport { MazePathPoint, PathPoint, CameraPathPoint } from \"../types/types\";\nimport {\n  homePaths,\n  povPaths,\n  createHomeScrollPathPoints,\n  getCameraHomeScrollPathPoints,\n} from \"./pathpoints\";\n\nfunction createMazePath(\n  pathPoints: (MazePathPoint | CameraPathPoint)[]\n): THREE.CurvePath<THREE.Vector3> {\n  const path = new THREE.CurvePath<THREE.Vector3>();\n\n  const typedPathPoints = pathPoints.filter(\n    (point) => \"type\" in point\n  ) as Array<{\n    pos: THREE.Vector3;\n    type: \"straight\" | \"curve\";\n    curveType?: \"upperArc\" | \"lowerArc\" | \"forwardDownArc\";\n  }>;\n\n  for (let i = 0; i < typedPathPoints.length - 1; i++) {\n    const current = typedPathPoints[i];\n    const next = typedPathPoints[i + 1];\n\n    if (current.type === \"straight\") {\n      path.add(new THREE.LineCurve3(current.pos, next.pos));\n    } else if (current.type === \"curve\") {\n      const hasPrevCurve = i > 0 && typedPathPoints[i - 1].type === \"curve\";\n      const hasNextCurve =\n        i < typedPathPoints.length - 2 &&\n        typedPathPoints[i + 1].type === \"curve\";\n\n      const midPoint =\n        hasPrevCurve || hasNextCurve\n          ? createDoubleCurveMidPoint(current, next, hasPrevCurve, hasNextCurve)\n          : createSingleCurveMidPoint(current, next);\n\n      path.add(\n        new THREE.QuadraticBezierCurve3(current.pos, midPoint, next.pos)\n      );\n    }\n  }\n  return path;\n}\n\nfunction createSingleCurveMidPoint(\n  current: { pos: THREE.Vector3; curveType?: string },\n  next: { pos: THREE.Vector3; curveType?: string }\n): THREE.Vector3 {\n  if (current.curveType) {\n    const curveType = current.curveType;\n\n    if (curveType === \"upperArc\") {\n      return new THREE.Vector3(current.pos.x, current.pos.y, next.pos.z);\n    } else if (curveType === \"lowerArc\") {\n      return new THREE.Vector3(next.pos.x, current.pos.y, current.pos.z);\n    } else if (curveType === \"forwardDownArc\") {\n      return new THREE.Vector3(current.pos.x, next.pos.y, current.pos.z);\n    }\n  }\n\n  return new THREE.Vector3(current.pos.x, current.pos.y, next.pos.z);\n}\n\nfunction createDoubleCurveMidPoint(\n  current: { pos: THREE.Vector3; curveType?: string },\n  next: { pos: THREE.Vector3; curveType?: string },\n  hasPrevCurve: boolean,\n  hasNextCurve: boolean\n): THREE.Vector3 {\n  const smoothingFactor = 0.3;\n  const originalMidPoint = createSingleCurveMidPoint(current, next);\n  const straightMidPoint = current.pos.clone().lerp(next.pos, 0.5);\n\n  const stretchFactor =\n    hasPrevCurve && hasNextCurve ? smoothingFactor * 2 : smoothingFactor;\n  return originalMidPoint.clone().lerp(straightMidPoint, stretchFactor);\n}\n\nfunction createHomeScrollPath(\n  pathPoints: PathPoint[]\n): THREE.CurvePath<THREE.Vector3> {\n  const path = new THREE.CurvePath<THREE.Vector3>();\n\n  if (pathPoints.length === 3) {\n    const curve = new THREE.QuadraticBezierCurve3(\n      pathPoints[0].pos,\n      pathPoints[1].pos,\n      pathPoints[2].pos\n    );\n    path.add(curve);\n  }\n\n  return path;\n}\n\nfunction createCameraHomeScrollPath(\n  pathPoints: CameraPathPoint[]\n): THREE.CurvePath<THREE.Vector3> {\n  const path = new THREE.CurvePath<THREE.Vector3>();\n\n  if (pathPoints.length === 4) {\n    const curve = new THREE.CubicBezierCurve3(\n      pathPoints[0].pos,\n      pathPoints[1].pos,\n      pathPoints[2].pos,\n      pathPoints[3].pos\n    );\n    path.add(curve);\n  }\n\n  return path;\n}\n\nexport function getHomePaths(): Record<string, THREE.CurvePath<THREE.Vector3>> {\n  const paths: Record<string, THREE.CurvePath<THREE.Vector3>> = {};\n\n  Object.entries(homePaths).forEach(([key, pathPoints]) => {\n    paths[key] = createMazePath(pathPoints);\n  });\n\n  return paths;\n}\n\nexport function getHomeScrollPaths(\n  pacman: THREE.Object3D,\n  ghosts: Record<string, THREE.Object3D>\n): Record<string, THREE.CurvePath<THREE.Vector3>> {\n  const scrollPathPoints = createHomeScrollPathPoints(pacman, ghosts);\n  const cameraPathPoints = getCameraHomeScrollPathPoints();\n\n  const paths: Record<string, THREE.CurvePath<THREE.Vector3>> = {\n    camera: createCameraHomeScrollPath(cameraPathPoints),\n  };\n\n  Object.entries(scrollPathPoints).forEach(([key, pathPoints]) => {\n    paths[key] = createHomeScrollPath(pathPoints);\n  });\n\n  return paths;\n}\n\nexport function getPOVPaths(): Record<string, THREE.CurvePath<THREE.Vector3>> {\n  const paths: Record<string, THREE.CurvePath<THREE.Vector3>> = {};\n\n  Object.entries(povPaths).forEach(([key, pathPoints]) => {\n    paths[key] = createMazePath(pathPoints);\n  });\n\n  return paths;\n}\n\nexport function getAllPaths(\n  pacman: THREE.Object3D,\n  ghosts: Record<string, THREE.Object3D>\n): Record<string, THREE.CurvePath<THREE.Vector3>> {\n  return {\n    ...getHomePaths(),\n    ...getPOVPaths(),\n    ...getHomeScrollPaths(pacman, ghosts),\n  };\n}\n","import { ghosts, pacman, pacmanMixer } from \"../core/objects\";\nimport { getHomePaths } from \"../paths/paths\";\nimport { clock } from \"../core/scene\";\nimport { calculateObjectOrientation } from \"./util\";\nimport { camera } from \"../core/camera\";\n\nconst pathMapping = {\n  pacman: \"pacmanHome\",\n  ghost1: \"ghost1Home\",\n  ghost2: \"ghost2Home\",\n  ghost3: \"ghost3Home\",\n  ghost4: \"ghost4Home\",\n  ghost5: \"ghost5Home\",\n} as const;\n\nconst LOOP_DURATION = 40;\n\nlet isHomeLoopActive = true;\nlet isPaused = false;\nlet pauseStartTime = 0;\nlet totalPausedTime = 0;\n\nexport function startHomeLoop() {\n  isHomeLoopActive = true;\n  if (isPaused) {\n    const currentTime = performance.now() / 1000;\n    totalPausedTime += currentTime - pauseStartTime;\n    isPaused = false;\n  }\n}\n\nexport function stopHomeLoop() {\n  isHomeLoopActive = false;\n  isPaused = true;\n  pauseStartTime = performance.now() / 1000;\n}\n\nexport function setupScrollHandling() {\n  let wasAtTop = true;\n\n  window.addEventListener(\"scroll\", () => {\n    const isAtTop = window.scrollY === 0;\n\n    if (wasAtTop && !isAtTop) {\n      stopHomeLoop();\n    }\n    wasAtTop = isAtTop;\n  });\n}\n\nexport function updateHomeLoop() {\n  if (!isHomeLoopActive) return;\n  const currentTime = performance.now() / 1000;\n  const adjustedTime = currentTime - totalPausedTime;\n  const globalTime = adjustedTime % LOOP_DURATION;\n  const t = globalTime / LOOP_DURATION;\n\n  const homePaths = getHomePaths();\n\n  Object.entries(ghosts).forEach(([key, ghost]) => {\n    const pathKey = pathMapping[key as keyof typeof pathMapping];\n    const path = homePaths[pathKey];\n    if (!path) return;\n    const position = path.getPointAt(t);\n    if (!position) return;\n    const tangent = path.getTangentAt(t);\n    if (!tangent || tangent.length() === 0) return;\n\n    ghost.position.copy(position);\n\n    const objectType = key === \"pacman\" ? \"pacman\" : \"ghost\";\n    calculateObjectOrientation(ghost, tangent, objectType);\n  });\n\n  const delta = clock.getDelta();\n  if (pacmanMixer) {\n    pacmanMixer.update(delta);\n  }\n\n  // Debug: Log object positions every 60 frames (once per second at 60fps)\n  if (Math.floor(currentTime * 60) % 60 === 0) {\n    console.log(\"Home loop - Object positions:\", {\n      pacman: pacman.position,\n      ghost1: ghosts.ghost1.position,\n      ghost2: ghosts.ghost2.position,\n      ghost3: ghosts.ghost3.position,\n      ghost4: ghosts.ghost4.position,\n      ghost5: ghosts.ghost5.position,\n    });\n    console.log(\"Camera position:\", camera.position);\n    console.log(\n      \"Camera target:\",\n      camera.getWorldDirection(new THREE.Vector3())\n    );\n  }\n\n  // Temporary: Force objects to visible positions for testing\n  if (currentTime < 5) {\n    // Only for first 5 seconds\n    pacman.position.set(0.5, 0.55, 0.5);\n    ghosts.ghost1.position.set(0.6, 0.55, 0.5);\n    ghosts.ghost2.position.set(0.4, 0.55, 0.5);\n    ghosts.ghost3.position.set(0.5, 0.55, 0.6);\n    ghosts.ghost4.position.set(0.5, 0.55, 0.4);\n    ghosts.ghost5.position.set(0.5, 0.55, 0.5);\n  }\n}\n","export function calculateObjectOrientation(\n  object: THREE.Object3D,\n  tangent: THREE.Vector3,\n  objectType: \"pacman\" | \"ghost\" | \"camera\" = \"ghost\"\n): void {\n  if (!tangent || tangent.length() === 0) return;\n\n  const targetRotation = Math.atan2(tangent.x, tangent.z);\n\n  if (objectType === \"pacman\") {\n    object.rotation.set(Math.PI / 2, Math.PI, targetRotation + Math.PI / 2);\n  } else if (objectType === \"ghost\") {\n    object.rotation.set(0, targetRotation, 0);\n  } else if (objectType === \"camera\") {\n    const lookAtPoint = object.position.clone().add(tangent);\n    object.lookAt(lookAtPoint);\n  }\n}\n","import * as THREE from \"three\";\nimport { camera } from \"../core/camera\";\nimport { getHomeScrollPaths } from \"../paths/paths\";\nimport { pacman, ghosts } from \"../core/objects\";\nimport { stopHomeLoop } from \"./HomeLoop\";\nimport gsap from \"gsap\";\n\nexport function initHomeScrollAnimation() {\n  // Wait for the scene to be fully loaded\n  const checkSceneReady = () => {\n    // Check if objects are loaded and have valid positions\n    if (!pacman || !ghosts || Object.keys(ghosts).length === 0) {\n      console.log(\"Scene not ready, retrying in 100ms...\");\n      setTimeout(checkSceneReady, 100);\n      return;\n    }\n\n    // Check if objects have been positioned (not at origin)\n    const objectsReady = Object.values(ghosts).every(\n      (ghost) => ghost.position.length() > 0 || ghost.children.length > 0\n    );\n\n    if (!objectsReady) {\n      console.log(\"Objects not positioned yet, retrying in 100ms...\");\n      setTimeout(checkSceneReady, 100);\n      return;\n    }\n\n    console.log(\"Scene is ready, initializing scroll animation...\");\n    setupScrollAnimation();\n  };\n\n  checkSceneReady();\n}\n\nfunction setupScrollAnimation() {\n  const scrollPaths = getHomeScrollPaths(pacman, ghosts);\n\n  console.log(\"Scroll paths created:\", Object.keys(scrollPaths));\n  console.log(\"Pacman position:\", pacman.position);\n  console.log(\n    \"Ghost positions:\",\n    Object.entries(ghosts).map(([key, ghost]) => ({\n      key,\n      position: ghost.position,\n    }))\n  );\n\n  stopHomeLoop();\n\n  gsap\n    .timeline({\n      scrollTrigger: {\n        trigger: \".sc--home\",\n        start: \"top top\",\n        end: \"bottom top\",\n        scrub: 0.5,\n        onEnter: () => {\n          console.log(\"Home scroll animation started\");\n        },\n        onLeave: () => {\n          console.log(\"Home scroll animation ended\");\n        },\n      },\n    })\n    .to(\n      { progress: 0 },\n      {\n        progress: 1,\n        immediateRender: false,\n        onUpdate: function () {\n          const progress = this.targets()[0].progress;\n          updateScrollAnimation(progress, scrollPaths);\n        },\n      }\n    );\n}\n\nfunction updateScrollAnimation(\n  progress: number,\n  paths: Record<string, THREE.CurvePath<THREE.Vector3>>\n) {\n  if (paths.camera) {\n    const cameraPoint = paths.camera.getPointAt(progress);\n    camera.position.copy(cameraPoint);\n    camera.updateProjectionMatrix();\n  }\n\n  if (paths.pacman && pacman) {\n    const pacmanPoint = paths.pacman.getPointAt(progress);\n    pacman.position.copy(pacmanPoint);\n\n    // Debug: Log pacman position updates\n    if (progress === 0 || progress === 0.5 || progress === 1) {\n      console.log(`Pacman at progress ${progress}:`, pacmanPoint);\n    }\n\n    const tangent = paths.pacman.getTangentAt(progress);\n    if (tangent && tangent.length() > 0) {\n      pacman.lookAt(pacmanPoint.clone().add(tangent.normalize()));\n    }\n  }\n\n  Object.entries(ghosts).forEach(([key, ghost]) => {\n    // The paths are named with the same keys as the ghosts object\n    const path = paths[key];\n\n    if (path) {\n      const ghostPoint = path.getPointAt(progress);\n      ghost.position.copy(ghostPoint);\n\n      // Debug: Log ghost position updates\n      if (progress === 0 || progress === 0.5 || progress === 1) {\n        console.log(`Ghost ${key} at progress ${progress}:`, ghostPoint);\n      }\n\n      const tangent = path.getTangentAt(progress);\n      if (tangent && tangent.length() > 0) {\n        ghost.lookAt(ghostPoint.clone().add(tangent.normalize()));\n      }\n    }\n  });\n}\n","import { setupScene, startRenderLoop, onFrame } from \"./core/scene\";\nimport { updateHomeLoop } from \"./animation/HomeLoop\";\nimport { initHomeScrollAnimation } from \"./animation/HomeScroll\";\n\nasync function main() {\n  await setupScene();\n\n  onFrame(updateHomeLoop);\n\n  initHomeScrollAnimation();\n\n  startRenderLoop();\n}\n\nmain();\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","THREE","isMobile","window","innerWidth","DOM_ELEMENTS","mazeContainer","document","querySelector","canvas","homeSection","introSection","povSection","finalSection","finalContainer","parentElements","querySelectorAll","gsap","ScrollTrigger","camera","innerHeight","quaternion","clone","setFromEuler","mazeTexture","load","mazeMaterial","matcap","topMaterial","color","metalness","roughness","envMapIntensity","ghostMaterial","opacity","transparent","depthWrite","depthTest","blending","side","transmission","floorMaterial","pacmanMaterials","blue","white","default","materialMap","CAM_Pacman_Backframe","CAM_Pacman_Logo_1","CAM_Pacman_Logo_2","loader","Array","fill","pacmanMixer","pacman","ghosts","ghost1","ghost2","ghost3","ghost4","ghost5","ghostContainers","Ghost_EUR","Ghost_CHF","Ghost_YEN","Ghost_USD","Ghost_GBP","setPixelRatio","pixelRatio","Math","min","devicePixelRatio","renderer","setSize","clientWidth","clientHeight","scene","antialias","alpha","powerPreference","precision","clock","frameCallbacks","async","setupScene","shadowMap","enabled","type","appendChild","domElement","body","readyState","addEventListener","render","ambientLight","add","directionalLight","position","set","shadow","mapSize","width","height","left","right","top","bottom","near","far","bias","radius","castShadow","setupLighting","lookAt","console","log","fov","values","forEach","ghost","Promise","resolve","reject","gltf","model","traverse","child","name","children","subChild","isMesh","material","push","visible","item","scale","rotation","PI","pacmanActions","animations","clip","action","clipAction","setEffectiveWeight","play","ghostContainer","ghostGroup","z","x","startsWith","includes","warn","clonedChild","y","receiveShadow","node","progress","error","loadModel","length","mazeCenterPathPoint","cameraStartPoints","startMobile","startDesktop","secondMobile","secondDesktop","mobileLookAt","desktopLookAt","startPosition","secondPosition","lookAtPosition","pacmanHomePathPoints","pos","curveType","ghost1HomePathPoints","ghost2HomePathPoints","ghost3HomePathPoints","ghost4HomePathPoints","ghost5HomePathPoints","cameraHomeScrollPathPoints","homePaths","createSingleCurveMidPoint","current","next","createDoubleCurveMidPoint","hasPrevCurve","hasNextCurve","originalMidPoint","straightMidPoint","lerp","stretchFactor","smoothingFactor","createCameraHomeScrollPath","pathPoints","path","curve","getHomePaths","paths","entries","typedPathPoints","filter","point","i","midPoint","createMazePath","pathMapping","isHomeLoopActive","isPaused","pauseStartTime","updateHomeLoop","currentTime","performance","now","t","getPointAt","tangent","getTangentAt","copy","object","objectType","targetRotation","atan2","lookAtPoint","calculateObjectOrientation","delta","getDelta","update","floor","getWorldDirection","Vector3","initHomeScrollAnimation","checkSceneReady","keys","every","scrollPaths","scrollPathPoints","pausedPos","arcPoint","createHomeScrollPathPoints","createHomeScrollPath","getHomeScrollPaths","map","scrollTrigger","trigger","start","end","scrub","onEnter","onLeave","to","immediateRender","onUpdate","cameraPoint","updateProjectionMatrix","pacmanPoint","normalize","ghostPoint","updateScrollAnimation","this","targets","setupScrollAnimation","setTimeout","callback","requestAnimationFrame","startRenderLoop","main"],"sourceRoot":""}