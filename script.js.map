{"version":3,"file":"script.js","mappings":"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","sources":["webpack://cam-3d-animation/external var \"THREE\"","webpack://cam-3d-animation/./src/config.ts","webpack://cam-3d-animation/./src/scene.ts","webpack://cam-3d-animation/./src/camera.ts","webpack://cam-3d-animation/./src/materials.ts","webpack://cam-3d-animation/./src/objects.ts","webpack://cam-3d-animation/./src/events.ts","webpack://cam-3d-animation/./src/paths.ts","webpack://cam-3d-animation/./src/utils.ts","webpack://cam-3d-animation/./src/animations.ts","webpack://cam-3d-animation/./src/main.ts"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = THREE;","import * as THREE from 'three';\n\n// Camera Configuration\nexport const CAMERA_CONFIG = {\n  originalFOV: 50,\n  wideFOV: 80,\n  near: 0.001,\n  far: 1000\n};\n\n// Mobile Detection\nexport const isMobile = window.innerWidth < 768;\n\n// Camera Positions\nexport const CAMERA_POSITIONS = {\n  startMobile: new THREE.Vector3(0.5, 2.5, 2.5),\n  startDesktop: new THREE.Vector3(-2, 2.5, 2),\n  secondMobile: new THREE.Vector3(0.5, 2.5, 2),\n  secondDesktop: new THREE.Vector3(-1.5, 3, 2),\n  mobileLookAt: new THREE.Vector3(0.5, 0.5, -1.5),\n  desktopLookAt: new THREE.Vector3(-1.25, 0.5, 0.25)\n};\n\n// Get correct positions based on device\nexport const startPosition = isMobile ? CAMERA_POSITIONS.startMobile : CAMERA_POSITIONS.startDesktop;\nexport const secondPosition = isMobile ? CAMERA_POSITIONS.secondMobile : CAMERA_POSITIONS.secondDesktop;\nexport const lookAtPosition = isMobile ? CAMERA_POSITIONS.mobileLookAt : CAMERA_POSITIONS.desktopLookAt;\n\n// Animation Configuration\nexport const ANIMATION_CONFIG = {\n  GHOST_TEXT_START: 0.2,\n  CAM_TEXT_START: 0.3,\n  FADE_OUT_START: 0.8,\n  TRIGGER_DISTANCE: 0.02,\n  startEndScreenSectionProgress: 0.8,\n  rotationStartingPoint: 0.973,\n  scrollDebounceDelay: 0\n};\n\n// Shader Configuration\nexport const SHADER_CONFIG = {\n  vertexShader: `\n    varying vec3 vPosition;\n    void main() {\n      vPosition = position;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n  `,\n  fragmentShader: `\n    varying vec3 vPosition;\n    uniform float mixValue;\n    void main() {\n      float factor = (vPosition.y + 1.0) / 2.0;\n      vec3 colorA = vec3(0.0, 0.0, 1.0);\n      vec3 colorB = vec3(0.0, 1.0, 1.0);\n      vec3 colorC = vec3(1.0, 0.0, 0.0);\n      vec3 colorD = vec3(1.0, 1.0, 0.0);\n      \n      vec3 gradientA = mix(colorA, colorB, factor);\n      vec3 gradientB = mix(colorC, colorD, factor);\n      \n      vec3 finalColor = mix(gradientA, gradientB, mixValue);\n      gl_FragColor = vec4(finalColor, 1.0);\n    }\n  `\n};\n\n// Asset URLs\nexport const ASSETS = {\n  mazeTexture: \"https://c-am.b-cdn.net/CAM/matcap24.png\",\n  mazeModel: \"https://c-am.b-cdn.net/CAM/c-am-assets-3.glb\"\n};\n\n// DOM Selectors\nexport const SELECTORS = {\n  mazeContainer: \".el--home-maze.el\",\n  scrollComponent: \".cmp--scroll\",\n  introSection: \".sc--intro\",\n  homeSection: \".sc--home\",\n  povSection: \".sc--pov\",\n  finalSection: \".sc--final.sc\",\n  parentElements: \".cmp--pov.cmp\"\n};\n\n// Special Points\nexport const SPECIAL_POINTS = {\n  homeEndPoint: new THREE.Vector3(0.55675, 0.5, 0.45175),\n  povStartPoint1: new THREE.Vector3(0.55675, -5, 0.45175),\n  povStartPoint2: new THREE.Vector3(0.55675, -2.5, 0.45175),\n  startRotationPoint: new THREE.Vector3(0.55675, 0.55, 1.306),\n  endRotationPoint: new THREE.Vector3(-0.14675, 1, 1.8085),\n  targetLookAt: new THREE.Vector3(0.55675, 0.1, 1.306),\n  finalLookAt: new THREE.Vector3(-0.14675, 0, 1.8085),\n  reverseFinalLookAt: new THREE.Vector3(7.395407041377711, 0.9578031302345096, -4.312450290270135)\n};","import * as THREE from 'three';\nimport { SELECTORS, isMobile } from './config';\n\n// Scene Setup\nexport const scene = new THREE.Scene();\n\n// Renderer Setup\nexport const renderer = new THREE.WebGLRenderer({\n  antialias: true,\n  alpha: true,\n  powerPreference: 'high-performance',\n  precision: 'highp'\n});\n\n// Container\nexport const container = document.querySelector(SELECTORS.mazeContainer) as HTMLElement;\n\n// Clock for animations\nexport const clock = new THREE.Clock();\n\n// Anti-aliasing Enhancement\nfunction enhanceAntiAliasing(): void {\n  if (isMobile) {\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n  } else {\n    renderer.setPixelRatio(window.devicePixelRatio);\n  }\n  renderer.shadowMap.enabled = true;\n  renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n}\n\n// Pixel Ratio Setup\nfunction setPixelRatio(): void {\n  const pixelRatio = Math.min(window.devicePixelRatio, isMobile ? 2 : 3);\n  renderer.setPixelRatio(pixelRatio);\n  renderer.setSize(container.clientWidth, container.clientHeight);\n}\n\n// Initialize Renderer\nexport function initRenderer(): void {\n  enhanceAntiAliasing();\n  renderer.shadowMap.enabled = true;\n  renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n  renderer.setSize(container.clientWidth, container.clientHeight);\n  container.appendChild(renderer.domElement);\n\n  // Event listeners\n  window.addEventListener(\"load\", setPixelRatio);\n  window.addEventListener(\"resize\", setPixelRatio);\n}\n\n// Lighting Setup\nexport function setupLighting(): void {\n  const ambientLight = new THREE.AmbientLight(0xffffff);\n  scene.add(ambientLight);\n\n  const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n  scene.add(directionalLight);\n  directionalLight.position.set(-5, 15, 10);\n  directionalLight.shadow.mapSize.width = 4096;\n  directionalLight.shadow.mapSize.height = 4096;\n  directionalLight.shadow.camera.left = -20;\n  directionalLight.shadow.camera.right = 20;\n  directionalLight.shadow.camera.top = 20;\n  directionalLight.shadow.camera.bottom = -20;\n  directionalLight.shadow.camera.near = 0.1;\n  directionalLight.shadow.camera.far = 50;\n  directionalLight.shadow.bias = -0.001;\n  directionalLight.shadow.radius = 3;\n  directionalLight.castShadow = true;\n}\n\n// Canvas and DOM Elements\nexport const canvas = document.querySelector(\"canvas\") as HTMLCanvasElement;\nexport const finalSection = document.querySelector(SELECTORS.finalSection) as HTMLElement;\nexport const finalContainer = finalSection?.querySelector(\".cr--final.cr\") as HTMLElement;\nexport const parentElements = document.querySelectorAll(SELECTORS.parentElements) as NodeListOf<Element>;","import * as THREE from 'three';\nimport { CAMERA_CONFIG, startPosition, secondPosition, lookAtPosition } from './config';\nimport { container } from './scene';\n\n// Camera Setup\nexport const camera = new THREE.PerspectiveCamera(\n  CAMERA_CONFIG.originalFOV,\n  container.clientWidth / container.clientHeight,\n  CAMERA_CONFIG.near,\n  CAMERA_CONFIG.far\n);\n\n// Initialize Camera\nexport function initCamera(): void {\n  camera.position.copy(startPosition);\n  camera.lookAt(lookAtPosition);\n}\n\n// Camera Quaternions\nexport const startQuaternion = camera.quaternion.clone();\nexport const endQuaternion = new THREE.Quaternion().setFromEuler(new THREE.Euler(-1.5708, 0, 0));\n\n// Camera Utility Functions\nexport function getCameraLookAtPoint(): THREE.Vector3 {\n  const direction = new THREE.Vector3(0, 0, -1);\n  direction.applyQuaternion(camera.quaternion);\n  const lookAtPoint = new THREE.Vector3();\n  lookAtPoint.copy(camera.position).add(direction.multiplyScalar(10));\n  return lookAtPoint;\n}\n\n// Global camera setter for debugging\n(window as any).setCamera = function (lookAt: string | THREE.Vector3): void {\n  if (typeof lookAt === \"string\") {\n    const [x, y, z] = lookAt.split(\",\").map(Number);\n    lookAt = new THREE.Vector3(x, y, z);\n  }\n  camera.lookAt(lookAt);\n  camera.updateProjectionMatrix();\n  camera.updateMatrix();\n  camera.updateMatrixWorld();\n};\n\n// Resize Handler\nexport function setupCameraResize(): void {\n  window.addEventListener(\"resize\", () => {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n  });\n}","import * as THREE from 'three';\nimport { ASSETS, SHADER_CONFIG } from './config';\nimport { MaterialMap } from './types';\n\n// Texture Loader\nconst textureLoader = new THREE.TextureLoader();\n\n// Load Textures\nexport const mazeTexture = textureLoader.load(ASSETS.mazeTexture);\n\n// Basic Materials\nexport const mazeMaterial = new THREE.MeshMatcapMaterial({ matcap: mazeTexture });\n\nexport const topMaterial = new THREE.MeshStandardMaterial({\n  color: 0xf2f9f9,\n  metalness: 0.4,\n  roughness: 0,\n  envMapIntensity: 10,\n});\n\nexport const ghostMaterial = new THREE.MeshPhysicalMaterial({\n  color: 0xffffff,\n  opacity: 1,\n  transparent: true,\n  depthWrite: false,\n  depthTest: true,\n  blending: THREE.NormalBlending,\n  side: THREE.DoubleSide,\n  roughness: 0.75,\n  metalness: 0.2,\n  transmission: 0.5,\n});\n\nexport const floorMaterial = new THREE.MeshStandardMaterial({\n  color: 0xffffff,\n  opacity: 0.8,\n  transparent: true,\n  roughness: 0.5,\n  metalness: 0.1,\n});\n\n// Shader Material\nexport const pacmanShaderMaterial = new THREE.ShaderMaterial({\n  vertexShader: SHADER_CONFIG.vertexShader,\n  fragmentShader: SHADER_CONFIG.fragmentShader,\n  uniforms: {\n    mixValue: { value: 0.0 },\n  },\n});\n\n// Pacman Materials\nexport const pacmanMaterials = {\n  blue: new THREE.MeshBasicMaterial({ color: 0x1469d3 }),\n  white: new THREE.MeshBasicMaterial({ color: 0xffffff }),\n  default: new THREE.MeshBasicMaterial({ color: 0x1469d3 })\n};\n\n// Material Mapping for Pacman Parts\nexport const materialMap: MaterialMap = {\n  CAM_Pacman_Backframe: pacmanMaterials.blue,\n  \"CAM-Pacman_Bitcoin_1\": pacmanMaterials.white,\n  \"CAM-Pacman_Bitcoin_2\": pacmanMaterials.white,\n  \"CAM-Pacman_Bottom\": pacmanMaterials.blue,\n  \"CAM-Pacman_Top\": pacmanMaterials.blue,\n  \"CAM-Pacman_Eye\": pacmanMaterials.white,\n  CAM_Pacman_Logo_1: pacmanMaterials.white,\n  CAM_Pacman_Logo_2: pacmanMaterials.white,\n  \"CAM-Pacman_Shell_Boolean\": pacmanMaterials.blue,\n  \"CAM-Pacman_Shell\": pacmanMaterials.blue,\n  \"CAM-Pacman_Bottom_electronic\": pacmanMaterials.white,\n  \"CAM-Pacman_Top_electronic\": pacmanMaterials.white,\n  \"CAM-Pacman_Bottom_Text\": pacmanMaterials.white,\n  \"CAM-Pacman_Top_Text\": pacmanMaterials.white,\n  default: pacmanMaterials.blue\n};\n\n// Ghost Cover Materials\nexport const ghostCoverMaterials = Array(5).fill(ghostMaterial);","import * as THREE from 'three';\nimport { ASSETS } from './config';\nimport { GhostContainer } from './types';\nimport { scene } from './scene';\nimport { \n  mazeMaterial, \n  topMaterial, \n  ghostMaterial, \n  floorMaterial, \n  materialMap \n} from './materials';\n\n// GLB Loader - check if available in global THREE\nconst loader = (THREE as any).GLTFLoader ? \n  new (THREE as any).GLTFLoader() : \n  null;\n\n// Animation Mixer\nexport let pacmanMixer: THREE.AnimationMixer;\n\n// Pacman Group\nexport const pacman = new THREE.Group();\nscene.add(pacman);\n\n// Ghost Objects\nexport const ghosts: GhostContainer = {\n  pacman: pacman,\n  ghost1: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost2: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost3: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost4: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost5: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial)\n};\n\n// Add ghosts to scene\nObject.values(ghosts).forEach(ghost => scene.add(ghost));\n\n// Ghost Container Mapping\nconst ghostContainers: GhostContainer = {\n  Ghost_EUR: ghosts.ghost1,\n  Ghost_CHF: ghosts.ghost2,\n  Ghost_YEN: ghosts.ghost3,\n  Ghost_USD: ghosts.ghost4,\n  Ghost_GBP: ghosts.ghost5\n};\n\n// Load 3D Model\nexport function loadModel(): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (!loader) {\n      console.warn('GLTFLoader not available. Please include GLTFLoader script.');\n      resolve();\n      return;\n    }\n\n    loader.load(\n      ASSETS.mazeModel,\n      function (gltf: any) {\n        const model = gltf.scene;\n        const pacmanNames: string[] = [];\n\n        model.traverse((child: THREE.Object3D) => {\n          processPacmanObject(child, pacmanNames, gltf);\n          processGhostObject(child);\n          \n          // Handle all mesh processing in one place like the original\n          if (child instanceof THREE.Mesh) {\n            if (child.name === \"CAM-Arena_LowRes_Top\") {\n              child.material = topMaterial;\n              child.castShadow = true;\n            } else if (child.name === \"CAM-Arena_LowRes_Bottom\") {\n              child.material = mazeMaterial;\n              child.castShadow = true;\n            } else if (child.name === \"CAM-Floor\") {\n              const clonedChild = child.clone();\n              child.position.y = -0.1;\n              child.position.x = 0;\n              child.position.z = 0;\n              child.material = new THREE.MeshBasicMaterial({\n                color: 0xffffff,\n                opacity: 1,\n                transparent: false,\n                depthWrite: true,\n                depthTest: true,\n                side: THREE.FrontSide,\n              });\n              child.receiveShadow = false;\n              child.castShadow = true;\n              child.scale.set(0.5, 0.5, 0.5);\n              clonedChild.material = floorMaterial;\n              clonedChild.position.y = -0.5;\n              clonedChild.receiveShadow = true;\n              scene.add(clonedChild);\n            } else if (!pacmanNames.includes(child.name)) {\n              child.visible = false;\n            }\n          }\n        });\n\n        // Enable shadows\n         model.traverse(function (node: THREE.Object3D) {\n          if (node instanceof THREE.Mesh) {\n            node.castShadow = true;\n            node.receiveShadow = true;\n          }\n        });\n\n        scene.add(model);\n        model.position.set(0.5, 0.5, 0.5);\n        resolve();\n       },\n      undefined,\n      function (error: ErrorEvent) {\n        console.error(\"Fehler beim Laden des 3D-Modells:\", error);\n        console.warn(\"Continuing without 3D model...\");\n        resolve();\n      }\n    );\n  });\n}\n\n// Process Pacman Object\nfunction processPacmanObject(child: THREE.Object3D, pacmanNames: string[], gltf: any): void {\n  if (child.name === \"CAM-Pacman\") {\n    const children: THREE.Mesh[] = [];\n    \n    child.traverse((subChild) => {\n      if (subChild instanceof THREE.Mesh && \n          subChild.name !== \"CAM-Pacman_Shell\" && \n          subChild.name !== \"CAM-Pacman_Shell_Boolean\") {\n        subChild.material = materialMap[subChild.name] || materialMap.default;\n        children.push(subChild);\n      } else if (subChild.name === \"CAM-Pacman_Shell\" || \n                 subChild.name === \"CAM-Pacman_Shell_Boolean\") {\n        subChild.visible = false;\n        // FIX: Properly handle morph targets\n        if (subChild instanceof THREE.Mesh) {\n          if (subChild.morphTargetInfluences) {\n            subChild.morphTargetInfluences = [];\n          }\n          // Clear any morph target dictionary\n          if (subChild.morphTargetDictionary) {\n            subChild.morphTargetDictionary = {};\n          }\n        }\n        subChild.userData.skipAnimation = true;\n      }\n      pacmanNames.push(subChild.name);\n    });\n\n    children.forEach((item) => ghosts.pacman.add(item));\n\n    ghosts.pacman.scale.set(0.05, 0.05, 0.05);\n    ghosts.pacman.rotation.set(Math.PI / 2, Math.PI / 2, Math.PI / 4);\n\n    // Setup animations with better error handling\n    pacmanMixer = new THREE.AnimationMixer(ghosts.pacman);\n    const pacmanActions: { [key: string]: THREE.AnimationAction } = {};\n\n    gltf.animations.forEach((clip: THREE.AnimationClip) => {\n      // SIMPLE FIX: Skip problematic clips entirely\n      const hasProblematicTracks = clip.tracks.some(track => \n        track.name.includes('CAM-Pacman_Shell') && track.name.includes('morphTargetInfluences')\n      );\n      \n      if (hasProblematicTracks) {\n        console.log('Skipping problematic animation clip:', clip.name);\n        return; // Skip this entire clip\n      }\n      \n      const action = pacmanMixer.clipAction(clip);\n\n      action.getMixer().addEventListener('loop', function (e: any) {\n        e.action.getRoot().traverse(function (obj: any) {\n          if (obj.userData && obj.userData.skipAnimation) {\n            obj.updateMorphTargets = function () {};\n          }\n        });\n      });\n\n      pacmanActions[clip.name] = action;\n      action.setEffectiveWeight(0);\n      action.play();\n    });\n\n    Object.values(pacmanActions).forEach((action) => {\n      action.setEffectiveWeight(1);\n    });\n  }\n}\n\n// Process Ghost Object\nfunction processGhostObject(child: THREE.Object3D): void {\n  if (ghostContainers[child.name]) {\n    const ghostContainer = ghostContainers[child.name];\n    const ghostGroup = new THREE.Group();\n\n    child.rotation.z = Math.PI;\n    child.rotation.x = Math.PI / 2;\n    child.scale.set(0.75, 0.75, 0.75);\n\n    const children: THREE.Object3D[] = [];\n    child.traverse((subChild) => {\n      if (subChild instanceof THREE.Mesh) {\n        if (subChild.name.startsWith(\"Ghost_Mesh\")) {\n          subChild.material = ghostMaterial;\n        } else if ([\"EUR\", \"CHF\", \"YEN\", \"USD\", \"GBP\"].includes(subChild.name)) {\n          subChild.visible = false;\n        }\n        children.push(subChild);\n      }\n    });\n\n    children.forEach((item) => {\n      if (item.name.includes(\"EUR\") || item.name.startsWith(\"Ghost_Mesh\")) {\n        item.rotation.z = Math.PI;\n        item.rotation.x = Math.PI / 2;\n      } else {\n        item.rotation.set(0, 0, 0);\n      }\n      ghostGroup.add(item);\n    });\n\n    if (ghostContainer instanceof THREE.Mesh || ghostContainer instanceof THREE.Group) {\n      ghostContainer.add(ghostGroup);\n    }\n  }\n}","import * as THREE from 'three';\nimport { AnimationState, AnimationPosition } from './types';\nimport { ghosts } from './objects';\nimport { ANIMATION_CONFIG } from './config';\nimport { renderer, container } from './scene';\nimport { camera } from './camera';\n\n// Animation State\nexport const animationState: AnimationState = {\n  animationRunning: true,\n  savedPositions: {},\n  pauseTime: null,\n  timeOffset: 0,\n  oldTop: 0,\n  scrollTimeout: null,\n  homePositionsSaved: false,\n  homeAnimationPositions: {},\n  isInPovSection: false,\n  isMovingForward: true,\n  previousCameraPosition: null,\n  cachedStartYAngle: null,\n  animationStarted: false,\n  rotationStarted: false,\n  startedInitEndScreen: false,\n  endScreenPassed: false,\n  startEndProgress: 0,\n  cachedHomeEndRotation: null\n};\n\n// Scroll Handler\nexport function setupScrollHandler(): void {\n  window.addEventListener(\"scroll\", () => {\n    const top = window.scrollY;\n    const wasMovingForward = animationState.isMovingForward;\n    animationState.isMovingForward = top > animationState.oldTop;\n    animationState.oldTop = top;\n\n    // Save home positions when at top\n    if (!animationState.homePositionsSaved && window.scrollY === 0) {\n      animationState.homePositionsSaved = true;\n      Object.entries(ghosts).forEach(([key, ghost]) => {\n        animationState.homeAnimationPositions[key] = {\n          position: ghost.position.clone(),\n          lookAt: ghost.getWorldDirection(new THREE.Vector3()).clone(),\n          rotation: ghost.rotation.clone()\n        };\n      });\n    }\n\n    // Handle animation pause/resume\n    if (window.scrollY > 0 && animationState.animationRunning) {\n      animationState.pauseTime = Date.now();\n      animationState.animationRunning = false;\n    } else if (window.scrollY === 0 && !animationState.animationRunning) {\n      if (animationState.pauseTime) {\n        animationState.timeOffset += Date.now() - animationState.pauseTime;\n      }\n      animationState.animationRunning = true;\n\n      if (animationState.scrollTimeout) {\n        clearTimeout(animationState.scrollTimeout);\n        animationState.scrollTimeout = null;\n      }\n    }\n  });\n}\n\n// Window Load Handler\nexport function setupLoadHandler(): void {\n  window.addEventListener(\"load\", () => {\n    console.log(\"Application loaded\");\n  });\n}\n\n// Initialize all event handlers\nexport function initEventHandlers(): void {\n  setupScrollHandler();\n  setupLoadHandler();\n}","import * as THREE from 'three';\nimport { PathPoint, PathData, PathMapping } from './types';\nimport { CAMERA_POSITIONS, isMobile } from './config';\n\n// Path Creation Utility\nexport function createPath(pathPoints: PathPoint[]): THREE.CurvePath<THREE.Vector3> {\n  const path = new THREE.CurvePath<THREE.Vector3>();\n\n  for (let i = 0; i < pathPoints.length - 1; i++) {\n    const current = pathPoints[i];\n    const next = pathPoints[i + 1];\n\n    if (current.type === \"straight\") {\n      const line = new THREE.LineCurve3(current.pos, next.pos);\n      path.add(line);\n    } else if (current.type === \"curve\") {\n      let midPoint: THREE.Vector3;\n      if (current.curveType === \"upperArc\") {\n        midPoint = new THREE.Vector3(current.pos.x, current.pos.y, next.pos.z);\n      } else if (current.curveType === \"lowerArc\") {\n        midPoint = new THREE.Vector3(next.pos.x, current.pos.y, current.pos.z);\n      } else if (current.curveType === \"forwardDownArc\") {\n        midPoint = new THREE.Vector3(current.pos.x, next.pos.y, current.pos.z);\n      } else {\n        midPoint = new THREE.Vector3(current.pos.x, current.pos.y, next.pos.z);\n      }\n      const curve = new THREE.QuadraticBezierCurve3(current.pos, midPoint, next.pos);\n      path.add(curve);\n    }\n  }\n  return path;\n}\n\n// Path Points Definitions (shortened as requested)\nconst pacmanHomePathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.6025), type: \"straight\" },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.2005), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.45625, 0.55, 0.1), type: \"straight\" },\n  { pos: new THREE.Vector3(0.45625, 0.55, -0.101), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.35575, 0.55, -0.2015), type: \"straight\" },\n  { pos: new THREE.Vector3(0.15475, 0.55, -0.2015), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.05425, 0.55, -0.101), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(-0.04625, 0.55, -0.0005), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(-0.14675, 0.55, -0.101), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(-0.24725, 0.55, -0.2015), type: \"straight\" },\n  { pos: new THREE.Vector3(-0.34775, 0.55, -0.2015), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(-0.44825, 0.55, -0.101), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(-0.398, 0.55, -0.0005), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 0.1), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(-0.24725, 0.55, 0.2005), type: \"straight\" },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.2005), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.05425, 0.55, 0.301), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.4015), type: \"straight\" },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.4015), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(-0.24725, 0.55, 0.502), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.6025), type: \"straight\" },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.6025), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.05425, 0.55, 0.703), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.8035), type: \"straight\" },\n  { pos: new THREE.Vector3(-0.24725, 0.55, 0.8035), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 0.904), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(-0.398, 0.55, 1.0045), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 1.105), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 1.2055), type: \"straight\" },\n  { pos: new THREE.Vector3(-0.24725, 0.55, 1.2055), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 1.105), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.0045), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.15475, 0.55, 1.105), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 1.2055), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 1.105), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.65725, 0.55, 1.0045), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.75775, 0.55, 0.904), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.7075, 0.55, 0.8035), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.65725, 0.55, 0.75325), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.55675, 0.55, 0.703), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.45625, 0.55, 0.75325), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.8035), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.703), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.6025), type: \"straight\" },\n];\n\nconst ghost1HomePathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.502), type: \"straight\" },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.301), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 0.2005), type: \"straight\" },\n  { pos: new THREE.Vector3(-0.24725, 0.55, 0.2005), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.1), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(-0.04625, 0.55, -0.0005), type: \"straight\" },\n  { pos: new THREE.Vector3(0.35575, 0.55, -0.0005), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.45625, 0.55, 0.1), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.2005), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.703), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.8035), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.45625, 0.55, 0.75325), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.55675, 0.55, 0.703), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.65725, 0.55, 0.75325), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.75775, 0.55, 0.8035), type: \"straight\" },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.8035), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.75325), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(1.15975, 0.55, 0.703), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(1.26025, 0.55, 0.75325), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(1.36075, 0.55, 0.8035), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.703), type: \"straight\" },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.301), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(1.36075, 0.55, 0.2005), type: \"straight\" },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.2005), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.502), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.15475, 0.55, 0.6025), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.05425, 0.55, 0.703), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.004, 0.55, 0.8035), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.904), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.0045), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.15475, 0.55, 1.105), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 1.2055), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 1.105), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(-0.0965, 0.55, 1.0045), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.904), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.8035), type: \"straight\" },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 0.8035), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.502), type: \"straight\" },\n];\n\nconst ghost2HomePathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.904), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.004, 0.55, 0.8035), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.05425, 0.55, 0.703), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.6025), type: \"straight\" },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.6025), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(-0.24725, 0.55, 0.502), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.4015), type: \"straight\" },\n  { pos: new THREE.Vector3(0.15475, 0.55, 0.4015), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.502), type: \"straight\" },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.703), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.3055, 0.55, 0.8035), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.904), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.45625, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.65725, 0.55, 1.0045), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.75775, 0.55, 1.105), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.85825, 0.55, 1.2055), type: \"straight\" },\n  { pos: new THREE.Vector3(1.36075, 0.55, 1.2055), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(1.46125, 0.55, 1.105), type: \"straight\" },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.1), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(1.36075, 0.55, -0.0005), type: \"straight\" },\n  { pos: new THREE.Vector3(1.15975, 0.55, -0.0005), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.1), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.2005), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  { pos: new THREE.Vector3(0.85825, 0.55, -0.101), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.75775, 0.55, -0.2015), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.65725, 0.55, -0.15125), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.55675, 0.55, -0.101), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.45625, 0.55, -0.0005), type: \"straight\" },\n  { pos: new THREE.Vector3(0.45625, 0.55, 0.1), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.2005), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.703), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.3055, 0.55, 0.8035), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.904), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.25525, 0.55, 1.0045), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.15475, 0.55, 1.105), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 1.2055), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 1.105), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(-0.0965, 0.55, 1.0045), type: \"curve\", curveType: \"lowerArc\" },\n];\n\nconst ghost3HomePathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(0.808, 0.55, 0.8035), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.703), type: \"straight\" },\n  { pos: new THREE.Vector3(0.85825, 0.55, -0.101), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.75775, 0.55, -0.2015), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.65725, 0.55, -0.15125), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.55675, 0.55, -0.101), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.45625, 0.55, -0.15125), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.35575, 0.55, -0.2015), type: \"straight\" },\n  { pos: new THREE.Vector3(0.15475, 0.55, -0.2015), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.05425, 0.55, -0.101), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.15475, 0.55, -0.0005), type: \"straight\" },\n  { pos: new THREE.Vector3(0.35575, 0.55, -0.0005), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.45625, 0.55, 0.1), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.55675, 0.55, 0.2005), type: \"straight\" },\n  { pos: new THREE.Vector3(1.36075, 0.55, 0.2005), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.301), type: \"straight\" },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.703), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(1.36075, 0.55, 0.8035), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(1.26025, 0.55, 0.75325), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(1.15975, 0.55, 0.703), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.75325), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(1.009, 0.55, 0.8035), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.904), type: \"straight\" },\n  { pos: new THREE.Vector3(0.95875, 0.55, 1.105), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.85825, 0.55, 1.2055), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.75775, 0.55, 1.105), type: \"straight\" },\n  { pos: new THREE.Vector3(0.75775, 0.55, 0.904), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.7075, 0.55, 0.8035), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.65725, 0.55, 0.75325), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.55675, 0.55, 0.703), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.45625, 0.55, 0.75325), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.8035), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.703), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.15475, 0.55, 0.6025), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.05425, 0.55, 0.703), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.004, 0.55, 0.8035), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.904), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.65725, 0.55, 1.0045), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.75775, 0.55, 0.904), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.808, 0.55, 0.8035), type: \"curve\", curveType: \"upperArc\" },\n];\n\nconst ghost4HomePathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.4015), type: \"straight\" },\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.703), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.8035), type: \"straight\" },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.8035), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.75775, 0.55, 0.904), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.65725, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.25525, 0.55, 1.0045), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.15475, 0.55, 1.105), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 1.2055), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 1.105), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(-0.398, 0.55, 1.0045), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 0.904), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(-0.398, 0.55, 0.8035), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.301), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 0.2005), type: \"straight\" },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.2005), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.05425, 0.55, 0.301), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.15475, 0.55, 0.4015), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.2005), type: \"straight\" },\n  { pos: new THREE.Vector3(0.75775, 0.55, 0.2005), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  { pos: new THREE.Vector3(0.85825, 0.55, -0.101), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.95875, 0.55, -0.2015), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(1.05925, 0.55, -0.101), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(1.15975, 0.55, 0.0005), type: \"straight\" },\n  { pos: new THREE.Vector3(1.36075, 0.55, 0.0005), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(1.46125, 0.55, -0.101), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(1.36075, 0.55, -0.2015), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(1.26025, 0.55, -0.101), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(1.36075, 0.55, 0.0005), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.1), type: \"straight\" },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.703), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(1.36075, 0.55, 0.8035), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(1.26025, 0.55, 0.75325), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(1.15975, 0.55, 0.703), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.6025), type: \"straight\" },\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.4015), type: \"straight\" },\n];\n\nconst ghost5HomePathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(0.45625, 0.55, -0.04975), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.0005), type: \"straight\" },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.0005), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(-0.14675, 0.55, -0.101), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(-0.24725, 0.55, -0.2015), type: \"straight\" },\n  { pos: new THREE.Vector3(-0.34775, 0.55, -0.2015), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(-0.44825, 0.55, -0.101), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(-0.398, 0.55, 0.0005), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 0.1), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(-0.24725, 0.55, 0.2005), type: \"straight\" },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.2005), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.05425, 0.55, 0.301), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.4015), type: \"straight\" },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.4015), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(-0.24725, 0.55, 0.502), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.6025), type: \"straight\" },\n  { pos: new THREE.Vector3(0.15475, 0.55, 0.6025), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.703), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.3055, 0.55, 0.8035), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.904), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.45625, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.65725, 0.55, 1.0045), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.75775, 0.55, 0.904), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.8035), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.904), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.95875, 0.55, 1.105), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(1.05925, 0.55, 1.2055), type: \"straight\" },\n  { pos: new THREE.Vector3(1.36075, 0.55, 1.2055), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(1.46125, 0.55, 1.105), type: \"straight\" },\n  { pos: new THREE.Vector3(1.46125, 0.55, -0.101), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(1.36075, 0.55, -0.2015), type: \"straight\" },\n  { pos: new THREE.Vector3(1.15975, 0.55, -0.2015), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(1.05925, 0.55, -0.101), type: \"straight\" },\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.1), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.2005), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  { pos: new THREE.Vector3(0.85825, 0.55, -0.101), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.75775, 0.55, -0.2015), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.65725, 0.55, -0.15125), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.55675, 0.55, -0.101), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.45625, 0.55, -0.04975), type: \"curve\", curveType: \"lowerArc\" },\n];\n\nconst cameraPOVPathPoints: PathPoint[] = [\n  {\n    pos: new THREE.Vector3(0.55675, 0.5, 0.45175),\n    type: \"curve\",\n    curveType: \"forwardDownArc\",\n  },\n  { pos: new THREE.Vector3(0.55675, 0.55, 0.6025), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.607, 0.55, 0.703), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.65725, 0.55, 0.75325), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.7075, 0.55, 0.8035), type: \"straight\" },\n  { pos: new THREE.Vector3(0.9085, 0.55, 0.8035), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.85375), type: \"straight\" },\n  { pos: new THREE.Vector3(0.95875, 0.55, 1.15525), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.9085, 0.55, 1.2055), type: \"straight\" },\n  { pos: new THREE.Vector3(0.808, 0.55, 1.2055), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.75775, 0.55, 1.15525), type: \"straight\" },\n  { pos: new THREE.Vector3(0.75775, 0.55, 1.05475), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.7075, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.205, 0.55, 1.0045), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.15475, 0.55, 1.05475), type: \"straight\" },\n  { pos: new THREE.Vector3(0.15475, 0.55, 1.15525), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.205, 0.55, 1.2055), type: \"straight\" },\n  { pos: new THREE.Vector3(0.5065, 0.55, 1.2055), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.55675, 0.55, 1.306), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(-0.44825, 1, 2.0095), type: \"straight\" },\n];\n\nconst ghost1POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.703), type: \"straight\" },\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.75325), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(1.009, 0.55, 0.8035), type: \"straight\" },\n  { pos: new THREE.Vector3(0.9085, 0.55, 0.8035), type: \"straight\" },\n];\n \nconst ghost2POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 1.2055), type: \"straight\" },\n  { pos: new THREE.Vector3(1.009, 0.55, 1.2055), type: \"curve\", curveType: \"lowerArc\" },\n  { pos: new THREE.Vector3(0.95875, 0.55, 1.15525), type: \"straight\" },\n  { pos: new THREE.Vector3(0.95875, 0.55, 1.05475), type: \"straight\" },\n];\n\nconst ghost3POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.904), type: \"straight\" },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.95425), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.406, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.5065, 0.55, 1.0045), type: \"straight\" },\n];\n\nconst ghost4POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(0.15475, 0.55, 1.105), type: \"straight\" },\n  { pos: new THREE.Vector3(0.15475, 0.55, 1.05475), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.205, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.3055, 0.55, 1.0045), type: \"straight\" },\n];\n\nconst ghost5POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(0.55675, 0.55, 1.306), type: \"straight\" },\n  { pos: new THREE.Vector3(0.55675, 0.55, 1.25575), type: \"curve\", curveType: \"upperArc\" },\n  { pos: new THREE.Vector3(0.5065, 0.55, 1.2055), type: \"straight\" },\n  { pos: new THREE.Vector3(0.406, 0.55, 1.2055), type: \"straight\" },\n];\n\n// Camera Home Path - ensure it uses the correct positions based on device\nconst cameraStartPosition = isMobile ? CAMERA_POSITIONS.startMobile : CAMERA_POSITIONS.startDesktop;\nconst cameraSecondPosition = isMobile ? CAMERA_POSITIONS.secondMobile : CAMERA_POSITIONS.secondDesktop;\n\nexport const cameraHomePath = new THREE.CubicBezierCurve3(\n  cameraStartPosition,\n  cameraSecondPosition,\n  new THREE.Vector3(0.55675, 3, 0.45175),\n  new THREE.Vector3(0.55675, 0.5, 0.45175)\n);\n\n// Path Data Configuration\nexport const pathsData: { [key: string]: PathData } = {\n  pacmanHomePath: {\n    points: pacmanHomePathPoints,\n    color: 0xffff00,\n  },\n  ghost1HomePath: {\n    points: ghost1HomePathPoints,\n    color: 0xff0000,\n  },\n  ghost2HomePath: {\n    points: ghost2HomePathPoints,\n    color: 0xffa500,\n  },\n  ghost3HomePath: {\n    points: ghost3HomePathPoints,\n    color: 0xff69b4,\n  },\n  ghost4HomePath: {\n    points: ghost4HomePathPoints,\n    color: 0x32cd32,\n  },\n  ghost5HomePath: {\n    points: ghost5HomePathPoints,\n    color: 0xffdab9,\n  },\n  cameraPOVPath: {\n    points: cameraPOVPathPoints,\n    color: 0xffffff,\n  },\n  ghost1POVPath: {\n    points: ghost1POVPathPoints,\n    color: 0xff0000,\n  },\n  ghost2POVPath: {\n    points: ghost2POVPathPoints,\n    color: 0xffa500,\n  },\n  ghost3POVPath: {\n    points: ghost3POVPathPoints,\n    color: 0xff69b4,\n  },\n  ghost4POVPath: {\n    points: ghost4POVPathPoints,\n    color: 0x32cd32,\n  },\n  ghost5POVPath: {\n    points: ghost5POVPathPoints,\n    color: 0xffdab9,\n  },\n};\n\n// Path Mapping Functions\nexport function getPathsForSection(section: string): PathMapping {\n  const mapping: PathMapping = {};\n\n  if (section === \"home\") {\n    mapping.pacman = \"pacmanHomePath\";\n    mapping.ghost1 = \"ghost1HomePath\";\n    mapping.ghost2 = \"ghost2HomePath\";\n    mapping.ghost3 = \"ghost3HomePath\";\n    mapping.ghost4 = \"ghost4HomePath\";\n    mapping.ghost5 = \"ghost5HomePath\";\n  } else if (section === \"pov\") {\n    mapping.pacman = \"cameraPOVPath\";\n    mapping.ghost1 = \"ghost1POVPath\";\n    mapping.ghost2 = \"ghost2POVPath\";\n    mapping.ghost3 = \"ghost3POVPath\";\n    mapping.ghost4 = \"ghost4POVPath\";\n    mapping.ghost5 = \"ghost5POVPath\";\n  }\n  return mapping;\n}\n\n// Create all paths\nexport const paths: { [key: string]: THREE.CurvePath<THREE.Vector3> } = {};\n\n// Initialize paths\nObject.entries(pathsData).forEach(([key, data]) => {\n  paths[key] = createPath(data.points);\n});","import * as THREE from 'three';\n\n// Math Utilities\nexport function smoothStep(x: number): number {\n  return x * x * (3 - 2 * x);\n}\n\n// Path Utilities\nexport function findClosestProgressOnPath(\n  path: THREE.CurvePath<THREE.Vector3>, \n  targetPoint: THREE.Vector3, \n  samples: number = 2000\n): number {\n  if (!path || !targetPoint) return 0;\n\n  let closestProgress = 0;\n  let closestDistance = Infinity;\n\n  for (let i = 0; i < samples; i++) {\n    try {\n      const t = i / (samples - 1);\n      const pointOnPath = path.getPointAt(t);\n      if (!pointOnPath) continue;\n\n      const distance = pointOnPath.distanceTo(targetPoint);\n      if (distance < closestDistance) {\n        closestDistance = distance;\n        closestProgress = t;\n      }\n    } catch (error) {}\n  }\n\n  return closestProgress;\n}\n\n// Animation Position Utilities\nexport function getCurrentPacmanPosition(): { position: THREE.Vector3; tangent: THREE.Vector3 } | null {\n  // This would need to be implemented based on current animation state\n  // Placeholder implementation\n  return null;\n}\n\n// Debugging Utilities\nexport function debugGhosts(ghosts: any, scene: THREE.Scene): void {\n  console.log(\"=== GHOST DEBUG ===\");\n  \n  Object.entries(ghosts).forEach(([key, ghost]: [string, any]) => {\n    console.log(`${key}:`, {\n      exists: !!ghost,\n      visible: ghost?.visible,\n      inScene: scene.children.includes(ghost),\n      position: ghost?.position,\n      hasChildren: ghost?.children?.length || 0,\n      hasGeometry: !!ghost?.geometry,\n      material: !!ghost?.material\n    });\n  });\n  \n  console.log(\"Scene children count:\", scene.children.length);\n  console.log(\"Scene children:\", scene.children.map(child => child.type + \" - \" + (child.name || \"unnamed\")));\n}\n\n// Ensure ghosts are in scene\nexport function ensureGhostsInScene(ghosts: any, scene: THREE.Scene): void {\n  Object.entries(ghosts).forEach(([key, ghost]: [string, any]) => {\n    if (ghost && !scene.children.includes(ghost)) {\n      console.log(`Adding ${key} back to scene`);\n      scene.add(ghost);\n    }\n  });\n}\n\n// Rotation utilities\nexport function normalizeAngle(angle: number): number {\n  while (angle > Math.PI) angle -= 2 * Math.PI;\n  while (angle < -Math.PI) angle += 2 * Math.PI;\n  return angle;\n}\n\n// Vector utilities\nexport function lerpVector3(a: THREE.Vector3, b: THREE.Vector3, t: number): THREE.Vector3 {\n  return new THREE.Vector3().lerpVectors(a, b, t);\n}\n\n// Time utilities\nexport function debounce(func: Function, wait: number): Function {\n  let timeout: NodeJS.Timeout;\n  return function executedFunction(...args: any[]) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}","import * as THREE from 'three';\nimport { camera, startQuaternion, endQuaternion } from './camera';\nimport { scene, clock, canvas, finalSection, parentElements, renderer } from './scene';\nimport { ghosts, pacman, pacmanMixer } from './objects';\nimport { paths, cameraHomePath, getPathsForSection } from './paths';\nimport { animationState } from './events';\nimport { TriggerPosition } from './types';\nimport { CAMERA_CONFIG, ANIMATION_CONFIG, SPECIAL_POINTS } from './config';\nimport { smoothStep, findClosestProgressOnPath, ensureGhostsInScene } from './utils';\n\n\n// Use global gsap\nconst gsap = (window as any).gsap;\n\n// Register GSAP plugins (assuming external GSAP is loaded)\nif (typeof window !== 'undefined' && (window as any).gsap && (window as any).ScrollTrigger) {\n  (window as any).gsap.registerPlugin((window as any).ScrollTrigger);\n}\n\n// Trigger Positions for POV section\nexport const triggerPositions: { [key: string]: TriggerPosition } = {\n  ghost1: {\n    triggerPos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    ghostTextPos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    camTextPos: new THREE.Vector3(0.75775, 0.55, 0.8035),\n    endPosition: new THREE.Vector3(0.85825, 0.55, 0.8035),\n    parent: parentElements[0],\n    active: false,\n  },\n  ghost2: {\n    triggerPos: new THREE.Vector3(0.9085, 0.55, 0.8035),\n    ghostTextPos: new THREE.Vector3(0.95875, 0.55, 0.85375),\n    camTextPos: new THREE.Vector3(0.95875, 0.55, 0.904),\n    endPosition: new THREE.Vector3(0.95875, 0.55, 1.0045),\n    parent: parentElements[1],\n    active: false,\n  },\n  ghost3: {\n    triggerPos: new THREE.Vector3(0.75775, 0.55, 1.05475),\n    ghostTextPos: new THREE.Vector3(0.7075, 0.55, 1.0045),\n    camTextPos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    endPosition: new THREE.Vector3(0.55675, 0.55, 1.0045),\n    parent: parentElements[2],\n    active: false,\n  },\n  ghost4: {\n    triggerPos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    ghostTextPos: new THREE.Vector3(0.5065, 0.55, 1.0045),\n    camTextPos: new THREE.Vector3(0.45625, 0.55, 1.0045),\n    endPosition: new THREE.Vector3(0.35575, 0.55, 1.0045),\n    parent: parentElements[3],\n    active: false,\n  },\n  ghost5: {\n    triggerPos: new THREE.Vector3(0.15475, 0.55, 1.15525),\n    ghostTextPos: new THREE.Vector3(0.205, 0.55, 1.2055),\n    camTextPos: new THREE.Vector3(0.25525, 0.55, 1.2055),\n    endPosition: new THREE.Vector3(0.35575, 0.55, 1.2055),\n    parent: parentElements[4],\n    active: false,\n  },\n};\n\n// GSAP Animation Setup Functions\nexport function setupScrollIndicator(): void {\n  if (!gsap) return;\n  \n  gsap.set(\".cmp--scroll\", { display: \"block\" });\n  if (window.scrollY > 0) {\n    gsap.set(\".cmp--scroll\", { opacity: 1, y: 0 });\n  }\n  setTimeout(() => {\n    gsap.to(\".cmp--scroll\", {\n      opacity: 0,\n      y: \"1em\",\n      duration: 0.25,\n      onComplete: () => { gsap.set(\".cmp--scroll\", { display: \"none\" }); },\n      scrollTrigger: {\n        trigger: \".sc--home.sc\",\n        start: \"top top\",\n        toggleActions: \"play none none reverse\"\n      }\n    });\n  }, 10000);\n}\n\nexport function setupIntroHeader(): void {\n  if (!gsap) return;\n  \n  gsap.fromTo(\n    \".sc_h--intro\", { scale: 0, opacity: 0 },\n    {\n      scale: 1.5,\n      opacity: 0,\n      scrollTrigger: {\n        trigger: \".sc--intro\",\n        start: \"top top\",\n        end: \"center center\",\n        scrub: 0.5\n      },\n      ease: \"none\",\n      keyframes: [\n        { scale: 0, opacity: 0, duration: 0 },\n        { scale: 0.8, opacity: 1, duration: 0.3 },\n        { scale: 1.2, opacity: 1, duration: 0.4 },\n        { scale: 1.5, opacity: 0, duration: 0.3 }\n      ]\n    }\n  );\n}\n\nexport function initIntro(): void {\n  if (!gsap) return;\n  \n  setupIntroHeader();\n\n  gsap.timeline({\n    scrollTrigger: {\n      trigger: \".sc--intro\",\n      start: \"center center\",\n      end: \"bottom bottom\",\n      scrub: 0.5,\n      onEnter: () => {\n        gsap.killTweensOf(camera.position);\n        camera.position.set(0.55, -5, 0.45);\n        camera.updateMatrix();\n        camera.updateMatrixWorld();\n      }\n    }\n  }).fromTo(\n    \".sc_b--intro\", { scale: 0.5, opacity: 0 },\n    {\n      keyframes: [\n        { scale: 0.5, opacity: 0, duration: 0 },\n        { scale: 0.8, opacity: 1, duration: 0.3 },\n        { scale: 1.2, opacity: 1, duration: 0.4 },\n        { scale: 1.5, opacity: 0, duration: 0.3 }\n      ]\n    }\n  );\n}\n\nexport function initCameraHome(): void {\n  console.log('=== INIT CAMERA HOME DEBUG ===');\n  console.log('camera:', !!camera);\n  console.log('cameraHomePath:', !!cameraHomePath);\n  console.log('startQuaternion:', !!startQuaternion);\n  console.log('endQuaternion:', !!endQuaternion);\n  \n  if (!gsap || !camera || !cameraHomePath || !startQuaternion || !endQuaternion) {\n    console.warn(\"Camera animation variables not ready or GSAP not available\");\n    return;\n  }\n\n  gsap.timeline({\n    scrollTrigger: {\n      trigger: \".sc--home\",\n      start: \"top top\",\n      end: \"bottom top\",\n      scrub: 0.5\n    }\n  }).to({ t: 0 }, {\n    t: 1,\n    immediateRender: false,\n    onUpdate: function () {\n      const progress = this.targets()[0].t;\n      const cameraPoint = cameraHomePath.getPoint(progress);\n      camera.position.copy(cameraPoint);\n      camera.fov = CAMERA_CONFIG.originalFOV;\n\n      const currentQuaternion = new THREE.Quaternion();\n      currentQuaternion.slerpQuaternions(startQuaternion, endQuaternion, progress);\n      camera.quaternion.copy(currentQuaternion);\n\n      if (progress > 0.98) {\n        animationState.cachedHomeEndRotation = camera.quaternion.clone();\n      }\n\n      camera.updateProjectionMatrix();\n    }\n  });\n}\n\nexport function initEndScreen(): void {\n  if (!gsap || !finalSection) return;\n  \n  const tl = gsap.timeline({\n    scrollTrigger: {\n      trigger: \".sc--final\",\n      start: \"top top\",\n      end: \"bottom bottom\",\n      scrub: 0.5,\n      toggleActions: \"play none none reverse\",\n    },\n  });\n\n  tl.to(finalSection, {\n    opacity: 1,\n    ease: \"power2.inOut\",\n    onComplete: () => {\n      animationState.endScreenPassed = true;\n      animationState.startedInitEndScreen = false;\n    },\n  });\n}\n\nexport function setupPovTimeline(): void {\n  if (!gsap) return;\n  \n  gsap.timeline({\n    scrollTrigger: {\n      trigger: \".sc--pov\",\n      start: \"top bottom\",\n      end: \"bottom top\",\n      endTrigger: \".sc--final\",\n      scrub: 0.5,\n      toggleActions: \"play none none reverse\",\n      onLeave: handleLeavePOV,\n      onLeaveBack: handleLeavePOV,\n    },\n  }).to({ progress: 0 }, {\n    progress: 1,\n    immediateRender: false,\n    onStart: handleAnimationStart,\n    onUpdate: handleAnimationUpdate,\n    onReverseComplete: () => resetState(true),\n    onComplete: resetState,\n  });\n}\n\nexport function initPovAnimations(): void {\n  if (!ghosts || !camera || !paths.cameraPOVPath || !startQuaternion || !endQuaternion) {\n    console.warn(\"Animation resources not ready\");\n    return;\n  }\n\n  setupPovTimeline();\n}\n\n// Animation Handler Functions\nexport function handleAnimationStart(): void {\n  const pathMapping = getPathsForSection(\"pov\");\n  Object.entries(ghosts).forEach(([key, ghost]) => {\n    const pathKey = pathMapping[key];\n    if (paths[pathKey]) {\n      const position = paths[pathKey].getPointAt(0);\n      ghost.position.copy(position);\n      const tangent = paths[pathKey].getTangentAt(0).normalize();\n      ghost.lookAt(position.clone().add(tangent));\n\n      if (key !== \"pacman\") {\n        ghost.visible = false;\n      }\n    }\n  });\n}\n\nexport function handleAnimationUpdate(this: any): void {\n  const overallProgress = this.targets()[0].progress;\n  const cameraPosition = paths.cameraPOVPath.getPointAt(overallProgress);\n\n  if (animationState.previousCameraPosition) {\n    updateGhosts(cameraPosition);\n    updateCamera(overallProgress);\n    animationState.previousCameraPosition.copy(cameraPosition);\n  } else {\n    animationState.previousCameraPosition = cameraPosition.clone();\n  }\n}\n\nexport function handleLeavePOV(): void {\n  ensureGhostsInScene(ghosts, scene);\n  \n  Object.entries(ghosts).forEach(([key, ghost]) => {\n    if (key !== \"pacman\") {\n      if (triggerPositions[key]) {\n        triggerPositions[key].hasBeenTriggered = false;\n        triggerPositions[key].hasBeenDeactivated = false;\n        triggerPositions[key].active = false;\n      }\n\n      const parent = triggerPositions[key] ? triggerPositions[key].parent : null;\n      if (parent) {\n        parent.classList.add(\"hidden\");\n        const camText = parent.querySelector(\".cmp--pov-cam\") as HTMLElement;\n        if (camText) {\n          camText.classList.add(\"hidden\");\n          camText.style.opacity = \"0\";\n        }\n        (parent as HTMLElement).style.opacity = \"0\";\n      }\n\n      ghost.visible = true;\n      \n      if (ghost instanceof THREE.Mesh && ghost.material) {\n        if (Array.isArray(ghost.material)) {\n          ghost.material.forEach(mat => {\n            if (mat.transparent !== undefined) {\n              mat.opacity = 1;\n            }\n          });\n        } else {\n          if (ghost.material.transparent !== undefined) {\n            ghost.material.opacity = 1;\n          }\n        }\n      }\n      \n      ghost.scale.set(1, 1, 1);\n      \n      if (animationState.homeAnimationPositions[key]) {\n        ghost.position.copy(animationState.homeAnimationPositions[key].position);\n        const target = new THREE.Vector3().addVectors(\n          ghost.position,\n          animationState.homeAnimationPositions[key].lookAt\n        );\n        ghost.lookAt(target);\n      }\n    }\n  });\n\n  pacman.visible = true;\n  animationState.animationRunning = true;\n}\n\n// State Reset Functions\nexport function resetState(isReverse: boolean = false): void {\n  resetGhostsState();\n  resetCameraState(isReverse);\n}\n\nfunction resetGhostsState(): void {\n  Object.entries(ghosts).forEach(([key, ghost]) => {\n    if (key !== \"pacman\") {\n      ghost.scale.set(1, 1, 1);\n      \n      if (ghost instanceof THREE.Mesh && ghost.material) {\n        if (Array.isArray(ghost.material)) {\n          ghost.material.forEach(mat => {\n            if (mat.transparent !== undefined) {\n              mat.opacity = 1;\n            }\n          });\n        } else {\n          if (ghost.material.transparent !== undefined) {\n            ghost.material.opacity = 1;\n          }\n        }\n      }\n      \n      ghost.visible = false;\n\n      const { parent } = triggerPositions[key];\n      if (parent) {\n        const ghostText = parent as HTMLElement;\n        const camText = parent.querySelector(\".cmp--pov-cam\") as HTMLElement;\n\n        ghostText.classList.add(\"hidden\");\n        if (camText) {\n          camText.classList.add(\"hidden\");\n        }\n\n        triggerPositions[key].active = false;\n      }\n    }\n  });\n}\n\nfunction resetCameraState(isReverse: boolean = false): void {\n  pacman.visible = true;\n  animationState.rotationStarted = false;\n  animationState.cachedStartYAngle = null;\n  animationState.startEndProgress = 0;\n  animationState.startedInitEndScreen = false;\n\n  if (!isReverse) {\n    canvas.style.display = \"none\";\n    camera.lookAt(SPECIAL_POINTS.finalLookAt);\n    animationState.endScreenPassed = true;\n  } else {\n    animationState.endScreenPassed = false;\n  }\n}\n\n// Camera and Ghost Update Functions\nfunction updateCamera(progress: number): void {\n  const position = paths.cameraPOVPath.getPointAt(progress);\n  camera.position.copy(position);\n  camera.fov = CAMERA_CONFIG.wideFOV;\n\n  const tangent = paths.cameraPOVPath.getTangentAt(progress).normalize();\n  const defaultLookAt = position.clone().add(tangent);\n\n  handleCameraPhases(progress, position, defaultLookAt);\n  camera.updateProjectionMatrix();\n}\n\nfunction handleCameraPhases(progress: number, position: THREE.Vector3, defaultLookAt: THREE.Vector3): void {\n  if (canvas.style.display === \"none\" && progress < 0.99) {\n    canvas.style.display = \"block\";\n  }\n  \n  if (progress === 0) {\n    camera.lookAt(new THREE.Vector3(camera.position.x, 2, camera.position.z));\n  } else {\n    camera.lookAt(defaultLookAt);\n  }\n}\n\nfunction updateGhosts(cameraPosition: THREE.Vector3): void {\n  const pathMapping = getPathsForSection(\"pov\");\n\n  Object.entries(ghosts).forEach(([key, ghost]) => {\n    if (key === \"pacman\") return;\n\n    const pathKey = pathMapping[key];\n    if (paths[pathKey] && triggerPositions[key]) {\n      updateGhost(key, ghost, pathKey, cameraPosition);\n    }\n  });\n}\n\nfunction updateGhost(key: string, ghost: THREE.Object3D, pathKey: string, cameraPosition: THREE.Vector3): void {\n  const { triggerPos, ghostTextPos, camTextPos, endPosition, parent } = triggerPositions[key];\n  if (!triggerPos || !endPosition || !parent) return;\n\n  const ghostText = parent as HTMLElement;\n  const camText = parent.querySelector(\".cmp--pov-cam\") as HTMLElement;\n  if (!camText) return;\n\n  ghost.scale.set(0.5, 0.5, 0.5);\n\n  // Initialize trigger data if needed\n  if (triggerPositions[key].hasBeenTriggered === undefined) {\n    triggerPositions[key].hasBeenTriggered = false;\n    triggerPositions[key].hasBeenDeactivated = false;\n    triggerPositions[key].triggerCameraProgress = null;\n    triggerPositions[key].ghostTextCameraProgress = null;\n    triggerPositions[key].camTextCameraProgress = null;\n    triggerPositions[key].endCameraProgress = null;\n    triggerPositions[key].currentPathT = 0;\n    triggerPositions[key].ghostTextOpacity = 0;\n    triggerPositions[key].camTextOpacity = 0;\n    triggerPositions[key].lastProgress = 0;\n\n    ghost.visible = false;\n    ghostText.classList.add(\"hidden\");\n    camText.classList.add(\"hidden\");\n    ghostText.style.opacity = \"0\";\n    camText.style.opacity = \"0\";\n  }\n\n  // Calculate camera progress on POV path\n  const currentCameraProgress = findClosestProgressOnPath(paths.cameraPOVPath, cameraPosition, 800);\n\n  // Calculate path progress markers if not done\n  if (triggerPositions[key].triggerCameraProgress === null) {\n    triggerPositions[key].triggerCameraProgress = findClosestProgressOnPath(paths.cameraPOVPath, triggerPos, 800);\n    triggerPositions[key].ghostTextCameraProgress = ghostTextPos ? \n      findClosestProgressOnPath(paths.cameraPOVPath, ghostTextPos, 800) : \n      triggerPositions[key].triggerCameraProgress!;\n    triggerPositions[key].camTextCameraProgress = camTextPos ? \n      findClosestProgressOnPath(paths.cameraPOVPath, camTextPos, 800) : \n      triggerPositions[key].ghostTextCameraProgress!;\n    triggerPositions[key].endCameraProgress = findClosestProgressOnPath(paths.cameraPOVPath, endPosition, 800);\n  }\n\n  const triggerProgress = triggerPositions[key].triggerCameraProgress!;\n  const ghostTextProgress = triggerPositions[key].ghostTextCameraProgress!;\n  const camTextProgress = triggerPositions[key].camTextCameraProgress!;\n  const endProgress = triggerPositions[key].endCameraProgress!;\n\n  // Handle ghost visibility and position\n  if (currentCameraProgress >= triggerProgress && currentCameraProgress <= endProgress) {\n    if (!ghost.visible) {\n      ghost.visible = true;\n      triggerPositions[key].hasBeenTriggered = true;\n    }\n\n    const normalizedProgress = (currentCameraProgress - triggerProgress) / (endProgress - triggerProgress);\n    let ghostProgress = Math.max(0, Math.min(1, normalizedProgress));\n\n    // Smooth parameter transition\n    if (triggerPositions[key].currentPathT === undefined) {\n      triggerPositions[key].currentPathT = ghostProgress;\n    } else {\n      const smoothingFactor = 0.1;\n      triggerPositions[key].currentPathT! += (ghostProgress - triggerPositions[key].currentPathT!) * smoothingFactor;\n    }\n\n    ghostProgress = triggerPositions[key].currentPathT!;\n\n    // Update ghost position\n    const pathPoint = paths[pathKey].getPointAt(ghostProgress);\n    ghost.position.copy(pathPoint);\n\n    // Update ghost rotation\n    const tangent = paths[pathKey].getTangentAt(ghostProgress).normalize();\n    const lookAtPoint = ghost.position.clone().add(tangent);\n\n    if (!triggerPositions[key].currentRotation) {\n      triggerPositions[key].currentRotation = new THREE.Quaternion();\n      ghost.getWorldQuaternion(triggerPositions[key].currentRotation!);\n    }\n    \n    const targetQuaternion = new THREE.Quaternion();\n    const lookAtMatrix = new THREE.Matrix4().lookAt(\n      ghost.position,\n      lookAtPoint,\n      new THREE.Vector3(0, 1, 0)\n    );\n    targetQuaternion.setFromRotationMatrix(lookAtMatrix);\n\n    const rotationSmoothingFactor = 0.15;\n    triggerPositions[key].currentRotation!.slerp(targetQuaternion, rotationSmoothingFactor);\n    ghost.quaternion.copy(triggerPositions[key].currentRotation!);\n\n    // Fade out at end\n    if (ghostProgress > 0.9) {\n      const material = (ghost as THREE.Mesh).material;\n      if (material && !Array.isArray(material)) {\n        material.opacity = 1 - (ghostProgress - 0.9) / 0.1;\n      }\n    } else {\n      const material = (ghost as THREE.Mesh).material;\n      if (material && !Array.isArray(material)) {\n        material.opacity = 1;\n      }\n    }\n  } else {\n    ghost.visible = false;\n    triggerPositions[key].hasBeenTriggered = false;\n  }\n\n  // Handle text visibility with proper timing\n  const sectionLength = endProgress - triggerProgress;\n\n  // Ghost text timing\n  const fadeInStart = ghostTextProgress;\n  const fadeInEnd = fadeInStart + (sectionLength * 0.07);\n  const stayVisibleUntil = endProgress - (sectionLength * 0.15);\n  const fadeOutEnd = endProgress;\n\n  let targetGhostOpacity = 0;\n\n  if (currentCameraProgress >= fadeInStart && currentCameraProgress < fadeInEnd) {\n    const fadeProgress = (currentCameraProgress - fadeInStart) / (fadeInEnd - fadeInStart);\n    targetGhostOpacity = fadeProgress;\n  } else if (currentCameraProgress >= fadeInEnd && currentCameraProgress < stayVisibleUntil) {\n    targetGhostOpacity = 1.0;\n  } else if (currentCameraProgress >= stayVisibleUntil && currentCameraProgress <= fadeOutEnd) {\n    const fadeProgress = (currentCameraProgress - stayVisibleUntil) / (fadeOutEnd - stayVisibleUntil);\n    targetGhostOpacity = 1.0 - fadeProgress;\n  }\n\n  // CAM text timing\n  const camFadeInStart = camTextProgress;\n  const camFadeInEnd = camFadeInStart + (sectionLength * 0.07);\n  const camStayVisibleUntil = stayVisibleUntil;\n\n  let targetCamOpacity = 0;\n\n  if (currentCameraProgress >= camFadeInStart && currentCameraProgress < camFadeInEnd) {\n    const fadeProgress = (currentCameraProgress - camFadeInStart) / (camFadeInEnd - camFadeInStart);\n    targetCamOpacity = fadeProgress * 0.8;\n  } else if (currentCameraProgress >= camFadeInEnd && currentCameraProgress < camStayVisibleUntil) {\n    targetCamOpacity = 0.8;\n  } else if (currentCameraProgress >= camStayVisibleUntil && currentCameraProgress <= fadeOutEnd) {\n    const fadeProgress = (currentCameraProgress - camStayVisibleUntil) / (fadeOutEnd - camStayVisibleUntil);\n    targetCamOpacity = 0.8 * (1.0 - fadeProgress);\n  }\n\n  // Update opacities\n  const fadeInSpeed = 0.2;\n  const fadeOutSpeed = 0.1;\n\n  if (targetGhostOpacity > (triggerPositions[key].ghostTextOpacity || 0)) {\n    triggerPositions[key].ghostTextOpacity = (triggerPositions[key].ghostTextOpacity || 0) + (targetGhostOpacity - (triggerPositions[key].ghostTextOpacity || 0)) * fadeInSpeed;\n  } else {\n    triggerPositions[key].ghostTextOpacity = (triggerPositions[key].ghostTextOpacity || 0) + (targetGhostOpacity - (triggerPositions[key].ghostTextOpacity || 0)) * fadeOutSpeed;\n  }\n\n  if (targetCamOpacity > (triggerPositions[key].camTextOpacity || 0)) {\n    triggerPositions[key].camTextOpacity = (triggerPositions[key].camTextOpacity || 0) + (targetCamOpacity - (triggerPositions[key].camTextOpacity || 0)) * fadeInSpeed;\n  } else {\n    triggerPositions[key].camTextOpacity = (triggerPositions[key].camTextOpacity || 0) + (targetCamOpacity - (triggerPositions[key].camTextOpacity || 0)) * fadeOutSpeed;\n  }\n\n  // Update DOM\n  const ghostTextOpacity = Math.max(0, Math.min(1, Math.round((triggerPositions[key].ghostTextOpacity || 0) * 1000) / 1000));\n  const camTextOpacity = Math.max(0, Math.min(1, Math.round((triggerPositions[key].camTextOpacity || 0) * 1000) / 1000));\n\n  if (ghostTextOpacity > 0.01) {\n    if (ghostText.classList.contains(\"hidden\")) {\n      ghostText.classList.remove(\"hidden\");\n    }\n    ghostText.style.opacity = ghostTextOpacity.toString();\n  } else if (ghostTextOpacity <= 0.01 && !ghostText.classList.contains(\"hidden\")) {\n    ghostText.classList.add(\"hidden\");\n    ghostText.style.opacity = \"0\";\n  }\n\n  if (camTextOpacity > 0.01) {\n    if (camText.classList.contains(\"hidden\")) {\n      camText.classList.remove(\"hidden\");\n    }\n    camText.style.opacity = camTextOpacity.toString();\n  } else if (camTextOpacity <= 0.01 && !camText.classList.contains(\"hidden\")) {\n    camText.classList.add(\"hidden\");\n    camText.style.opacity = \"0\";\n  }\n\n  triggerPositions[key].lastProgress = currentCameraProgress;\n}\n\n// Main Animation Loop\nexport function animate(): void {\n  const currentTime = Date.now();\n  const adjustedTime = currentTime - animationState.timeOffset;\n\n  if (animationState.animationRunning) {\n    const t = ((adjustedTime / 6000) % 6) / 6;\n    const pathMapping = getPathsForSection(\"home\");\n\n    if (!pacman.visible) {\n      pacman.visible = true;\n    }\n\n    const delta = clock.getDelta();\n    if (pacmanMixer) {\n      pacmanMixer.update(delta);\n    }\n\n    Object.entries(ghosts).forEach(([key, ghost]) => {\n      const pathKey = pathMapping[key];\n      if (paths[pathKey]) {\n        const position = paths[pathKey].getPointAt(t);\n        ghost.position.copy(position);\n        const tangent = paths[pathKey].getTangentAt(t).normalize();\n        ghost.lookAt(position.clone().add(tangent));\n\n        if (key === \"pacman\") {\n          const zRotation = Math.atan2(tangent.x, tangent.z);\n\n          if ((ghost as any).previousZRotation === undefined) {\n            (ghost as any).previousZRotation = zRotation;\n          }\n\n          let rotationDiff = zRotation - (ghost as any).previousZRotation;\n\n          if (rotationDiff > Math.PI) {\n            rotationDiff -= 2 * Math.PI;\n          } else if (rotationDiff < -Math.PI) {\n            rotationDiff += 2 * Math.PI;\n          }\n\n          const smoothFactor = 0.1;\n          const smoothedRotation = (ghost as any).previousZRotation + rotationDiff * smoothFactor;\n\n          (ghost as any).previousZRotation = smoothedRotation;\n          ghost.rotation.set(Math.PI / 2, Math.PI, smoothedRotation + Math.PI / 2);\n        }\n      }\n    });\n  }\n\n  // Always render\n  renderer.render(scene, camera);\n  requestAnimationFrame(animate);\n}\n\n// Initialize GSAP Animations\nexport function initGsap(): void {\n  // ADD THESE DEBUG LOGS:\n  console.log('=== GSAP DEBUG ===');\n  console.log('GSAP available:', !!gsap);\n  console.log('ScrollTrigger available:', !!(window as any).ScrollTrigger);\n  console.log('cameraHomePath available:', !!cameraHomePath);\n  console.log('camera available:', !!camera);\n  console.log('startQuaternion available:', !!startQuaternion);\n  console.log('endQuaternion available:', !!endQuaternion);\n  \n  // Only initialize if gsap is available\n  if (!gsap) {\n    console.warn('GSAP not available, skipping scroll animations');\n    return;\n  }\n  \n  setupScrollIndicator();\n  initIntro();\n  initCameraHome();\n  initPovAnimations();\n}","import { initRenderer, setupLighting, renderer, scene } from './scene';\nimport { initCamera, setupCameraResize, camera } from './camera';\nimport { loadModel } from './objects';\nimport { initEventHandlers, animationState } from './events';\nimport { initGsap, animate } from './animations';\n\n// Main Application Class\nclass CAMApplication {\n  private initialized: boolean = false;\n\n  constructor() {\n    this.init();\n  }\n\n  private async init(): Promise<void> {\n    try {\n      console.log('Initializing CAM 3D Animation...');\n\n      // Initialize core systems\n      this.initCore();\n\n      // Load 3D assets\n      await this.loadAssets();\n\n      // Setup animations and interactions\n      this.setupAnimations();\n\n      // Start the application immediately\n      this.start();\n\n      this.initialized = true;\n      console.log('CAM 3D Animation initialized successfully');\n\n    } catch (error) {\n      console.error('Failed to initialize CAM 3D Animation:', error);\n      // Still start animation loop even if model fails to load\n      this.startBasicAnimation();\n    }\n  }\n\n  private initCore(): void {\n    // Initialize renderer and scene\n    initRenderer();\n    setupLighting();\n\n    // Initialize camera\n    initCamera();\n    setupCameraResize();\n\n    // Setup event handlers\n    initEventHandlers();\n  }\n\n  private async loadAssets(): Promise<void> {\n    console.log('Loading 3D assets...');\n    await loadModel();\n    console.log('3D assets loaded successfully');\n  }\n\n  private setupAnimations(): void {\n    console.log('Setting up animations...');\n    \n    // Initialize GSAP animations with a delay to ensure DOM is ready\n    setTimeout(() => {\n      initGsap();\n    }, 200);\n  }\n\n  private start(): void {\n    console.log('Starting animation loop...');\n    \n    // Start the main animation loop immediately\n    this.startBasicAnimation();\n    \n    // Set initial animation state\n    animationState.animationRunning = window.scrollY === 0;\n  }\n\n  private startBasicAnimation(): void {\n    // Start animation loop immediately like in original\n    animate();\n    animationState.animationRunning = window.scrollY === 0;\n    \n    // Render the initial frame\n    renderer.render(scene, camera);\n  }\n\n  public getInitializationStatus(): boolean {\n    return this.initialized;\n  }\n\n  public restart(): void {\n    if (this.initialized) {\n      animationState.animationRunning = true;\n      animate();\n    }\n  }\n\n  public pause(): void {\n    animationState.animationRunning = false;\n  }\n\n  public resume(): void {\n    animationState.animationRunning = true;\n  }\n}\n\n// Initialize the application when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n  const app = new CAMApplication();\n  \n  // Expose app instance to global scope for debugging\n  (window as any).CAMApp = app;\n});\n\n// Also initialize immediately if DOM is already loaded\nif (document.readyState === 'loading') {\n  // DOM still loading, wait for DOMContentLoaded\n} else {\n  // DOM already loaded\n  const app = new CAMApplication();\n  (window as any).CAMApp = app;\n}\n\n/* Handle page visibility changes\ndocument.addEventListener('visibilitychange', () => {\n  if (document.hidden) {\n    animationState.animationRunning = false;\n  } else {\n    animationState.animationRunning = window.scrollY === 0;\n  }\n});\n*/\n\n// Export for external use\nexport { CAMApplication };"],"names":["THREE","isMobile","window","innerWidth","CAMERA_POSITIONS","startMobile","startDesktop","secondMobile","secondDesktop","mobileLookAt","desktopLookAt","startPosition","lookAtPosition","SHADER_CONFIG","SPECIAL_POINTS","homeEndPoint","povStartPoint1","povStartPoint2","startRotationPoint","endRotationPoint","targetLookAt","finalLookAt","reverseFinalLookAt","scene","renderer","antialias","alpha","powerPreference","precision","container","document","querySelector","clock","setPixelRatio","pixelRatio","Math","min","devicePixelRatio","setSize","clientWidth","clientHeight","canvas","parentElements","querySelectorAll","camera","startQuaternion","quaternion","clone","endQuaternion","setFromEuler","setCamera","lookAt","x","y","z","split","map","Number","updateProjectionMatrix","updateMatrix","updateMatrixWorld","mazeTexture","load","mazeMaterial","matcap","topMaterial","color","metalness","roughness","envMapIntensity","ghostMaterial","opacity","transparent","depthWrite","depthTest","blending","side","transmission","floorMaterial","pacmanMaterials","vertexShader","fragmentShader","uniforms","mixValue","value","blue","white","default","materialMap","CAM_Pacman_Backframe","CAM_Pacman_Logo_1","CAM_Pacman_Logo_2","loader","Array","fill","pacmanMixer","pacman","add","ghosts","ghost1","ghost2","ghost3","ghost4","ghost5","Object","values","forEach","ghost","ghostContainers","Ghost_EUR","Ghost_CHF","Ghost_YEN","Ghost_USD","Ghost_GBP","animationRunning","savedPositions","pauseTime","timeOffset","oldTop","scrollTimeout","homePositionsSaved","homeAnimationPositions","isInPovSection","isMovingForward","previousCameraPosition","cachedStartYAngle","animationStarted","rotationStarted","startedInitEndScreen","endScreenPassed","startEndProgress","cachedHomeEndRotation","pacmanHomePathPoints","pos","type","curveType","ghost1HomePathPoints","ghost2HomePathPoints","ghost3HomePathPoints","ghost4HomePathPoints","ghost5HomePathPoints","cameraPOVPathPoints","ghost1POVPathPoints","ghost2POVPathPoints","ghost3POVPathPoints","ghost4POVPathPoints","ghost5POVPathPoints","cameraStartPosition","cameraSecondPosition","cameraHomePath","pathsData","pacmanHomePath","points","ghost1HomePath","ghost2HomePath","ghost3HomePath","ghost4HomePath","ghost5HomePath","cameraPOVPath","ghost1POVPath","ghost2POVPath","ghost3POVPath","ghost4POVPath","ghost5POVPath","getPathsForSection","section","mapping","paths","findClosestProgressOnPath","path","targetPoint","samples","closestProgress","closestDistance","Infinity","i","t","pointOnPath","getPointAt","distance","distanceTo","error","entries","key","data","pathPoints","length","current","next","line","midPoint","curve","createPath","gsap","ScrollTrigger","registerPlugin","triggerPositions","triggerPos","ghostTextPos","camTextPos","endPosition","parent","active","handleAnimationStart","pathMapping","pathKey","position","copy","tangent","getTangentAt","normalize","visible","handleAnimationUpdate","overallProgress","this","targets","progress","cameraPosition","ghostText","camText","scale","set","undefined","hasBeenTriggered","hasBeenDeactivated","triggerCameraProgress","ghostTextCameraProgress","camTextCameraProgress","endCameraProgress","currentPathT","ghostTextOpacity","camTextOpacity","lastProgress","classList","style","currentCameraProgress","triggerProgress","ghostTextProgress","camTextProgress","endProgress","normalizedProgress","ghostProgress","max","smoothingFactor","pathPoint","lookAtPoint","currentRotation","getWorldQuaternion","targetQuaternion","lookAtMatrix","setFromRotationMatrix","rotationSmoothingFactor","slerp","material","isArray","sectionLength","fadeInEnd","stayVisibleUntil","targetGhostOpacity","camFadeInEnd","targetCamOpacity","round","contains","remove","toString","updateGhost","updateGhosts","fov","defaultLookAt","display","handleCameraPhases","updateCamera","handleLeavePOV","children","includes","console","log","ensureGhostsInScene","mat","target","addVectors","resetState","isReverse","resetCameraState","animate","adjustedTime","Date","now","delta","getDelta","update","zRotation","atan2","previousZRotation","rotationDiff","PI","smoothFactor","smoothedRotation","rotation","render","requestAnimationFrame","initGsap","scrollY","setTimeout","to","duration","onComplete","scrollTrigger","trigger","start","toggleActions","fromTo","end","scrub","ease","keyframes","timeline","onEnter","killTweensOf","immediateRender","onUpdate","cameraPoint","getPoint","currentQuaternion","slerpQuaternions","warn","endTrigger","onLeave","onLeaveBack","onStart","onReverseComplete","CAMApplication","constructor","initialized","init","initCore","loadAssets","setupAnimations","startBasicAnimation","shadowMap","enabled","appendChild","domElement","addEventListener","ambientLight","directionalLight","shadow","mapSize","width","height","left","right","top","bottom","near","far","bias","radius","castShadow","setupLighting","aspect","innerHeight","getWorldDirection","clearTimeout","Promise","resolve","reject","gltf","model","pacmanNames","traverse","child","name","subChild","push","morphTargetInfluences","morphTargetDictionary","userData","skipAnimation","item","pacmanActions","animations","clip","tracks","some","track","action","clipAction","getMixer","e","getRoot","obj","updateMorphTargets","setEffectiveWeight","play","processPacmanObject","ghostContainer","ghostGroup","startsWith","processGhostObject","clonedChild","receiveShadow","node","getInitializationStatus","restart","pause","resume","app","CAMApp","readyState"],"sourceRoot":""}