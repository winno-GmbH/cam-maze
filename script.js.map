{"version":3,"file":"script.js","mappings":"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","sources":["webpack://cam-3d-animation/external var \"THREE\"","webpack://cam-3d-animation/./src/config.ts","webpack://cam-3d-animation/./src/scene.ts","webpack://cam-3d-animation/./src/camera.ts","webpack://cam-3d-animation/./src/materials.ts","webpack://cam-3d-animation/./src/objects.ts","webpack://cam-3d-animation/./src/main.ts"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = THREE;","import * as THREE from \"three\";\nimport { TriggerPosition } from \"./types\";\nimport { parentElements } from \"./scene\";\n\n// Camera Configuration\nexport const CAMERA_CONFIG = {\n  originalFOV: 50,\n  wideFOV: 80,\n  near: 0.001,\n  far: 1000,\n};\n\n// Mobile Detection\nexport const isMobile = window.innerWidth < 768;\n\n// Camera Positions\nexport const CAMERA_POSITIONS = {\n  startMobile: new THREE.Vector3(0.5, 2.5, 2.5),\n  startDesktop: new THREE.Vector3(-2, 2.5, 2),\n  secondMobile: new THREE.Vector3(0.5, 2.5, 2),\n  secondDesktop: new THREE.Vector3(-1.5, 3, 2),\n  mobileLookAt: new THREE.Vector3(0.5, 0.5, -1.5),\n  desktopLookAt: new THREE.Vector3(-1.25, 0.5, 0.25),\n};\n\n// Get correct positions based on device\nexport const startPosition = isMobile\n  ? CAMERA_POSITIONS.startMobile\n  : CAMERA_POSITIONS.startDesktop;\nexport const secondPosition = isMobile\n  ? CAMERA_POSITIONS.secondMobile\n  : CAMERA_POSITIONS.secondDesktop;\nexport const lookAtPosition = isMobile\n  ? CAMERA_POSITIONS.mobileLookAt\n  : CAMERA_POSITIONS.desktopLookAt;\n\n// Animation Configuration\nexport const ANIMATION_CONFIG = {\n  GHOST_TEXT_START: 0.2,\n  CAM_TEXT_START: 0.3,\n  FADE_OUT_START: 0.8,\n  TRIGGER_DISTANCE: 0.02,\n  startEndScreenSectionProgress: 0.8,\n  rotationStartingPoint: 0.973,\n  scrollDebounceDelay: 0,\n};\n\n// Shader Configuration\nexport const SHADER_CONFIG = {\n  vertexShader: `\n    varying vec3 vPosition;\n    void main() {\n      vPosition = position;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n  `,\n  fragmentShader: `\n    varying vec3 vPosition;\n    uniform float mixValue;\n    void main() {\n      float factor = (vPosition.y + 1.0) / 2.0;\n      vec3 colorA = vec3(0.0, 0.0, 1.0);\n      vec3 colorB = vec3(0.0, 1.0, 1.0);\n      vec3 colorC = vec3(1.0, 0.0, 0.0);\n      vec3 colorD = vec3(1.0, 1.0, 0.0);\n      \n      vec3 gradientA = mix(colorA, colorB, factor);\n      vec3 gradientB = mix(colorC, colorD, factor);\n      \n      vec3 finalColor = mix(gradientA, gradientB, mixValue);\n      gl_FragColor = vec4(finalColor, 1.0);\n    }\n  `,\n};\n\n// Asset URLs\nexport const ASSETS = {\n  mazeTexture: \"https://c-am.b-cdn.net/CAM/matcap24.png\",\n  mazeModel: \"https://c-am.b-cdn.net/CAM/c-am-assets-3.glb\",\n};\n\n// DOM Selectors\nexport const SELECTORS = {\n  mazeContainer: \".el--home-maze.el\",\n  scrollComponent: \".cmp--scroll\",\n  introSection: \".sc--intro\",\n  homeSection: \".sc--home\",\n  povSection: \".sc--pov\",\n  finalSection: \".sc--final.sc\",\n  parentElements: \".cmp--pov.cmp\",\n};\n\n// Special Points\nexport const SPECIAL_POINTS = {\n  homeEndPoint: new THREE.Vector3(0.55675, 0.5, 0.45175),\n  povStartPoint1: new THREE.Vector3(0.55675, -5, 0.45175),\n  povStartPoint2: new THREE.Vector3(0.55675, -2.5, 0.45175),\n  startRotationPoint: new THREE.Vector3(0.55675, 0.55, 1.306),\n  endRotationPoint: new THREE.Vector3(-0.14675, 1, 1.8085),\n  targetLookAt: new THREE.Vector3(0.55675, 0.1, 1.306),\n  finalLookAt: new THREE.Vector3(-0.14675, 0, 1.8085),\n  reverseFinalLookAt: new THREE.Vector3(\n    7.395407041377711,\n    0.9578031302345096,\n    -4.312450290270135\n  ),\n};\n\n/*export const triggerPositions: { [key: string]: TriggerPosition } = {\n  ghost1: {\n    triggerPos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    ghostTextPos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    camTextPos: new THREE.Vector3(0.75775, 0.55, 0.8035),\n    endPosition: new THREE.Vector3(0.85825, 0.55, 0.8035),\n    parent: parentElements[0],\n    active: false,\n  },\n  ghost2: {\n    triggerPos: new THREE.Vector3(0.9085, 0.55, 0.8035),\n    ghostTextPos: new THREE.Vector3(0.95875, 0.55, 0.85375),\n    camTextPos: new THREE.Vector3(0.95875, 0.55, 0.904),\n    endPosition: new THREE.Vector3(0.95875, 0.55, 1.0045),\n    parent: parentElements[1],\n    active: false,\n  },\n  ghost3: {\n    triggerPos: new THREE.Vector3(0.75775, 0.55, 1.05475),\n    ghostTextPos: new THREE.Vector3(0.7075, 0.55, 1.0045),\n    camTextPos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    endPosition: new THREE.Vector3(0.55675, 0.55, 1.0045),\n    parent: parentElements[2],\n    active: false,\n  },\n  ghost4: {\n    triggerPos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    ghostTextPos: new THREE.Vector3(0.5065, 0.55, 1.0045),\n    camTextPos: new THREE.Vector3(0.45625, 0.55, 1.0045),\n    endPosition: new THREE.Vector3(0.35575, 0.55, 1.0045),\n    parent: parentElements[3],\n    active: false,\n  },\n  ghost5: {\n    triggerPos: new THREE.Vector3(0.15475, 0.55, 1.15525),\n    ghostTextPos: new THREE.Vector3(0.205, 0.55, 1.2055),\n    camTextPos: new THREE.Vector3(0.25525, 0.55, 1.2055),\n    endPosition: new THREE.Vector3(0.35575, 0.55, 1.2055),\n    parent: parentElements[4],\n    active: false,\n  },\n};*/\n\n// Previous positions tracking\nconst previousPositions: { [key: string]: any } = {\n  ghost1: null,\n  ghost2: null,\n  ghost3: null,\n  ghost4: null,\n  ghost5: null,\n};\n","import * as THREE from 'three';\nimport { SELECTORS, isMobile } from './config';\n\n// Scene Setup\nexport const scene = new THREE.Scene();\n\n// Renderer Setup\nexport const renderer = new THREE.WebGLRenderer({\n  antialias: true,\n  alpha: true,\n  powerPreference: 'high-performance',\n  precision: 'highp'\n});\n\n// Container\nexport const container = document.querySelector(SELECTORS.mazeContainer) as HTMLElement;\n\n// Clock for animations\nexport const clock = new THREE.Clock();\n\n// Anti-aliasing Enhancement\nfunction enhanceAntiAliasing(): void {\n  if (isMobile) {\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n  } else {\n    renderer.setPixelRatio(window.devicePixelRatio);\n  }\n  renderer.shadowMap.enabled = true;\n  renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n}\n\n// Pixel Ratio Setup - ADDED to match backup.js\nfunction setPixelRatio(): void {\n  const pixelRatio = Math.min(window.devicePixelRatio, isMobile ? 2 : 3);\n  renderer.setPixelRatio(pixelRatio);\n  renderer.setSize(container.clientWidth, container.clientHeight);\n}\n\n// Initialize Renderer - FIXED to match backup.js\nexport function initRenderer(): void {\n  enhanceAntiAliasing();\n  renderer.shadowMap.enabled = true;\n  renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n  renderer.setSize(container.clientWidth, container.clientHeight);\n  container.appendChild(renderer.domElement);\n\n  // ADD these event listeners to match backup.js:\n  window.addEventListener(\"load\", setPixelRatio);\n  window.addEventListener(\"resize\", setPixelRatio);\n}\n\n// Lighting Setup\nexport function setupLighting(): void {\n  const ambientLight = new THREE.AmbientLight(0xffffff);\n  scene.add(ambientLight);\n\n  const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n  scene.add(directionalLight);\n  directionalLight.position.set(-5, 15, 10);\n  directionalLight.shadow.mapSize.width = 4096;\n  directionalLight.shadow.mapSize.height = 4096;\n  directionalLight.shadow.camera.left = -20;\n  directionalLight.shadow.camera.right = 20;\n  directionalLight.shadow.camera.top = 20;\n  directionalLight.shadow.camera.bottom = -20;\n  directionalLight.shadow.camera.near = 0.1;\n  directionalLight.shadow.camera.far = 50;\n  directionalLight.shadow.bias = -0.001;\n  directionalLight.shadow.radius = 3;\n  directionalLight.castShadow = true;\n}\n\n// Canvas and DOM Elements\nexport const canvas = document.querySelector(\"canvas\") as HTMLCanvasElement;\nexport const finalSection = document.querySelector(SELECTORS.finalSection) as HTMLElement;\nexport const finalContainer = finalSection?.querySelector(\".cr--final.cr\") as HTMLElement;\nexport const parentElements = document.querySelectorAll(SELECTORS.parentElements) as NodeListOf<Element>;","import * as THREE from \"three\";\nimport {\n  CAMERA_CONFIG,\n  startPosition,\n  secondPosition,\n  lookAtPosition,\n} from \"./config\";\nimport { container } from \"./scene\";\n\n// Camera Setup\nexport const camera = new THREE.PerspectiveCamera(\n  CAMERA_CONFIG.originalFOV,\n  container.clientWidth / container.clientHeight,\n  CAMERA_CONFIG.near,\n  CAMERA_CONFIG.far\n);\n\n// Initialize Camera\nexport function initCamera(): void {\n  camera.position.copy(startPosition);\n  camera.lookAt(lookAtPosition);\n}\n\n// Camera Quaternions\nexport const startQuaternion = camera.quaternion.clone();\nexport const endQuaternion = new THREE.Quaternion().setFromEuler(\n  new THREE.Euler(-1.5708, 0, 0)\n);\n\n// Camera Utility Functions\nexport function getCameraLookAtPoint(): THREE.Vector3 {\n  const direction = new THREE.Vector3(0, 0, -1);\n  direction.applyQuaternion(camera.quaternion);\n  const lookAtPoint = new THREE.Vector3();\n  lookAtPoint.copy(camera.position).add(direction.multiplyScalar(10));\n  return lookAtPoint;\n}\n\n// Global camera setter for debugging\n(window as any).setCamera = function (lookAt: string | THREE.Vector3): void {\n  if (typeof lookAt === \"string\") {\n    const [x, y, z] = lookAt.split(\",\").map(Number);\n    lookAt = new THREE.Vector3(x, y, z);\n  }\n  camera.lookAt(lookAt);\n  camera.updateProjectionMatrix();\n  camera.updateMatrix();\n  camera.updateMatrixWorld();\n};\n\n// Resize Handler\nexport function setupCameraResize(): void {\n  window.addEventListener(\"resize\", () => {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n  });\n}\n","import * as THREE from 'three';\nimport { ASSETS, SHADER_CONFIG } from './config';\nimport { MaterialMap } from './types';\n\n// Texture Loader\nconst textureLoader = new THREE.TextureLoader();\n\n// Load Textures\nexport const mazeTexture = textureLoader.load(ASSETS.mazeTexture);\n\n// Basic Materials\nexport const mazeMaterial = new THREE.MeshMatcapMaterial({ matcap: mazeTexture });\n\nexport const topMaterial = new THREE.MeshStandardMaterial({\n  color: 0xf2f9f9,\n  metalness: 0.4,\n  roughness: 0,\n  envMapIntensity: 10,\n});\n\nexport const ghostMaterial = new THREE.MeshPhysicalMaterial({\n  color: 0xffffff,\n  opacity: 1,\n  transparent: true,\n  depthWrite: false,\n  depthTest: true,\n  blending: THREE.NormalBlending,\n  side: THREE.DoubleSide,\n  roughness: 0.75,\n  metalness: 0.2,\n  transmission: 0.5,\n});\n\nexport const floorMaterial = new THREE.MeshStandardMaterial({\n  color: 0xffffff,\n  opacity: 0.8,\n  transparent: true,\n  roughness: 0.5,\n  metalness: 0.1,\n});\n\n// Shader Material\nexport const pacmanShaderMaterial = new THREE.ShaderMaterial({\n  vertexShader: SHADER_CONFIG.vertexShader,\n  fragmentShader: SHADER_CONFIG.fragmentShader,\n  uniforms: {\n    mixValue: { value: 0.0 },\n  },\n});\n\n// Pacman Materials\nexport const pacmanMaterials = {\n  blue: new THREE.MeshBasicMaterial({ color: 0x1469d3 }),\n  white: new THREE.MeshBasicMaterial({ color: 0xffffff }),\n  default: new THREE.MeshBasicMaterial({ color: 0x1469d3 })\n};\n\n// Material Mapping for Pacman Parts\nexport const materialMap: MaterialMap = {\n  CAM_Pacman_Backframe: pacmanMaterials.blue,\n  \"CAM-Pacman_Bitcoin_1\": pacmanMaterials.white,\n  \"CAM-Pacman_Bitcoin_2\": pacmanMaterials.white,\n  \"CAM-Pacman_Bottom\": pacmanMaterials.blue,\n  \"CAM-Pacman_Top\": pacmanMaterials.blue,\n  \"CAM-Pacman_Eye\": pacmanMaterials.white,\n  CAM_Pacman_Logo_1: pacmanMaterials.white,\n  CAM_Pacman_Logo_2: pacmanMaterials.white,\n  \"CAM-Pacman_Shell_Boolean\": pacmanMaterials.blue,\n  \"CAM-Pacman_Shell\": pacmanMaterials.blue,\n  \"CAM-Pacman_Bottom_electronic\": pacmanMaterials.white,\n  \"CAM-Pacman_Top_electronic\": pacmanMaterials.white,\n  \"CAM-Pacman_Bottom_Text\": pacmanMaterials.white,\n  \"CAM-Pacman_Top_Text\": pacmanMaterials.white,\n  default: pacmanMaterials.blue\n};\n\n// Ghost Cover Materials\nexport const ghostCoverMaterials = Array(5).fill(ghostMaterial);","import * as THREE from \"three\";\nimport { ASSETS } from \"./config\";\nimport { GhostContainer } from \"./types\";\nimport { scene } from \"./scene\";\nimport {\n  mazeMaterial,\n  topMaterial,\n  ghostMaterial,\n  floorMaterial,\n  materialMap,\n} from \"./materials\";\n\n// GLB Loader - check if available in global THREE\nconst loader = (THREE as any).GLTFLoader\n  ? new (THREE as any).GLTFLoader()\n  : null;\n\n// Animation Mixer\nexport let pacmanMixer: THREE.AnimationMixer;\n\n// Pacman Group\nexport const pacman = new THREE.Group();\nscene.add(pacman);\n\n// Ghost Objects\nexport const ghosts: GhostContainer = {\n  pacman: pacman,\n  ghost1: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost2: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost3: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost4: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost5: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n};\n\n// Add ghosts to scene\nObject.values(ghosts).forEach((ghost) => scene.add(ghost));\n\n// Ghost Container Mapping\nconst ghostContainers: GhostContainer = {\n  Ghost_EUR: ghosts.ghost1,\n  Ghost_CHF: ghosts.ghost2,\n  Ghost_YEN: ghosts.ghost3,\n  Ghost_USD: ghosts.ghost4,\n  Ghost_GBP: ghosts.ghost5,\n};\n\n// Load 3D Model - FIXED to match backup.js exactly\nexport function loadModel(): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (!loader) {\n      console.warn(\n        \"GLTFLoader not available. Please include GLTFLoader script.\"\n      );\n      resolve();\n      return;\n    }\n\n    loader.load(ASSETS.mazeModel, function (gltf: any) {\n      const model = gltf.scene;\n      const pacmanNames: string[] = [];\n\n      model.traverse(\n        (child: THREE.Object3D) => {\n          // PACMAN PROCESSING - inline like backup.js\n          if (child.name === \"CAM-Pacman\") {\n            const children: THREE.Mesh[] = [];\n\n            child.traverse((subChild) => {\n              if (\n                (subChild as any).isMesh &&\n                subChild.name !== \"CAM-Pacman_Shell\" &&\n                subChild.name !== \"CAM-Pacman_Shell_Boolean\"\n              ) {\n                (subChild as THREE.Mesh).material =\n                  materialMap[subChild.name] || materialMap.default;\n                children.push(subChild as THREE.Mesh);\n              } else if (\n                subChild.name === \"CAM-Pacman_Shell\" ||\n                subChild.name === \"CAM-Pacman_Shell_Boolean\"\n              ) {\n                subChild.visible = false;\n                // EXACT MATCH to backup.js - no instanceof check:\n                (subChild as any).morphTargetInfluences = [];\n                subChild.userData.skipAnimation = true;\n              }\n              pacmanNames.push(subChild.name);\n            });\n\n            children.forEach((item) => ghosts.pacman.add(item));\n            ghosts.pacman.scale.set(0.05, 0.05, 0.05);\n            ghosts.pacman.rotation.set(Math.PI / 2, Math.PI / 2, Math.PI / 4);\n\n            // Animation setup - NO FILTERING like backup.js\n            pacmanMixer = new THREE.AnimationMixer(ghosts.pacman);\n            const pacmanActions: { [key: string]: THREE.AnimationAction } = {};\n\n            gltf.animations.forEach((clip: THREE.AnimationClip) => {\n              const action = pacmanMixer.clipAction(clip);\n\n              // EXACT EVENT HANDLER like backup.js\n              action.getMixer().addEventListener(\"loop\", function (e: any) {\n                e.action.getRoot().traverse(function (obj: any) {\n                  if (obj.userData && obj.userData.skipAnimation) {\n                    obj.updateMorphTargets = function () {};\n                  }\n                });\n              });\n\n              pacmanActions[clip.name] = action;\n              action.setEffectiveWeight(0);\n              action.play();\n            });\n\n            // Set all actions to weight 1 like backup.js\n            Object.values(pacmanActions).forEach((action) => {\n              action.setEffectiveWeight(1);\n            });\n          }\n          // GHOST PROCESSING - inline like backup.js\n          else if (ghostContainers[child.name]) {\n            const ghostContainer = ghostContainers[child.name];\n            const ghostGroup = new THREE.Group();\n\n            child.rotation.z = Math.PI;\n            child.rotation.x = Math.PI / 2;\n            child.scale.set(0.75, 0.75, 0.75);\n\n            const children: THREE.Object3D[] = [];\n            child.traverse((subChild) => {\n              if ((subChild as any).isMesh) {\n                if (subChild.name.startsWith(\"Ghost_Mesh\")) {\n                  if (subChild instanceof THREE.Mesh) {\n                    subChild.material = ghostMaterial;\n                  }\n                } else if (\n                  [\"EUR\", \"CHF\", \"YEN\", \"USD\", \"GBP\"].includes(subChild.name)\n                ) {\n                  subChild.visible = false;\n                }\n                children.push(subChild);\n              }\n            });\n\n            children.forEach((item) => {\n              if (\n                item.name.includes(\"EUR\") ||\n                item.name.startsWith(\"Ghost_Mesh\")\n              ) {\n                item.rotation.z = Math.PI;\n                item.rotation.x = Math.PI / 2;\n              } else {\n                item.rotation.set(0, 0, 0);\n              }\n              ghostGroup.add(item);\n            });\n\n            if (\n              ghostContainer instanceof THREE.Mesh ||\n              ghostContainer instanceof THREE.Group\n            ) {\n              ghostContainer.add(ghostGroup);\n            }\n          }\n\n          // MESH PROCESSING - use .isMesh like backup.js\n          if ((child as any).isMesh) {\n            if (child.name === \"CAM-Arena_LowRes_Top\") {\n              (child as THREE.Mesh).material = topMaterial;\n              child.castShadow = true;\n            } else if (child.name === \"CAM-Arena_LowRes_Bottom\") {\n              (child as THREE.Mesh).material = mazeMaterial;\n              child.castShadow = true;\n            } else if (child.name === \"CAM-Floor\") {\n              const clonedChild = child.clone();\n              child.position.y = -0.1;\n              child.position.x = 0;\n              child.position.z = 0;\n              (child as THREE.Mesh).material = new THREE.MeshBasicMaterial({\n                color: 0xffffff,\n                opacity: 1,\n                transparent: false,\n                depthWrite: true,\n                depthTest: true,\n                side: THREE.FrontSide,\n              });\n              child.receiveShadow = false;\n              child.castShadow = true;\n              child.scale.set(0.5, 0.5, 0.5);\n              (clonedChild as THREE.Mesh).material = floorMaterial;\n              clonedChild.position.y = -0.5;\n              clonedChild.receiveShadow = true;\n              scene.add(clonedChild);\n            }\n          }\n\n          // Enable shadows\n          model.traverse(function (node: THREE.Object3D) {\n            if ((node as any).isMesh) {\n              node.castShadow = true;\n              node.receiveShadow = true;\n            }\n          });\n\n          scene.add(model);\n          model.position.set(0.5, 0.5, 0.5);\n          resolve();\n        },\n        undefined,\n        function (error: ErrorEvent) {\n          console.error(\"Fehler beim Laden des 3D-Modells:\", error);\n          console.warn(\"Continuing without 3D model...\");\n          resolve();\n        }\n      );\n    });\n  });\n}\n","import { initRenderer, setupLighting, renderer, scene } from \"./scene\";\nimport { initCamera, setupCameraResize, camera } from \"./camera\";\nimport { loadModel } from \"./objects\";\n\n// Initialize everything\nasync function init() {\n  console.log(\"Starting CAM 3D Animation...\");\n\n  initRenderer();\n  setupLighting();\n  initCamera();\n  setupCameraResize();\n\n  await loadModel();\n\n  // Basic render loop\n  function animate() {\n    renderer.render(scene, camera);\n    requestAnimationFrame(animate);\n  }\n  animate();\n}\n\n// Start when DOM is ready\nif (document.readyState === \"loading\") {\n  document.addEventListener(\"DOMContentLoaded\", init);\n} else {\n  init();\n}\n"],"names":["THREE","isMobile","window","innerWidth","CAMERA_POSITIONS","startMobile","startDesktop","secondMobile","secondDesktop","mobileLookAt","desktopLookAt","startPosition","lookAtPosition","SHADER_CONFIG","scene","renderer","antialias","alpha","powerPreference","precision","container","document","querySelector","setPixelRatio","pixelRatio","Math","min","devicePixelRatio","setSize","clientWidth","clientHeight","finalSection","camera","querySelectorAll","quaternion","clone","setFromEuler","setCamera","lookAt","x","y","z","split","map","Number","updateProjectionMatrix","updateMatrix","updateMatrixWorld","mazeTexture","load","mazeMaterial","matcap","topMaterial","color","metalness","roughness","envMapIntensity","ghostMaterial","opacity","transparent","depthWrite","depthTest","blending","side","transmission","floorMaterial","pacmanMaterials","vertexShader","fragmentShader","uniforms","mixValue","value","blue","white","default","materialMap","CAM_Pacman_Backframe","CAM_Pacman_Logo_1","CAM_Pacman_Logo_2","loader","Array","fill","pacmanMixer","pacman","add","ghosts","ghost1","ghost2","ghost3","ghost4","ghost5","Object","values","forEach","ghost","ghostContainers","Ghost_EUR","Ghost_CHF","Ghost_YEN","Ghost_USD","Ghost_GBP","async","init","console","log","shadowMap","enabled","type","appendChild","domElement","addEventListener","ambientLight","directionalLight","position","set","shadow","mapSize","width","height","left","right","top","bottom","near","far","bias","radius","castShadow","setupLighting","copy","aspect","innerHeight","Promise","resolve","reject","warn","gltf","model","pacmanNames","traverse","child","name","children","subChild","isMesh","material","push","visible","morphTargetInfluences","userData","skipAnimation","item","scale","rotation","PI","pacmanActions","animations","clip","action","clipAction","getMixer","e","getRoot","obj","updateMorphTargets","setEffectiveWeight","play","ghostContainer","ghostGroup","startsWith","includes","clonedChild","receiveShadow","node","undefined","error","animate","render","requestAnimationFrame","readyState"],"sourceRoot":""}