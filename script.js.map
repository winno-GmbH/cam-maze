{"version":3,"file":"script.js","mappings":"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","sources":["webpack://cam-3d-animation/external var \"THREE\"","webpack://cam-3d-animation/./src/config.ts","webpack://cam-3d-animation/./src/scene.ts","webpack://cam-3d-animation/./src/camera.ts","webpack://cam-3d-animation/./src/materials.ts","webpack://cam-3d-animation/./src/objects.ts","webpack://cam-3d-animation/./src/paths.ts","webpack://cam-3d-animation/./src/animation-system.ts","webpack://cam-3d-animation/./src/main.ts"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = THREE;","import * as THREE from \"three\";\n\n// Camera Configuration\nexport const CAMERA_CONFIG = {\n  originalFOV: 50,\n  wideFOV: 80,\n  near: 0.001,\n  far: 1000,\n};\n\n// Mobile Detection\nexport const isMobile = window.innerWidth < 768;\n\n// Camera Positions\nexport const CAMERA_POSITIONS = {\n  startMobile: new THREE.Vector3(0.5, 2.5, 2.5),\n  startDesktop: new THREE.Vector3(-2, 2.5, 2),\n  secondMobile: new THREE.Vector3(0.5, 2.5, 2),\n  secondDesktop: new THREE.Vector3(-1.5, 3, 2),\n  mobileLookAt: new THREE.Vector3(0.5, 0.5, -1.5),\n  desktopLookAt: new THREE.Vector3(-1.25, 0.5, 0.25),\n};\n\n// Get correct positions based on device\nexport const startPosition = isMobile\n  ? CAMERA_POSITIONS.startMobile\n  : CAMERA_POSITIONS.startDesktop;\nexport const secondPosition = isMobile\n  ? CAMERA_POSITIONS.secondMobile\n  : CAMERA_POSITIONS.secondDesktop;\nexport const lookAtPosition = isMobile\n  ? CAMERA_POSITIONS.mobileLookAt\n  : CAMERA_POSITIONS.desktopLookAt;\n\n// Maze Center Position for Bezier Curves\nexport const MAZE_CENTER = new THREE.Vector3(0.45175, 0.5, 0.55675);\n\n// Asset URLs\nexport const ASSETS = {\n  mazeTexture: \"https://c-am.b-cdn.net/CAM/matcap24.png\",\n  mazeModel: \"https://c-am.b-cdn.net/CAM/c-am-assets-3.glb\",\n};\n\n// DOM Selectors\nexport const SELECTORS = {\n  mazeContainer: \".el--home-maze.el\",\n  scrollComponent: \".cmp--scroll\",\n  introSection: \".sc--intro\",\n  homeSection: \".sc--home\",\n  povSection: \".sc--pov\",\n  finalSection: \".sc--final.sc\",\n  parentElements: \".cmp--pov.cmp\",\n};\n\n// POV Positions for Ghosts\nexport const POV_POSITIONS = {\n  ghost1: new THREE.Vector3(0.65725, 0.55, 0.75325),\n  ghost2: new THREE.Vector3(0.9085, 0.55, 0.8035),\n  ghost3: new THREE.Vector3(0.75775, 0.55, 1.05475),\n  ghost4: new THREE.Vector3(0.65725, 0.55, 1.0045),\n  ghost5: new THREE.Vector3(0.15475, 0.55, 1.15525),\n};\n\n// Shader Configuration\nexport const SHADER_CONFIG = {\n  vertexShader: `\n    varying vec3 vPosition;\n    void main() {\n      vPosition = position;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n  `,\n  fragmentShader: `\n    varying vec3 vPosition;\n    uniform float mixValue;\n    void main() {\n      float factor = (vPosition.y + 1.0) / 2.0;\n      vec3 colorA = vec3(0.0, 0.0, 1.0);\n      vec3 colorB = vec3(0.0, 1.0, 1.0);\n      vec3 colorC = vec3(1.0, 0.0, 0.0);\n      vec3 colorD = vec3(1.0, 1.0, 0.0);\n      \n      vec3 gradientA = mix(colorA, colorB, factor);\n      vec3 gradientB = mix(colorC, colorD, factor);\n      \n      vec3 finalColor = mix(gradientA, gradientB, mixValue);\n      gl_FragColor = vec4(finalColor, 1.0);\n    }\n  `,\n};\n","import * as THREE from \"three\";\nimport { SELECTORS, isMobile } from \"./config\";\n\n// Scene Setup\nexport const scene = new THREE.Scene();\n\n// Renderer Setup\nexport const renderer = new THREE.WebGLRenderer({\n  antialias: true,\n  alpha: true,\n  powerPreference: \"high-performance\",\n  precision: \"highp\",\n});\n\n// Container\nconst container = document.querySelector(\".el--home-maze.el\") as HTMLElement;\nif (!container) {\n  console.error(\"Container .el--home-maze.el not found!\");\n}\n\n// Clock for animations\nexport const clock = new THREE.Clock();\n\n// Anti-aliasing Enhancement\nfunction enhanceAntiAliasing(): void {\n  if (isMobile) {\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n  } else {\n    renderer.setPixelRatio(window.devicePixelRatio);\n  }\n  renderer.shadowMap.enabled = true;\n  renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n}\n\n// Pixel Ratio Setup - ADDED to match backup.js\nfunction setPixelRatio(): void {\n  const pixelRatio = Math.min(window.devicePixelRatio, isMobile ? 2 : 3);\n  renderer.setPixelRatio(pixelRatio);\n  renderer.setSize(container.clientWidth, container.clientHeight);\n}\n\n// Initialize Renderer - FIXED to match backup.js\nexport function initRenderer(): void {\n  enhanceAntiAliasing();\n\n  renderer.shadowMap.enabled = true;\n  renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n  if (container) {\n    renderer.setSize(container.clientWidth, container.clientHeight);\n    container.appendChild(renderer.domElement);\n  } else {\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n  }\n\n  console.log(\"Renderer initialized\");\n\n  // ADD these event listeners to match backup.js:\n  window.addEventListener(\"load\", setPixelRatio);\n  window.addEventListener(\"resize\", setPixelRatio);\n}\n\n// Lighting Setup\nexport function setupLighting(): void {\n  const ambientLight = new THREE.AmbientLight(0xffffff);\n  scene.add(ambientLight);\n\n  const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n  scene.add(directionalLight);\n  directionalLight.position.set(-5, 15, 10);\n  directionalLight.shadow.mapSize.width = 4096;\n  directionalLight.shadow.mapSize.height = 4096;\n  directionalLight.shadow.camera.left = -20;\n  directionalLight.shadow.camera.right = 20;\n  directionalLight.shadow.camera.top = 20;\n  directionalLight.shadow.camera.bottom = -20;\n  directionalLight.shadow.camera.near = 0.1;\n  directionalLight.shadow.camera.far = 50;\n  directionalLight.shadow.bias = -0.001;\n  directionalLight.shadow.radius = 3;\n  directionalLight.castShadow = true;\n\n  console.log(\"Lighting setup complete\");\n}\n\n// Canvas and DOM Elements\nexport const canvas = document.querySelector(\"canvas\") as HTMLCanvasElement;\nexport const finalSection = document.querySelector(\n  SELECTORS.finalSection\n) as HTMLElement;\nexport const finalContainer = finalSection?.querySelector(\n  \".cr--final.cr\"\n) as HTMLElement;\nexport const parentElements = document.querySelectorAll(\n  SELECTORS.parentElements\n) as NodeListOf<Element>;\n","import * as THREE from \"three\";\nimport {\n  CAMERA_CONFIG,\n  startPosition,\n  secondPosition,\n  lookAtPosition,\n} from \"./config\";\n\n// Camera Setup\nexport const camera = new THREE.PerspectiveCamera(\n  CAMERA_CONFIG.originalFOV,\n  window.innerWidth / window.innerHeight,\n  CAMERA_CONFIG.near,\n  CAMERA_CONFIG.far\n);\n\n// Initialize Camera\nexport function initCamera(): void {\n  console.log(\"Camera start position:\", startPosition);\n  console.log(\"Camera look at position:\", lookAtPosition);\n\n  camera.position.copy(startPosition);\n  camera.lookAt(lookAtPosition);\n\n  console.log(\"Camera initialized at position:\", camera.position);\n  console.log(\"Camera looking at:\", lookAtPosition);\n}\n\n// Camera Quaternions\nexport const startQuaternion = camera.quaternion.clone();\nexport const endQuaternion = new THREE.Quaternion().setFromEuler(\n  new THREE.Euler(-1.5708, 0, 0)\n);\n\n// Camera Utility Functions\nexport function getCameraLookAtPoint(): THREE.Vector3 {\n  const direction = new THREE.Vector3(0, 0, -1);\n  direction.applyQuaternion(camera.quaternion);\n  const lookAtPoint = new THREE.Vector3();\n  lookAtPoint.copy(camera.position).add(direction.multiplyScalar(10));\n  return lookAtPoint;\n}\n\n// Global camera setter for debugging\n(window as any).setCamera = function (lookAt: string | THREE.Vector3): void {\n  if (typeof lookAt === \"string\") {\n    const [x, y, z] = lookAt.split(\",\").map(Number);\n    lookAt = new THREE.Vector3(x, y, z);\n  }\n  camera.lookAt(lookAt);\n  camera.updateProjectionMatrix();\n  camera.updateMatrix();\n  camera.updateMatrixWorld();\n};\n\n// Setup Camera Resize\nexport function setupCameraResize(): void {\n  const updateCamera = () => {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n  };\n\n  window.addEventListener(\"resize\", updateCamera);\n}\n","import * as THREE from \"three\";\nimport { ASSETS } from \"./config\";\n\n// Texture Loader\nconst textureLoader = new THREE.TextureLoader();\n\n// Load maze texture like in backup.js\nexport const mazeTexture = textureLoader.load(ASSETS.mazeTexture);\n\n// Materials exactly like backup.js\nexport const mazeMaterial = new THREE.MeshMatcapMaterial({\n  matcap: mazeTexture,\n});\n\nexport const topMaterial = new THREE.MeshStandardMaterial({\n  color: 0xf2f9f9,\n  metalness: 0.4,\n  roughness: 0,\n  envMapIntensity: 10,\n});\n\nexport const ghostMaterial = new THREE.MeshPhysicalMaterial({\n  color: 0xffffff,\n  opacity: 1,\n  transparent: true,\n  depthWrite: false,\n  depthTest: true,\n  blending: THREE.NormalBlending,\n  side: THREE.DoubleSide,\n  roughness: 0.75,\n  metalness: 0.2,\n  transmission: 0.5,\n});\n\nexport const floorMaterial = new THREE.MeshStandardMaterial({\n  color: 0xffffff,\n  opacity: 0.8,\n  transparent: true,\n  roughness: 0.5,\n  metalness: 0.1,\n});\n\n// Pacman materials with transparency for opacity changes\nconst pacmanMaterials = {\n  blue: new THREE.MeshBasicMaterial({\n    color: 0x1469d3,\n    transparent: true,\n    opacity: 1,\n  }),\n  white: new THREE.MeshBasicMaterial({\n    color: 0xffffff,\n    transparent: true,\n    opacity: 1,\n  }),\n  default: new THREE.MeshBasicMaterial({\n    color: 0x1469d3,\n    transparent: true,\n    opacity: 1,\n  }),\n};\n\nexport const materialMap = {\n  CAM_Pacman_Backframe: pacmanMaterials.blue,\n  \"CAM-Pacman_Bitcoin_1\": pacmanMaterials.white,\n  \"CAM-Pacman_Bitcoin_2\": pacmanMaterials.white,\n  \"CAM-Pacman_Bottom\": pacmanMaterials.blue,\n  \"CAM-Pacman_Top\": pacmanMaterials.blue,\n  \"CAM-Pacman_Eye\": pacmanMaterials.white,\n  CAM_Pacman_Logo_1: pacmanMaterials.white,\n  CAM_Pacman_Logo_2: pacmanMaterials.white,\n  \"CAM-Pacman_Shell_Boolean\": pacmanMaterials.blue,\n  \"CAM-Pacman_Shell\": pacmanMaterials.blue,\n  \"CAM-Pacman_Bottom_electronic\": pacmanMaterials.white,\n  \"CAM-Pacman_Top_electronic\": pacmanMaterials.white,\n  \"CAM-Pacman_Bottom_Text\": pacmanMaterials.white,\n  \"CAM-Pacman_Top_Text\": pacmanMaterials.white,\n  default: pacmanMaterials.blue,\n};\n\n// Ghost Cover Materials\nexport const ghostCoverMaterials = Array(5).fill(ghostMaterial);\n","import * as THREE from \"three\";\nimport { ASSETS } from \"./config\";\nimport { GhostContainer } from \"./types\";\nimport { scene, clock } from \"./scene\";\nimport {\n  mazeMaterial,\n  topMaterial,\n  ghostMaterial,\n  floorMaterial,\n  materialMap,\n} from \"./materials\";\n\n// Export clock for animation system\nexport { clock };\n\n// GLB Loader - use directly like in backup.js\nconst loader = new THREE.GLTFLoader();\n\n// Animation Mixer\nexport let pacmanMixer: THREE.AnimationMixer;\n\n// Pacman Group\nexport const pacman = new THREE.Group();\nscene.add(pacman);\n\n// Ghost Objects\nexport const ghosts: GhostContainer = {\n  pacman: pacman,\n  ghost1: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost2: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost3: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost4: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost5: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n};\n\n// Ghost containers mapping (like in backup.js)\nconst ghostContainers = {\n  Ghost_EUR: ghosts.ghost1,\n  Ghost_CHF: ghosts.ghost2,\n  Ghost_YEN: ghosts.ghost3,\n  Ghost_USD: ghosts.ghost4,\n  Ghost_GBP: ghosts.ghost5,\n};\n\n// Add ghosts to scene\nObject.values(ghosts).forEach((ghost) => scene.add(ghost));\n\n// Model Loading Function\nexport async function loadModel(): Promise<void> {\n  return new Promise((resolve, reject) => {\n    console.log(\"Loading model from:\", ASSETS.mazeModel);\n\n    loader.load(\n      ASSETS.mazeModel,\n      function (gltf) {\n        console.log(\"GLTF model loaded successfully\");\n        const model = gltf.scene;\n\n        model.traverse((child: THREE.Object3D) => {\n          if (child.name === \"CAM-Pacman\") {\n            const children: THREE.Object3D[] = [];\n            child.traverse((subChild: THREE.Object3D) => {\n              if (\n                (subChild as any).isMesh &&\n                subChild.name !== \"CAM-Pacman_Shell\" &&\n                subChild.name !== \"CAM-Pacman_Shell_Boolean\"\n              ) {\n                const material =\n                  materialMap[subChild.name as keyof typeof materialMap] ||\n                  materialMap.default;\n                (subChild as THREE.Mesh).material = material;\n                children.push(subChild);\n              } else if (\n                subChild.name === \"CAM-Pacman_Shell\" ||\n                subChild.name === \"CAM-Pacman_Shell_Boolean\"\n              ) {\n                subChild.visible = false;\n              }\n            });\n\n            children.forEach((item) => ghosts.pacman.add(item));\n            ghosts.pacman.scale.set(0.05, 0.05, 0.05);\n            ghosts.pacman.rotation.set(Math.PI / 2, Math.PI / 2, Math.PI / 4);\n\n            // Setup Pacman mixer\n            pacmanMixer = new THREE.AnimationMixer(ghosts.pacman);\n            const pacmanActions: { [key: string]: THREE.AnimationAction } = {};\n\n            gltf.animations.forEach((clip: THREE.AnimationClip) => {\n              const action = pacmanMixer.clipAction(clip);\n              pacmanActions[clip.name] = action;\n              action.setEffectiveWeight(1);\n              action.play();\n            });\n          } else if (\n            child.name &&\n            ghostContainers[child.name as keyof typeof ghostContainers]\n          ) {\n            const ghostContainer =\n              ghostContainers[child.name as keyof typeof ghostContainers];\n            const ghostGroup = new THREE.Group();\n\n            child.rotation.z = Math.PI;\n            child.rotation.x = Math.PI / 2;\n            child.scale.set(0.75, 0.75, 0.75);\n\n            const children: THREE.Object3D[] = [];\n            child.traverse((subChild: THREE.Object3D) => {\n              if ((subChild as any).isMesh) {\n                if (subChild.name && subChild.name.startsWith(\"Ghost_Mesh\")) {\n                  (subChild as THREE.Mesh).material = ghostMaterial;\n                } else if (\n                  subChild.name &&\n                  [\"EUR\", \"CHF\", \"YEN\", \"USD\", \"GBP\"].includes(subChild.name)\n                ) {\n                  subChild.visible = false;\n                }\n                children.push(subChild);\n              }\n            });\n\n            children.forEach((item) => {\n              if (\n                item.name &&\n                (item.name.includes(\"EUR\") ||\n                  item.name.startsWith(\"Ghost_Mesh\"))\n              ) {\n                item.rotation.z = Math.PI;\n                item.rotation.x = Math.PI / 2;\n              } else {\n                item.rotation.set(0, 0, 0);\n              }\n              ghostGroup.add(item);\n            });\n\n            ghostContainer.add(ghostGroup);\n          }\n\n          if ((child as any).isMesh) {\n            if (child.name === \"CAM-Arena_LowRes_Top\") {\n              console.log(\"Found maze top mesh:\", child.name);\n              (child as THREE.Mesh).material = topMaterial;\n              child.castShadow = true;\n            } else if (child.name === \"CAM-Arena_LowRes_Bottom\") {\n              console.log(\"Found maze bottom mesh:\", child.name);\n              (child as THREE.Mesh).material = mazeMaterial;\n              child.castShadow = true;\n            } else if (child.name === \"CAM-Floor\") {\n              const clonedChild = child.clone();\n              child.position.y = -0.1;\n              child.position.x = 0;\n              child.position.z = 0;\n              (child as THREE.Mesh).material = new THREE.MeshBasicMaterial({\n                color: 0xffffff,\n                opacity: 1,\n                transparent: false,\n                depthWrite: true,\n                depthTest: true,\n                side: THREE.FrontSide,\n              });\n              child.receiveShadow = false;\n              child.castShadow = true;\n              child.scale.set(0.5, 0.5, 0.5);\n\n              (clonedChild as THREE.Mesh).material = floorMaterial;\n              clonedChild.position.y = -0.5;\n              clonedChild.receiveShadow = true;\n              scene.add(clonedChild);\n            }\n          }\n        });\n\n        // Add shadows to all meshes\n        model.traverse(function (node: THREE.Object3D) {\n          if ((node as any).isMesh) {\n            node.castShadow = true;\n            node.receiveShadow = true;\n          }\n        });\n\n        // Add model to scene and position it like in backup.js\n        scene.add(model);\n        model.position.set(0.5, 0.5, 0.5);\n\n        console.log(\n          \"Model added to scene with\",\n          scene.children.length,\n          \"total children\"\n        );\n        resolve();\n      },\n      function (progress) {\n        console.log(\"Loading progress:\", progress);\n      },\n      function (error) {\n        console.error(\"Error loading 3D model:\", error);\n        reject(error);\n      }\n    );\n  });\n}\n","import * as THREE from \"three\";\nimport { PathPoint, PathData, PathMapping } from \"./types\";\nimport { CAMERA_POSITIONS, isMobile } from \"./config\";\n\n// Path Creation Utility\nexport function createPath(\n  pathPoints: PathPoint[]\n): THREE.CurvePath<THREE.Vector3> {\n  const path = new THREE.CurvePath<THREE.Vector3>();\n\n  for (let i = 0; i < pathPoints.length - 1; i++) {\n    const current = pathPoints[i];\n    const next = pathPoints[i + 1];\n\n    if (current.type === \"straight\") {\n      const line = new THREE.LineCurve3(current.pos, next.pos);\n      path.add(line);\n    } else if (current.type === \"curve\") {\n      let midPoint: THREE.Vector3;\n      if (current.curveType === \"upperArc\") {\n        midPoint = new THREE.Vector3(current.pos.x, current.pos.y, next.pos.z);\n      } else if (current.curveType === \"lowerArc\") {\n        midPoint = new THREE.Vector3(next.pos.x, current.pos.y, current.pos.z);\n      } else if (current.curveType === \"forwardDownArc\") {\n        midPoint = new THREE.Vector3(current.pos.x, next.pos.y, current.pos.z);\n      } else {\n        midPoint = new THREE.Vector3(current.pos.x, current.pos.y, next.pos.z);\n      }\n      const curve = new THREE.QuadraticBezierCurve3(\n        current.pos,\n        midPoint,\n        next.pos\n      );\n      path.add(curve);\n    }\n  }\n  return path;\n}\n\n// Path Points Definitions (shortened as requested)\nconst pacmanHomePathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.6025), type: \"straight\" },\n];\n\nconst ghost1HomePathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.502), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.75775, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.004, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.0965, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.502), type: \"straight\" },\n];\n\nconst ghost2HomePathPoints: PathPoint[] = [\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.004, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.502), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.3055, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.3055, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.0965, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n];\n\nconst ghost3HomePathPoints: PathPoint[] = [\n  {\n    pos: new THREE.Vector3(0.808, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.15475, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.55675, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.009, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.904), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.75775, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.004, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.808, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n];\n\nconst ghost4HomePathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.65725, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.15975, 0.55, 0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.6025), type: \"straight\" },\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.4015), type: \"straight\" },\n];\n\nconst ghost5HomePathPoints: PathPoint[] = [\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.04975),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.3055, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, -0.101), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.04975),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n];\n\nconst cameraPOVPathPoints: PathPoint[] = [\n  {\n    pos: new THREE.Vector3(0.55675, 0.5, 0.45175),\n    type: \"curve\",\n    curveType: \"forwardDownArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.607, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.7075, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.9085, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.85375), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.15525),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.9085, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.808, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.75775, 0.55, 1.15525), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 1.05475),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.7075, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.205, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.15475, 0.55, 1.05475), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.15525),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.205, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.5065, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 1.306),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.44825, 1, 2.0095), type: \"straight\" },\n];\n\nconst ghost1POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.009, 0.55, 0.8035), type: \"straight\" },\n  { pos: new THREE.Vector3(0.9085, 0.55, 0.8035), type: \"straight\" },\n];\n\nconst ghost2POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.009, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 1.15525), type: \"straight\" },\n  { pos: new THREE.Vector3(0.95875, 0.55, 1.05475), type: \"straight\" },\n];\n\nconst ghost3POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.904), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.95425),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.406, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.5065, 0.55, 1.0045), type: \"straight\" },\n];\n\nconst ghost4POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(0.15475, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.05475),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.205, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.3055, 0.55, 1.0045), type: \"straight\" },\n];\n\nconst ghost5POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(0.55675, 0.55, 1.306), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 1.25575),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.5065, 0.55, 1.2055), type: \"straight\" },\n  { pos: new THREE.Vector3(0.406, 0.55, 1.2055), type: \"straight\" },\n];\n\n// Camera Home Path - ensure it uses the correct positions based on device\nconst cameraStartPosition = isMobile\n  ? CAMERA_POSITIONS.startMobile\n  : CAMERA_POSITIONS.startDesktop;\nconst cameraSecondPosition = isMobile\n  ? CAMERA_POSITIONS.secondMobile\n  : CAMERA_POSITIONS.secondDesktop;\n\nexport const cameraHomePath = new THREE.CubicBezierCurve3(\n  cameraStartPosition,\n  cameraSecondPosition,\n  new THREE.Vector3(0.55675, 3, 0.45175),\n  new THREE.Vector3(0.55675, 0.5, 0.45175)\n);\n\n// Path Data Configuration\nexport const pathsData: { [key: string]: PathData } = {\n  pacmanHomePath: {\n    points: pacmanHomePathPoints,\n    color: 0xffff00,\n  },\n  ghost1HomePath: {\n    points: ghost1HomePathPoints,\n    color: 0xff0000,\n  },\n  ghost2HomePath: {\n    points: ghost2HomePathPoints,\n    color: 0xffa500,\n  },\n  ghost3HomePath: {\n    points: ghost3HomePathPoints,\n    color: 0xff69b4,\n  },\n  ghost4HomePath: {\n    points: ghost4HomePathPoints,\n    color: 0x32cd32,\n  },\n  ghost5HomePath: {\n    points: ghost5HomePathPoints,\n    color: 0xffdab9,\n  },\n  cameraPOVPath: {\n    points: cameraPOVPathPoints,\n    color: 0xffffff,\n  },\n  ghost1POVPath: {\n    points: ghost1POVPathPoints,\n    color: 0xff0000,\n  },\n  ghost2POVPath: {\n    points: ghost2POVPathPoints,\n    color: 0xffa500,\n  },\n  ghost3POVPath: {\n    points: ghost3POVPathPoints,\n    color: 0xff69b4,\n  },\n  ghost4POVPath: {\n    points: ghost4POVPathPoints,\n    color: 0x32cd32,\n  },\n  ghost5POVPath: {\n    points: ghost5POVPathPoints,\n    color: 0xffdab9,\n  },\n};\n\n// Path Mapping Functions\nexport function getPathsForSection(section: string): PathMapping {\n  const mapping: PathMapping = {};\n\n  if (section === \"home\") {\n    mapping.pacman = \"pacmanHomePath\";\n    mapping.ghost1 = \"ghost1HomePath\";\n    mapping.ghost2 = \"ghost2HomePath\";\n    mapping.ghost3 = \"ghost3HomePath\";\n    mapping.ghost4 = \"ghost4HomePath\";\n    mapping.ghost5 = \"ghost5HomePath\";\n  } else if (section === \"pov\") {\n    mapping.pacman = \"cameraPOVPath\";\n    mapping.ghost1 = \"ghost1POVPath\";\n    mapping.ghost2 = \"ghost2POVPath\";\n    mapping.ghost3 = \"ghost3POVPath\";\n    mapping.ghost4 = \"ghost4POVPath\";\n    mapping.ghost5 = \"ghost5POVPath\";\n  }\n  return mapping;\n}\n\n// Create all paths\nexport const paths: { [key: string]: THREE.CurvePath<THREE.Vector3> } = {};\n\n// Initialize paths\nObject.entries(pathsData).forEach(([key, data]) => {\n  paths[key] = createPath(data.points);\n});\n\n// Create pathsMap for ghost animation system\nexport const pathsMap: { [key: string]: THREE.CurvePath<THREE.Vector3> } = {\n  pacman: paths.pacmanHomePath,\n  ghost1: paths.ghost1HomePath,\n  ghost2: paths.ghost2HomePath,\n  ghost3: paths.ghost3HomePath,\n  ghost4: paths.ghost4HomePath,\n  ghost5: paths.ghost5HomePath,\n};\n","import * as THREE from \"three\";\nimport { ghosts, pacmanMixer, clock } from \"./objects\";\nimport { pathsMap } from \"./paths\";\nimport { renderer, scene } from \"./scene\";\nimport { camera } from \"./camera\";\n\n// 1. STATE MANAGEMENT\ntype AnimationState = \"HOME\" | \"SCROLL_ANIMATION\";\nlet currentAnimationState: AnimationState = \"HOME\";\nlet isFirstScroll = true;\n\n// Debug info for window\ndeclare global {\n  interface Window {\n    animationDebugInfo: {\n      state: AnimationState;\n      isFirstScroll: boolean;\n      capturedPositions: any;\n      bezierCurves: any;\n      scrollProgress?: number;\n    };\n  }\n}\n\n// Constants\nconst MAZE_CENTER = new THREE.Vector3(0.45175, 0.5, 0.55675);\nconst OPACITY_FADE_START = 0.8; // Last 20% for opacity fade\n\n// 2. POSITION & BEZIER SYSTEM\nconst capturedPositions: { [key: string]: THREE.Vector3 } = {};\nconst bezierCurves: { [key: string]: THREE.QuadraticBezierCurve3 } = {};\nlet timeOffset = 0;\nlet pauseTime = 0;\n\nfunction captureGhostPositions() {\n  Object.keys(ghosts).forEach((ghostKey) => {\n    if (ghostKey !== \"pacman\" && ghosts[ghostKey]) {\n      capturedPositions[ghostKey] = ghosts[ghostKey].position.clone();\n    }\n  });\n  console.log(\"Ghost positions captured:\", capturedPositions);\n}\n\nfunction createBezierCurves() {\n  Object.keys(capturedPositions).forEach((ghostKey) => {\n    const startPos = capturedPositions[ghostKey];\n    const endPos = startPos.clone(); // Round trip back to start\n\n    // Create control point that goes through maze center\n    const controlPoint = MAZE_CENTER.clone();\n\n    bezierCurves[ghostKey] = new THREE.QuadraticBezierCurve3(\n      startPos,\n      controlPoint,\n      endPos\n    );\n  });\n  console.log(\"Bezier curves created\");\n}\n\nfunction moveGhostOnCurve(ghostKey: string, scrollProgress: number) {\n  if (!bezierCurves[ghostKey] || !ghosts[ghostKey]) return;\n\n  // Get position on curve (0-1)\n  const position = bezierCurves[ghostKey].getPoint(scrollProgress);\n  ghosts[ghostKey].position.copy(position);\n\n  // Get direction from curve tangent for smooth rotation\n  const tangent = bezierCurves[ghostKey].getTangent(scrollProgress).normalize();\n  ghosts[ghostKey].lookAt(position.clone().add(tangent));\n\n  // Handle opacity fade in last 20%\n  let opacity = 1;\n  if (scrollProgress >= OPACITY_FADE_START) {\n    const fadeProgress =\n      (scrollProgress - OPACITY_FADE_START) / (1 - OPACITY_FADE_START);\n    opacity = 1 - fadeProgress;\n    opacity = Math.max(0.1, opacity); // Keep minimum visibility\n  }\n\n  // Set opacity for both Mesh and Group\n  const ghost = ghosts[ghostKey];\n  if (ghost instanceof THREE.Mesh && ghost.material) {\n    if (Array.isArray(ghost.material)) {\n      ghost.material.forEach((mat) => {\n        if (\"opacity\" in mat) mat.opacity = opacity;\n      });\n    } else {\n      if (\"opacity\" in ghost.material) ghost.material.opacity = opacity;\n    }\n  } else if (ghost instanceof THREE.Group) {\n    ghost.traverse((child) => {\n      if (child instanceof THREE.Mesh && child.material) {\n        if (Array.isArray(child.material)) {\n          child.material.forEach((mat) => {\n            if (\"opacity\" in mat) mat.opacity = opacity;\n          });\n        } else {\n          if (\"opacity\" in child.material) child.material.opacity = opacity;\n        }\n      }\n    });\n  }\n}\n\n// 3. SCROLL MANAGEMENT\nlet initialCameraPosition = new THREE.Vector3();\nlet initialCameraTarget = new THREE.Vector3();\n\nfunction onFirstScroll() {\n  if (!isFirstScroll) return;\n\n  isFirstScroll = false;\n  pauseTime = Date.now();\n\n  // Capture initial camera state\n  initialCameraPosition.copy(camera.position);\n  // Assume camera is looking at origin initially or get the current target\n  initialCameraTarget.set(0, 0, 0);\n\n  captureGhostPositions();\n  createBezierCurves();\n  currentAnimationState = \"SCROLL_ANIMATION\";\n\n  // Update debug info\n  if (window.animationDebugInfo) {\n    window.animationDebugInfo.state = currentAnimationState;\n    window.animationDebugInfo.isFirstScroll = isFirstScroll;\n  }\n\n  console.log(\n    \"First scroll detected - animation paused and bezier curves created\"\n  );\n}\n\n// 4. ANIMATION LOOP\nlet animationStartTime = Date.now();\n\nfunction animationLoop() {\n  if (currentAnimationState !== \"HOME\") return;\n\n  const currentTime = Date.now();\n  const elapsedTime = (currentTime - animationStartTime - timeOffset) / 1000; // Convert to seconds\n  const t = (elapsedTime * 0.1) % 1; // Speed control (0.1 = slower, 0.2 = faster)\n\n  // Animate ghosts on their home paths\n  Object.entries(ghosts).forEach(([key, ghost]) => {\n    if (!pathsMap[key]) {\n      // Don't spam warnings, just return\n      return;\n    }\n\n    if (key === \"pacman\") {\n      // Pacman animation\n      const position = pathsMap[key].getPointAt(t);\n      ghost.position.copy(position);\n      const tangent = pathsMap[key].getTangentAt(t).normalize();\n      ghost.lookAt(position.clone().add(tangent));\n\n      // Handle pacman rotation smoothing\n      const zRotation = Math.atan2(tangent.x, tangent.z);\n      if ((ghost as any).previousZRotation === undefined) {\n        (ghost as any).previousZRotation = zRotation;\n      }\n\n      let rotationDiff = zRotation - (ghost as any).previousZRotation;\n      if (rotationDiff > Math.PI) rotationDiff -= 2 * Math.PI;\n      else if (rotationDiff < -Math.PI) rotationDiff += 2 * Math.PI;\n\n      const smoothFactor = 0.1;\n      const smoothedRotation =\n        (ghost as any).previousZRotation + rotationDiff * smoothFactor;\n      (ghost as any).previousZRotation = smoothedRotation;\n\n      ghost.rotation.set(Math.PI / 2, Math.PI, smoothedRotation + Math.PI / 2);\n    } else {\n      // Ghost animation\n      const position = pathsMap[key].getPointAt(t);\n      ghost.position.copy(position);\n      const tangent = pathsMap[key].getTangentAt(t).normalize();\n      ghost.lookAt(position.clone().add(tangent));\n\n      // Ensure full opacity\n      if (\n        ghost instanceof THREE.Mesh &&\n        ghost.material &&\n        \"opacity\" in ghost.material\n      ) {\n        ghost.material.opacity = 1;\n      }\n    }\n  });\n}\n\n// Camera animation helper\nfunction animateCamera(progress: number) {\n  // Lerp camera position towards maze center\n  const mazeCenter = new THREE.Vector3(0.45175, 0.5, 0.55675);\n\n  // Position camera above the maze for a top-down-ish view\n  const cameraTargetPosition = new THREE.Vector3(\n    mazeCenter.x,\n    mazeCenter.y + 1.2, // Higher above the maze\n    mazeCenter.z + 0.6 // Slightly back\n  );\n\n  camera.position.lerpVectors(\n    initialCameraPosition,\n    cameraTargetPosition,\n    progress\n  );\n\n  // Make camera look at maze center\n  const currentTarget = new THREE.Vector3().lerpVectors(\n    initialCameraTarget,\n    mazeCenter,\n    progress\n  );\n  camera.lookAt(currentTarget);\n}\n\n// Scroll event handler\nfunction handleScroll() {\n  const scrollY = window.scrollY;\n  const maxScroll = document.documentElement.scrollHeight - window.innerHeight;\n  const scrollProgress = Math.min(scrollY / Math.max(maxScroll * 0.8, 1), 1); // Use 80% of max scroll\n\n  if (scrollY > 0 && currentAnimationState === \"HOME\") {\n    onFirstScroll();\n  }\n\n  if (currentAnimationState === \"SCROLL_ANIMATION\") {\n    // Animate ghosts along bezier curves\n    Object.keys(ghosts).forEach((ghostKey) => {\n      moveGhostOnCurve(ghostKey, scrollProgress);\n    });\n\n    // Animate camera towards maze center\n    animateCamera(scrollProgress);\n\n    // Update debug info\n    if (window.animationDebugInfo) {\n      window.animationDebugInfo.scrollProgress = scrollProgress;\n    }\n  }\n\n  if (scrollY === 0 && currentAnimationState === \"SCROLL_ANIMATION\") {\n    // Reset to home state\n    currentAnimationState = \"HOME\";\n    isFirstScroll = true;\n\n    if (pauseTime) {\n      timeOffset += Date.now() - pauseTime;\n      pauseTime = 0;\n    }\n\n    // Reset camera to initial position\n    camera.position.copy(initialCameraPosition);\n    camera.lookAt(initialCameraTarget);\n\n    // Update debug info\n    if (window.animationDebugInfo) {\n      window.animationDebugInfo.state = currentAnimationState;\n      window.animationDebugInfo.isFirstScroll = isFirstScroll;\n      window.animationDebugInfo.scrollProgress = 0;\n    }\n\n    console.log(\"Returned to top - resuming home animation\");\n  }\n}\n\n// 5. GSAP INTEGRATION - To be called by GSAP ScrollTriggers\nexport function setupScrollTriggers() {\n  // This will be implemented when GSAP is available\n  // For now, we use basic scroll events\n  window.addEventListener(\"scroll\", handleScroll);\n  console.log(\"Scroll triggers setup complete\");\n}\n\n// Main animation loop\nfunction animate() {\n  // Update pacman mixer\n  if (pacmanMixer) {\n    const delta = clock.getDelta();\n    pacmanMixer.update(delta);\n  }\n\n  // Run animation loop if in HOME state\n  animationLoop();\n\n  // Render the scene\n  renderer.render(scene, camera);\n\n  requestAnimationFrame(animate);\n}\n\n// Initialize animation system\nexport function initAnimationSystem() {\n  console.log(\"Initializing animation system...\");\n\n  // Setup debug info\n  window.animationDebugInfo = {\n    state: currentAnimationState,\n    isFirstScroll: isFirstScroll,\n    capturedPositions: capturedPositions,\n    bezierCurves: bezierCurves,\n  };\n\n  // Ensure all ghosts are visible and have full opacity\n  Object.keys(ghosts).forEach((ghostKey) => {\n    if (ghosts[ghostKey]) {\n      ghosts[ghostKey].visible = true;\n      console.log(\n        `Ghost ${ghostKey} set to visible:`,\n        ghosts[ghostKey].visible\n      );\n\n      const ghost = ghosts[ghostKey];\n      if (\n        ghost instanceof THREE.Mesh &&\n        ghost.material &&\n        \"opacity\" in ghost.material\n      ) {\n        ghost.material.opacity = 1;\n      } else if (ghost instanceof THREE.Group) {\n        ghost.traverse((child) => {\n          if (\n            child instanceof THREE.Mesh &&\n            child.material &&\n            \"opacity\" in child.material\n          ) {\n            child.material.opacity = 1;\n          }\n        });\n      }\n    }\n  });\n\n  // Debug: Check if pathsMap is available\n  console.log(\"Available paths:\", Object.keys(pathsMap));\n  console.log(\"Ghosts:\", Object.keys(ghosts));\n\n  setupScrollTriggers();\n  animate();\n\n  console.log(\"Animation system initialized\");\n}\n\n// Export functions for GSAP integration\nexport { moveGhostOnCurve, captureGhostPositions, createBezierCurves };\n","import { initRenderer, setupLighting, renderer, scene } from \"./scene\";\nimport { initCamera, setupCameraResize, camera } from \"./camera\";\nimport { loadModel } from \"./objects\";\nimport { initAnimationSystem } from \"./animation-system\";\n\n// Initialize everything\nasync function init() {\n  console.log(\"Starting CAM 3D Animation...\");\n\n  try {\n    initRenderer();\n    console.log(\"Renderer initialized\");\n\n    setupLighting();\n    console.log(\"Lighting setup complete\");\n\n    initCamera();\n    console.log(\"Camera initialized\");\n\n    setupCameraResize();\n    console.log(\"Camera resize setup complete\");\n\n    console.log(\"Loading 3D model...\");\n    await loadModel();\n    console.log(\"Model loading complete\");\n\n    // Initialize animation system (handles rendering and animations)\n    console.log(\"Initializing animation system...\");\n    initAnimationSystem();\n    console.log(\"Animation system initialized\");\n\n    // Debug scene contents\n    console.log(\"Scene children count:\", scene.children.length);\n    scene.children.forEach((child, index) => {\n      console.log(`Child ${index}:`, child.type, child.name || \"unnamed\");\n    });\n  } catch (error) {\n    console.error(\"Initialization error:\", error);\n  }\n}\n\n// Start when DOM is ready\nif (document.readyState === \"loading\") {\n  document.addEventListener(\"DOMContentLoaded\", init);\n} else {\n  init();\n}\n"],"names":["THREE","isMobile","window","innerWidth","CAMERA_POSITIONS","startMobile","startDesktop","secondMobile","secondDesktop","mobileLookAt","desktopLookAt","startPosition","lookAtPosition","ASSETS","scene","renderer","antialias","alpha","powerPreference","precision","container","document","querySelector","console","error","clock","setPixelRatio","pixelRatio","Math","min","devicePixelRatio","setSize","clientWidth","clientHeight","finalSection","camera","querySelectorAll","innerHeight","quaternion","clone","setFromEuler","setCamera","lookAt","x","y","z","split","map","Number","updateProjectionMatrix","updateMatrix","updateMatrixWorld","mazeTexture","load","mazeMaterial","matcap","topMaterial","color","metalness","roughness","envMapIntensity","ghostMaterial","opacity","transparent","depthWrite","depthTest","blending","side","transmission","floorMaterial","pacmanMaterials","blue","white","default","materialMap","CAM_Pacman_Backframe","CAM_Pacman_Logo_1","CAM_Pacman_Logo_2","loader","Array","fill","pacmanMixer","pacman","add","ghosts","ghost1","ghost2","ghost3","ghost4","ghost5","ghostContainers","Ghost_EUR","Ghost_CHF","Ghost_YEN","Ghost_USD","Ghost_GBP","Object","values","forEach","ghost","pacmanHomePathPoints","pos","type","curveType","ghost1HomePathPoints","ghost2HomePathPoints","ghost3HomePathPoints","ghost4HomePathPoints","ghost5HomePathPoints","cameraPOVPathPoints","ghost1POVPathPoints","ghost2POVPathPoints","ghost3POVPathPoints","ghost4POVPathPoints","ghost5POVPathPoints","cameraStartPosition","cameraSecondPosition","pathsData","pacmanHomePath","points","ghost1HomePath","ghost2HomePath","ghost3HomePath","ghost4HomePath","ghost5HomePath","cameraPOVPath","ghost1POVPath","ghost2POVPath","ghost3POVPath","ghost4POVPath","ghost5POVPath","paths","entries","key","data","pathPoints","path","i","length","current","next","line","midPoint","curve","createPath","pathsMap","currentAnimationState","isFirstScroll","capturedPositions","bezierCurves","timeOffset","pauseTime","initialCameraPosition","initialCameraTarget","animationStartTime","Date","now","handleScroll","scrollY","maxScroll","documentElement","scrollHeight","scrollProgress","max","copy","position","set","keys","ghostKey","log","startPos","endPos","controlPoint","animationDebugInfo","state","getPoint","tangent","getTangent","normalize","material","isArray","mat","traverse","child","moveGhostOnCurve","progress","mazeCenter","cameraTargetPosition","lerpVectors","currentTarget","animateCamera","animate","delta","getDelta","update","t","getPointAt","getTangentAt","zRotation","atan2","undefined","previousZRotation","rotationDiff","PI","smoothFactor","smoothedRotation","rotation","animationLoop","render","requestAnimationFrame","async","init","shadowMap","enabled","appendChild","domElement","body","addEventListener","ambientLight","directionalLight","shadow","mapSize","width","height","left","right","top","bottom","near","far","bias","radius","castShadow","setupLighting","aspect","Promise","resolve","reject","gltf","model","name","children","subChild","isMesh","push","visible","item","scale","pacmanActions","animations","clip","action","clipAction","setEffectiveWeight","play","ghostContainer","ghostGroup","startsWith","includes","clonedChild","receiveShadow","node","loadModel","index","readyState"],"sourceRoot":""}