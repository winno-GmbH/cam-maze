{"version":3,"file":"script.js","mappings":"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","sources":["webpack://cam-3d-animation/webpack/bootstrap","webpack://cam-3d-animation/webpack/runtime/compat get default export","webpack://cam-3d-animation/webpack/runtime/define property getters","webpack://cam-3d-animation/webpack/runtime/hasOwnProperty shorthand","webpack://cam-3d-animation/external var \"THREE\"","webpack://cam-3d-animation/./src/config/config.ts","webpack://cam-3d-animation/./src/config/selectors.ts","webpack://cam-3d-animation/external var \"gsap\"","webpack://cam-3d-animation/external var \"ScrollTrigger\"","webpack://cam-3d-animation/./src/core/camera.ts","webpack://cam-3d-animation/./src/core/materials.ts","webpack://cam-3d-animation/./src/core/objects.ts","webpack://cam-3d-animation/./src/core/scene.ts","webpack://cam-3d-animation/./src/paths/pathpoints.ts","webpack://cam-3d-animation/./src/paths/paths.ts","webpack://cam-3d-animation/./src/animation/HomeLoop.ts","webpack://cam-3d-animation/./src/main.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = THREE;","export const isMobile = window.innerWidth < 768;\n\nexport const CAMERA_CONFIG = {\n  originalFOV: 50,\n  wideFOV: 80,\n  near: 0.001,\n  far: 1000,\n};\n\nexport const ASSETS = {\n  mazeTexture: \"https://c-am.b-cdn.net/CAM/matcap24.png\",\n  mazeModel: \"https://c-am.b-cdn.net/CAM/c-am-assets-3.glb\",\n};\n","const SELECTORS = {\n  mazeContainer: \".el--home-maze.el\",\n\n  homeSection: \".sc--home.sc\",\n  introSection: \".sc--intro.sc\",\n  povSection: \".sc--pov.sc\",\n  finalSection: \".sc--final.sc\",\n  finalContainer: \".cr--final.cr\",\n\n  scrollComponent: \".cmp--scroll.cmp\",\n  parentElements: \".cmp--pov.cmp\",\n\n  pov: \".pov\",\n  cam: \".cam\",\n};\n\nexport const DOM_ELEMENTS = {\n  mazeContainer: document.querySelector(SELECTORS.mazeContainer) as HTMLElement,\n  canvas: document.querySelector(\"canvas\") as HTMLCanvasElement,\n\n  homeSection: document.querySelector(SELECTORS.homeSection) as HTMLElement,\n  introSection: document.querySelector(SELECTORS.introSection) as HTMLElement,\n  povSection: document.querySelector(SELECTORS.povSection) as HTMLElement,\n  finalSection: document.querySelector(SELECTORS.finalSection) as HTMLElement,\n  finalContainer: document.querySelector(\n    SELECTORS.finalContainer\n  ) as HTMLElement,\n\n  parentElements: document.querySelectorAll(\n    SELECTORS.parentElements\n  ) as NodeListOf<Element>,\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = gsap;","const __WEBPACK_NAMESPACE_OBJECT__ = ScrollTrigger;","import * as THREE from \"three\";\n\nimport gsap from \"gsap\";\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport const camera = new THREE.PerspectiveCamera(\n  75,\n  window.innerWidth / window.innerHeight,\n  0.1,\n  1000\n);\n\nexport function setupCamera(): void {\n  camera.position.copy(new THREE.Vector3(0.5, 2.5, 2.5)); // startPosition\n  camera.lookAt(new THREE.Vector3(0.5, 0.5, -1.5)); // lookAtPosition\n}\n\nexport const startQuaternion = camera.quaternion.clone();\nexport const endQuaternion = new THREE.Quaternion().setFromEuler(\n  new THREE.Euler(-1.5708, 0, 0)\n);\n\nexport function getCameraLookAtPoint(): THREE.Vector3 {\n  const direction = new THREE.Vector3(0, 0, -1);\n  direction.applyQuaternion(camera.quaternion);\n  const lookAtPoint = new THREE.Vector3();\n  lookAtPoint.copy(camera.position).add(direction.multiplyScalar(10));\n  return lookAtPoint;\n}\n\nexport function setupCameraResize(): void {\n  const updateCamera = () => {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n  };\n\n  window.addEventListener(\"resize\", updateCamera);\n}\n\nexport function setupCameraAnimation(): void {\n  const startQuat = camera.quaternion.clone();\n  const endPos = new THREE.Vector3(-1.5, 3, 2);\n  const endTangent = new THREE.Vector3(-1.5, 3, 2);\n  let endQuat: THREE.Quaternion | null = null;\n\n  if (endPos && endTangent) {\n    const lookAt = endPos.clone().add(endTangent);\n    camera.position.copy(endPos);\n    camera.lookAt(lookAt);\n    endQuat = camera.quaternion.clone();\n  }\n\n  camera.position.copy(new THREE.Vector3(-2, 2.5, 2));\n  camera.quaternion.copy(startQuat);\n\n  gsap\n    .timeline({\n      scrollTrigger: {\n        trigger: \".sc--home\",\n        start: \"top top\",\n        end: \"bottom top\",\n        scrub: 5,\n      },\n    })\n    .to(\n      { t: 0 },\n      {\n        t: 1,\n        immediateRender: false,\n        onUpdate: function () {\n          const t = this.targets()[0].t;\n\n          const position = new THREE.Vector3(-2, 2.5, 2);\n          camera.position.copy(position);\n          if (startQuat && endQuat) {\n            const currentQuaternion = new THREE.Quaternion();\n            currentQuaternion.slerpQuaternions(startQuat, endQuat, t);\n            camera.quaternion.copy(currentQuaternion);\n          }\n          camera.updateProjectionMatrix();\n        },\n      }\n    );\n}\n","import * as THREE from \"three\";\nimport { ASSETS } from \"../config/config\";\n\nconst textureLoader = new THREE.TextureLoader();\n\nexport const mazeTexture = textureLoader.load(ASSETS.mazeTexture);\n\nexport const mazeMaterial = new THREE.MeshMatcapMaterial({\n  matcap: mazeTexture,\n});\n\nexport const topMaterial = new THREE.MeshStandardMaterial({\n  color: 0xf2f9f9,\n  metalness: 0.4,\n  roughness: 0,\n  envMapIntensity: 10,\n});\n\nexport const ghostMaterial = new THREE.MeshPhysicalMaterial({\n  color: 0xffffff,\n  opacity: 1,\n  transparent: true,\n  depthWrite: false,\n  depthTest: true,\n  blending: THREE.NormalBlending,\n  side: THREE.DoubleSide,\n  roughness: 0.75,\n  metalness: 0.2,\n  transmission: 0.5,\n});\n\nexport const floorMaterial = new THREE.MeshStandardMaterial({\n  color: 0xffffff,\n  opacity: 0.8,\n  transparent: true,\n  roughness: 0.5,\n  metalness: 0.1,\n});\n\nconst pacmanMaterials = {\n  blue: new THREE.MeshBasicMaterial({\n    color: 0x1469d3,\n    transparent: true,\n    opacity: 1,\n  }),\n  white: new THREE.MeshBasicMaterial({\n    color: 0xffffff,\n    transparent: true,\n    opacity: 1,\n  }),\n  default: new THREE.MeshBasicMaterial({\n    color: 0x1469d3,\n    transparent: true,\n    opacity: 1,\n  }),\n};\n\nexport const materialMap = {\n  CAM_Pacman_Backframe: pacmanMaterials.blue,\n  \"CAM-Pacman_Bitcoin_1\": pacmanMaterials.white,\n  \"CAM-Pacman_Bitcoin_2\": pacmanMaterials.white,\n  \"CAM-Pacman_Bottom\": pacmanMaterials.blue,\n  \"CAM-Pacman_Top\": pacmanMaterials.blue,\n  \"CAM-Pacman_Eye\": pacmanMaterials.white,\n  CAM_Pacman_Logo_1: pacmanMaterials.white,\n  CAM_Pacman_Logo_2: pacmanMaterials.white,\n  \"CAM-Pacman_Shell_Boolean\": pacmanMaterials.blue,\n  \"CAM-Pacman_Shell\": pacmanMaterials.blue,\n  \"CAM-Pacman_Bottom_electronic\": pacmanMaterials.white,\n  \"CAM-Pacman_Top_electronic\": pacmanMaterials.white,\n  \"CAM-Pacman_Bottom_Text\": pacmanMaterials.white,\n  \"CAM-Pacman_Top_Text\": pacmanMaterials.white,\n  default: pacmanMaterials.blue,\n};\n\nexport const ghostCoverMaterials = Array(5).fill(ghostMaterial);\n","import * as THREE from \"three\";\nimport { ASSETS } from \"../config/config\";\nimport { GhostContainer } from \"../types/types\";\nimport { clock } from \"./scene\";\nimport {\n  mazeMaterial,\n  topMaterial,\n  ghostMaterial,\n  floorMaterial,\n  materialMap,\n} from \"./materials\";\n\nexport { clock };\n\nconst loader = new THREE.GLTFLoader();\n\nexport let pacmanMixer: THREE.AnimationMixer;\n\nexport const pacman = new THREE.Group();\n\nexport const ghosts: GhostContainer = {\n  pacman: pacman,\n  ghost1: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost2: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost3: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost4: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost5: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n};\n\nconst ghostContainers = {\n  Ghost_EUR: ghosts.ghost1,\n  Ghost_CHF: ghosts.ghost2,\n  Ghost_YEN: ghosts.ghost3,\n  Ghost_USD: ghosts.ghost4,\n  Ghost_GBP: ghosts.ghost5,\n};\n\nexport async function loadModel(scene: THREE.Scene): Promise<void> {\n  Object.values(ghosts).forEach((ghost) => scene.add(ghost));\n  scene.add(pacman);\n  return new Promise((resolve, reject) => {\n    loader.load(\n      ASSETS.mazeModel,\n      function (gltf) {\n        const model = gltf.scene;\n\n        model.traverse((child: THREE.Object3D) => {\n          if (child.name === \"CAM-Pacman\") {\n            const children: THREE.Object3D[] = [];\n            child.traverse((subChild: THREE.Object3D) => {\n              if (\n                (subChild as any).isMesh &&\n                subChild.name !== \"CAM-Pacman_Shell\" &&\n                subChild.name !== \"CAM-Pacman_Shell_Boolean\"\n              ) {\n                const material =\n                  materialMap[subChild.name as keyof typeof materialMap] ||\n                  materialMap.default;\n                (subChild as THREE.Mesh).material = material;\n                children.push(subChild);\n              } else if (\n                subChild.name === \"CAM-Pacman_Shell\" ||\n                subChild.name === \"CAM-Pacman_Shell_Boolean\"\n              ) {\n                subChild.visible = false;\n              }\n            });\n\n            children.forEach((item) => ghosts.pacman.add(item));\n            ghosts.pacman.scale.set(0.05, 0.05, 0.05);\n            ghosts.pacman.rotation.set(Math.PI / 2, Math.PI / 2, Math.PI / 4);\n\n            pacmanMixer = new THREE.AnimationMixer(ghosts.pacman);\n            const pacmanActions: { [key: string]: THREE.AnimationAction } = {};\n\n            gltf.animations.forEach((clip: THREE.AnimationClip) => {\n              const action = pacmanMixer.clipAction(clip);\n              pacmanActions[clip.name] = action;\n              action.setEffectiveWeight(1);\n              action.play();\n            });\n          } else if (\n            child.name &&\n            ghostContainers[child.name as keyof typeof ghostContainers]\n          ) {\n            const ghostContainer =\n              ghostContainers[child.name as keyof typeof ghostContainers];\n            const ghostGroup = new THREE.Group();\n\n            child.rotation.z = Math.PI;\n            child.rotation.x = Math.PI / 2;\n            child.scale.set(0.75, 0.75, 0.75);\n\n            const children: THREE.Object3D[] = [];\n            child.traverse((subChild: THREE.Object3D) => {\n              if ((subChild as any).isMesh) {\n                if (subChild.name && subChild.name.startsWith(\"Ghost_Mesh\")) {\n                  (subChild as THREE.Mesh).material = ghostMaterial;\n                } else if (\n                  subChild.name &&\n                  [\"EUR\", \"CHF\", \"YEN\", \"USD\", \"GBP\"].includes(subChild.name)\n                ) {\n                  subChild.visible = false;\n                }\n                children.push(subChild);\n              }\n            });\n\n            children.forEach((item) => {\n              if (\n                item.name &&\n                (item.name.includes(\"EUR\") ||\n                  item.name.startsWith(\"Ghost_Mesh\"))\n              ) {\n                item.rotation.z = Math.PI;\n                item.rotation.x = Math.PI / 2;\n              } else {\n                item.rotation.set(0, 0, 0);\n              }\n              ghostGroup.add(item);\n            });\n\n            if (ghostContainer) {\n              ghostContainer.add(ghostGroup);\n            } else {\n              console.warn(`ghostContainer for ${child.name} is undefined!`);\n            }\n          }\n\n          if ((child as any).isMesh) {\n            if (child.name === \"CAM-Arena_LowRes_Top\") {\n              (child as THREE.Mesh).material = topMaterial;\n              child.castShadow = true;\n            } else if (child.name === \"CAM-Arena_LowRes_Bottom\") {\n              (child as THREE.Mesh).material = mazeMaterial;\n              child.castShadow = true;\n            } else if (child.name === \"CAM-Floor\") {\n              const clonedChild = child.clone();\n              child.position.y = -0.1;\n              child.position.x = 0;\n              child.position.z = 0;\n              (child as THREE.Mesh).material = new THREE.MeshBasicMaterial({\n                color: 0xffffff,\n                opacity: 1,\n                transparent: false,\n                depthWrite: true,\n                depthTest: true,\n                side: THREE.FrontSide,\n              });\n              child.receiveShadow = false;\n              child.castShadow = true;\n              child.scale.set(0.5, 0.5, 0.5);\n\n              (clonedChild as THREE.Mesh).material = floorMaterial;\n              clonedChild.position.y = -0.5;\n              clonedChild.receiveShadow = true;\n              scene.add(clonedChild);\n            }\n          }\n        });\n\n        model.traverse(function (node: THREE.Object3D) {\n          if ((node as any).isMesh) {\n            node.castShadow = true;\n            node.receiveShadow = true;\n          }\n        });\n\n        scene.add(model);\n        model.position.set(0.5, 0.5, 0.5);\n\n        resolve();\n      },\n      function (progress: any) {},\n      function (error: any) {\n        reject(error);\n      }\n    );\n  });\n}\n","import * as THREE from \"three\";\nimport { isMobile } from \"../config/config\";\nimport { DOM_ELEMENTS } from \"../config/selectors\";\nimport { camera } from \"./camera\";\nimport { loadModel } from \"./objects\";\n\nfunction enhanceAntiAliasing(): void {\n  if (isMobile) {\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n  } else {\n    renderer.setPixelRatio(window.devicePixelRatio);\n  }\n  renderer.shadowMap.enabled = true;\n  renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n}\n\nfunction setPixelRatio(): void {\n  const pixelRatio = Math.min(window.devicePixelRatio, isMobile ? 2 : 3);\n  renderer.setPixelRatio(pixelRatio);\n\n  if (DOM_ELEMENTS.mazeContainer) {\n    renderer.setSize(\n      DOM_ELEMENTS.mazeContainer.clientWidth,\n      DOM_ELEMENTS.mazeContainer.clientHeight\n    );\n  } else {\n    renderer.setSize(window.innerWidth, window.innerHeight);\n  }\n}\n\nfunction setupLighting(): void {\n  const ambientLight = new THREE.AmbientLight(0xffffff);\n  scene.add(ambientLight);\n\n  const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n  scene.add(directionalLight);\n  directionalLight.position.set(-5, 15, 10);\n  directionalLight.shadow.mapSize.width = 4096;\n  directionalLight.shadow.mapSize.height = 4096;\n  directionalLight.shadow.camera.left = -20;\n  directionalLight.shadow.camera.right = 20;\n  directionalLight.shadow.camera.top = 20;\n  directionalLight.shadow.camera.bottom = -20;\n  directionalLight.shadow.camera.near = 0.1;\n  directionalLight.shadow.camera.far = 50;\n  directionalLight.shadow.bias = -0.001;\n  directionalLight.shadow.radius = 3;\n  directionalLight.castShadow = true;\n}\n\nexport const scene = new THREE.Scene();\n\nconst renderer = new THREE.WebGLRenderer({\n  antialias: true,\n  alpha: true,\n  powerPreference: \"high-performance\",\n  precision: \"highp\",\n});\n\nconst clock = new THREE.Clock();\nconst frameCallbacks: (() => void)[] = [];\n\nfunction initRenderer(): void {\n  enhanceAntiAliasing();\n\n  if (DOM_ELEMENTS.mazeContainer) {\n    renderer.setSize(\n      DOM_ELEMENTS.mazeContainer.clientWidth,\n      DOM_ELEMENTS.mazeContainer.clientHeight\n    );\n    DOM_ELEMENTS.mazeContainer.appendChild(renderer.domElement);\n  } else {\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n  }\n\n  if (document.readyState === \"loading\") {\n    document.addEventListener(\"DOMContentLoaded\", setPixelRatio);\n  } else {\n    setPixelRatio();\n  }\n  window.addEventListener(\"resize\", setPixelRatio);\n\n  renderer.render(scene, camera);\n}\n\nexport async function setupScene() {\n  initRenderer();\n  setupLighting();\n  await loadModel(scene);\n}\n\nexport function startRenderLoop(): void {\n  const render = () => {\n    // Call all registered frame callbacks\n    frameCallbacks.forEach((callback) => callback());\n\n    // Render the scene\n    renderer.render(scene, camera);\n\n    requestAnimationFrame(render);\n  };\n  render();\n}\n\nexport function onFrame(callback: () => void): void {\n  frameCallbacks.push(callback);\n}\n\nexport { renderer, clock };\n","import * as THREE from \"three\";\nimport { MazePathPoint, PathPoint, CameraPathPoint } from \"../types/types\";\nimport { isMobile } from \"../config/config\";\n\nconst mazeCenterPathPoint = new THREE.Vector3(0.45175, 0.5, 0.55675);\n\nconst cameraStartPoints = {\n  startMobile: new THREE.Vector3(0.5, 2.5, 2.5),\n  startDesktop: new THREE.Vector3(-2, 2.5, 2),\n  secondMobile: new THREE.Vector3(0.5, 2.5, 2),\n  secondDesktop: new THREE.Vector3(-1.5, 3, 2),\n  mobileLookAt: new THREE.Vector3(0.5, 0.5, -1.5),\n  desktopLookAt: new THREE.Vector3(-1.25, 0.5, 0.25),\n};\n\nconst startPosition = isMobile\n  ? cameraStartPoints.startMobile\n  : cameraStartPoints.startDesktop;\nconst secondPosition = isMobile\n  ? cameraStartPoints.secondMobile\n  : cameraStartPoints.secondDesktop;\nconst lookAtPosition = isMobile\n  ? cameraStartPoints.mobileLookAt\n  : cameraStartPoints.desktopLookAt;\n\nconst pacmanHomePathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.0045),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.6025), type: \"straight\" },\n];\n\nconst ghost1HomePathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.75775, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.004, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.0965, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n];\n\nconst ghost2HomePathPoints: MazePathPoint[] = [\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.004, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.502), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.3055, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.3055, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.0965, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n];\n\nconst ghost3HomePathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.75325), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.15475, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.55675, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.009, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.904), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.75775, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.004, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.808, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.75325), type: \"straight\" },\n];\n\nconst ghost4HomePathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.65725, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.15975, 0.55, 0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.6025), type: \"straight\" },\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.4015), type: \"straight\" },\n];\n\nconst ghost5HomePathPoints: MazePathPoint[] = [\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.04975),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.3055, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, -0.101), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.04975),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n];\n\nconst cameraHomeScrollPathPoints: CameraPathPoint[] = [\n  { pos: startPosition, lookAt: lookAtPosition },\n  { pos: secondPosition, lookAt: lookAtPosition },\n  { pos: new THREE.Vector3(0.55675, 3, 0.45175), lookAt: lookAtPosition },\n  { pos: mazeCenterPathPoint, lookAt: lookAtPosition },\n];\n\nconst cameraPOVPathPoints: CameraPathPoint[] = [\n  {\n    pos: new THREE.Vector3(0.55675, -0.5, 0.45175),\n    type: \"curve\",\n    curveType: \"forwardDownArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.607, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.9085, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.85375),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.15525),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.9085, 0.55, 1.2055),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.808, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 1.15525),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 1.05475),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.7075, 0.55, 1.0045),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.205, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.05475),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.15525),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.205, 0.55, 1.2055),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.5065, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 1.306),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 1, 2.0095),\n    type: \"straight\",\n  },\n];\n\nconst ghost1POVPathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.009, 0.55, 0.8035), type: \"straight\" },\n  { pos: new THREE.Vector3(0.9085, 0.55, 0.8035), type: \"straight\" },\n];\n\nconst ghost2POVPathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.009, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 1.15525), type: \"straight\" },\n  { pos: new THREE.Vector3(0.95875, 0.55, 1.05475), type: \"straight\" },\n];\n\nconst ghost3POVPathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.904), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.95425),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.406, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.5065, 0.55, 1.0045), type: \"straight\" },\n];\n\nconst ghost4POVPathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(0.15475, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.05475),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.205, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.3055, 0.55, 1.0045), type: \"straight\" },\n];\n\nconst ghost5POVPathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(0.55675, 0.55, 1.306), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 1.25575),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.5065, 0.55, 1.2055), type: \"straight\" },\n  { pos: new THREE.Vector3(0.406, 0.55, 1.2055), type: \"straight\" },\n];\n\nconst staticPathPoints = {\n  pacmanHome: pacmanHomePathPoints,\n  ghost1Home: ghost1HomePathPoints,\n  ghost2Home: ghost2HomePathPoints,\n  ghost3Home: ghost3HomePathPoints,\n  ghost4Home: ghost4HomePathPoints,\n  ghost5Home: ghost5HomePathPoints,\n  cameraHomeScroll: cameraHomeScrollPathPoints,\n  cameraPOV: cameraPOVPathPoints,\n  ghost1POV: ghost1POVPathPoints,\n  ghost2POV: ghost2POVPathPoints,\n  ghost3POV: ghost3POVPathPoints,\n  ghost4POV: ghost4POVPathPoints,\n  ghost5POV: ghost5POVPathPoints,\n};\n\nexport function getPathPointsWithScroll(\n  pacman: THREE.Object3D,\n  ghosts: Record<string, THREE.Object3D>\n) {\n  const scrollPathPoints: Record<string, PathPoint[]> = {};\n\n  Object.entries({ pacman, ...ghosts }).forEach(([key, obj]) => {\n    const pausedPos = obj.position.clone();\n    const arcPoint = new THREE.Vector3(\n      (pausedPos.x + mazeCenterPathPoint.x) / 2,\n      1,\n      (pausedPos.z + mazeCenterPathPoint.z) / 2\n    );\n\n    scrollPathPoints[`${key}HomeScroll`] = [\n      { pos: pausedPos },\n      { pos: arcPoint },\n      { pos: mazeCenterPathPoint },\n    ];\n  });\n\n  return {\n    ...staticPathPoints,\n    ...scrollPathPoints,\n  };\n}\n","import * as THREE from \"three\";\nimport { MazePathPoint, PathPoint, CameraPathPoint } from \"../types/types\";\nimport { getPathPointsWithScroll } from \"./pathpoints\";\n\nexport function createHomeScrollPaths(\n  pacman: THREE.Object3D,\n  ghosts: Record<string, THREE.Object3D>\n): Record<string, THREE.CurvePath<THREE.Vector3>> {\n  const paths: Record<string, THREE.CurvePath<THREE.Vector3>> = {};\n\n  const objects = { pacman, ...ghosts };\n\n  Object.entries(objects).forEach(([key, obj]) => {\n    if (!obj) return;\n\n    const path = new THREE.CurvePath<THREE.Vector3>();\n    paths[key] = path;\n  });\n\n  return paths;\n}\n\nfunction createPath(pathPoints: PathPoint[]): THREE.CurvePath<THREE.Vector3> {\n  const path = new THREE.CurvePath<THREE.Vector3>();\n\n  const curve = new THREE.QuadraticBezierCurve3(\n    pathPoints[0].pos,\n    pathPoints[1].pos,\n    pathPoints[2].pos\n  );\n\n  path.add(curve);\n  return path;\n}\n\nfunction createMazePath(\n  pathPoints: MazePathPoint[]\n): THREE.CurvePath<THREE.Vector3> {\n  const path = new THREE.CurvePath<THREE.Vector3>();\n\n  for (let i = 0; i < pathPoints.length - 1; i++) {\n    const current = pathPoints[i];\n    const next = pathPoints[i + 1];\n\n    if (current.type === \"straight\") {\n      path.add(new THREE.LineCurve3(current.pos, next.pos));\n    } else if (current.type === \"curve\") {\n      const hasPrevCurve = i > 0 && pathPoints[i - 1].type === \"curve\";\n      const hasNextCurve =\n        i < pathPoints.length - 2 && pathPoints[i + 1].type === \"curve\";\n\n      const midPoint =\n        hasPrevCurve || hasNextCurve\n          ? createSmoothMidPoint(current, next, hasPrevCurve, hasNextCurve)\n          : createSimpleMidPoint(current, next);\n\n      path.add(\n        new THREE.QuadraticBezierCurve3(current.pos, midPoint, next.pos)\n      );\n    }\n  }\n  return path;\n}\n\nfunction createSimpleMidPoint(\n  current: MazePathPoint,\n  next: MazePathPoint\n): THREE.Vector3 {\n  const { curveType } = current;\n\n  if (curveType === \"upperArc\") {\n    return new THREE.Vector3(current.pos.x, current.pos.y, next.pos.z);\n  } else if (curveType === \"lowerArc\") {\n    return new THREE.Vector3(next.pos.x, current.pos.y, current.pos.z);\n  } else if (curveType === \"forwardDownArc\") {\n    return new THREE.Vector3(current.pos.x, next.pos.y, current.pos.z);\n  } else {\n    return new THREE.Vector3(current.pos.x, current.pos.y, next.pos.z);\n  }\n}\n\nfunction createSmoothMidPoint(\n  current: MazePathPoint,\n  next: MazePathPoint,\n  hasPrevCurve: boolean,\n  hasNextCurve: boolean\n): THREE.Vector3 {\n  const smoothingFactor = 0.3;\n  const originalMidPoint = createSimpleMidPoint(current, next);\n  const straightMidPoint = current.pos.clone().lerp(next.pos, 0.5);\n\n  const stretchFactor =\n    hasPrevCurve && hasNextCurve ? smoothingFactor * 2 : smoothingFactor;\n  return originalMidPoint.clone().lerp(straightMidPoint, stretchFactor);\n}\n\nexport function updateObjectHomeScrollPaths(\n  pacman: THREE.Object3D,\n  ghosts: Record<string, THREE.Object3D>\n): Record<string, THREE.CurvePath<THREE.Vector3>> {\n  const allPathPoints = getPathPointsWithScroll(pacman, ghosts) as Record<\n    string,\n    any\n  >;\n\n  const scrollPaths: Record<string, THREE.CurvePath<THREE.Vector3>> = {};\n\n  scrollPaths.pacmanHomeScroll = createPath(allPathPoints.pacmanHomeScroll);\n  scrollPaths.ghost1HomeScroll = createPath(allPathPoints.ghost1HomeScroll);\n  scrollPaths.ghost2HomeScroll = createPath(allPathPoints.ghost2HomeScroll);\n  scrollPaths.ghost3HomeScroll = createPath(allPathPoints.ghost3HomeScroll);\n  scrollPaths.ghost4HomeScroll = createPath(allPathPoints.ghost4HomeScroll);\n  scrollPaths.ghost5HomeScroll = createPath(allPathPoints.ghost5HomeScroll);\n\n  return scrollPaths;\n}\n\nexport function createScrollPaths(\n  pathPoints: PathPoint[]\n): THREE.CurvePath<THREE.Vector3> {\n  const path = new THREE.CurvePath<THREE.Vector3>();\n\n  const curve = new THREE.QuadraticBezierCurve3(\n    pathPoints[0].pos,\n    pathPoints[1].pos,\n    pathPoints[2].pos\n  );\n\n  path.add(curve);\n  return path;\n}\n\nexport function getPathsForSection(\n  section: string,\n  pacman: THREE.Object3D,\n  ghosts: Record<string, THREE.Object3D>\n) {\n  const allPaths = getAllPaths(pacman, ghosts);\n\n  if (section === \"home\") {\n    return {\n      pacman: allPaths.pacmanHome,\n      ghost1: allPaths.ghost1Home,\n      ghost2: allPaths.ghost2Home,\n      ghost3: allPaths.ghost3Home,\n      ghost4: allPaths.ghost4Home,\n      ghost5: allPaths.ghost5Home,\n    };\n  } else if (section === \"pov\") {\n    return {\n      pacman: allPaths.cameraPOV,\n      ghost1: allPaths.ghost1POV,\n      ghost2: allPaths.ghost2POV,\n      ghost3: allPaths.ghost3POV,\n      ghost4: allPaths.ghost4POV,\n      ghost5: allPaths.ghost5POV,\n    };\n  }\n  return {};\n}\n\nfunction createCameraPath(\n  pathPoints: CameraPathPoint[]\n): THREE.CurvePath<THREE.Vector3> {\n  const path = new THREE.CurvePath<THREE.Vector3>();\n\n  for (let i = 0; i < pathPoints.length - 1; i++) {\n    const current = pathPoints[i];\n    const next = pathPoints[i + 1];\n\n    path.add(new THREE.LineCurve3(current.pos, next.pos));\n  }\n  return path;\n}\n\nexport function getAllPaths(\n  pacman: THREE.Object3D,\n  ghosts: Record<string, THREE.Object3D>\n): Record<string, THREE.CurvePath<THREE.Vector3>> {\n  const allPathPoints = getPathPointsWithScroll(pacman, ghosts) as Record<\n    string,\n    any\n  >;\n\n  return {\n    pacmanHome: createMazePath(allPathPoints.pacmanHome),\n    ghost1Home: createMazePath(allPathPoints.ghost1Home),\n    ghost2Home: createMazePath(allPathPoints.ghost2Home),\n    ghost3Home: createMazePath(allPathPoints.ghost3Home),\n    ghost4Home: createMazePath(allPathPoints.ghost4Home),\n    ghost5Home: createMazePath(allPathPoints.ghost5Home),\n\n    cameraPOV: createCameraPath(allPathPoints.cameraPOV),\n    ghost1POV: createMazePath(allPathPoints.ghost1POV),\n    ghost2POV: createMazePath(allPathPoints.ghost2POV),\n    ghost3POV: createMazePath(allPathPoints.ghost3POV),\n    ghost4POV: createMazePath(allPathPoints.ghost4POV),\n    ghost5POV: createMazePath(allPathPoints.ghost5POV),\n\n    cameraHomeScroll: createCameraHomeScrollPath(\n      allPathPoints.cameraHomeScroll\n    ),\n    pacmanHomeScroll: createPath(allPathPoints.pacmanHomeScroll),\n    ghost1HomeScroll: createPath(allPathPoints.ghost1HomeScroll),\n    ghost2HomeScroll: createPath(allPathPoints.ghost2HomeScroll),\n    ghost3HomeScroll: createPath(allPathPoints.ghost3HomeScroll),\n    ghost4HomeScroll: createPath(allPathPoints.ghost4HomeScroll),\n    ghost5HomeScroll: createPath(allPathPoints.ghost5HomeScroll),\n  };\n}\n\nfunction createCameraHomeScrollPath(\n  pathPoints: any\n): THREE.CurvePath<THREE.Vector3> {\n  const path = new THREE.CurvePath<THREE.Vector3>();\n\n  const curve = new THREE.CubicBezierCurve3(\n    pathPoints.start,\n    pathPoints.second,\n    pathPoints.highPoint,\n    pathPoints.end\n  );\n\n  path.add(curve);\n  return path;\n}\n\nexport function getCameraPositionAndRotation(\n  pathPoints: CameraPathPoint[],\n  t: number\n): { position: THREE.Vector3; rotation: THREE.Euler } {\n  const path = createCameraPath(pathPoints);\n  const position = path.getPointAt(t);\n\n  const totalPoints = pathPoints.length;\n  const currentIndex = Math.floor(t * (totalPoints - 1));\n  const nextIndex = Math.min(currentIndex + 1, totalPoints - 1);\n  const localT = t * (totalPoints - 1) - currentIndex;\n\n  const currentPoint = pathPoints[currentIndex];\n  const nextPoint = pathPoints[nextIndex];\n\n  let rotation: THREE.Euler;\n\n  // Type guards to determine rotation method\n  const isTangentPoint = (\n    point: CameraPathPoint\n  ): point is {\n    pos: THREE.Vector3;\n    type: \"straight\" | \"curve\";\n    curveType?: \"upperArc\" | \"lowerArc\" | \"forwardDownArc\";\n  } => {\n    return \"type\" in point;\n  };\n\n  const isLookAtPoint = (\n    point: CameraPathPoint\n  ): point is { pos: THREE.Vector3; lookAt: THREE.Vector3 } => {\n    return \"lookAt\" in point;\n  };\n\n  const isRotationPoint = (\n    point: CameraPathPoint\n  ): point is { pos: THREE.Vector3; rotation: THREE.Euler } => {\n    return \"rotation\" in point;\n  };\n\n  // Handle different rotation methods\n  if (isTangentPoint(currentPoint) && isTangentPoint(nextPoint)) {\n    // Use path tangent for rotation\n    const tangent = path.getTangentAt(t);\n    rotation = new THREE.Euler(0, Math.atan2(tangent.x, tangent.z), 0);\n  } else if (isLookAtPoint(currentPoint) && isLookAtPoint(nextPoint)) {\n    // Interpolate lookAt points and calculate rotation\n    const currentLookAt = currentPoint.lookAt;\n    const nextLookAt = nextPoint.lookAt;\n    const interpolatedLookAt = currentLookAt.clone().lerp(nextLookAt, localT);\n\n    // Calculate rotation from position to lookAt\n    const direction = interpolatedLookAt.clone().sub(position).normalize();\n    rotation = new THREE.Euler(0, Math.atan2(direction.x, direction.z), 0);\n  } else if (isRotationPoint(currentPoint) && isRotationPoint(nextPoint)) {\n    const currentRotation = currentPoint.rotation;\n    const nextRotation = nextPoint.rotation;\n    rotation = new THREE.Euler(\n      THREE.MathUtils.lerp(currentRotation.x, nextRotation.x, localT),\n      THREE.MathUtils.lerp(currentRotation.y, nextRotation.y, localT),\n      THREE.MathUtils.lerp(currentRotation.z, nextRotation.z, localT)\n    );\n  } else {\n    // Fallback: use tangent\n    const tangent = path.getTangentAt(t);\n    rotation = new THREE.Euler(0, Math.atan2(tangent.x, tangent.z), 0);\n  }\n\n  return { position, rotation };\n}\n","import * as THREE from \"three\";\nimport { pacman, ghosts, pacmanMixer } from \"../core/objects\";\nimport { getAllPaths } from \"../paths/paths\";\nimport { clock } from \"../core/scene\";\n\nconst pathMapping = {\n  pacman: \"pacmanHome\",\n  ghost1: \"ghost1Home\",\n  ghost2: \"ghost2Home\",\n  ghost3: \"ghost3Home\",\n  ghost4: \"ghost4Home\",\n  ghost5: \"ghost5Home\",\n} as const;\n\nconst LOOP_DURATION = 40;\n\nlet isHomeLoopActive = true;\nlet isPaused = false;\nlet pauseStartTime = 0;\nlet totalPausedTime = 0;\n\nexport function startHomeLoop() {\n  isHomeLoopActive = true;\n  if (isPaused) {\n    const currentTime = performance.now() / 1000;\n    totalPausedTime += currentTime - pauseStartTime;\n    isPaused = false;\n  }\n}\n\nexport function stopHomeLoop() {\n  isHomeLoopActive = false;\n  isPaused = true;\n  pauseStartTime = performance.now() / 1000;\n}\n\nexport function setupScrollHandling() {\n  let wasAtTop = true;\n\n  window.addEventListener(\"scroll\", () => {\n    const isAtTop = window.scrollY === 0;\n\n    if (wasAtTop && !isAtTop) {\n      stopHomeLoop();\n    }\n    wasAtTop = isAtTop;\n  });\n}\n\nexport function updateHomeLoop() {\n  if (!isHomeLoopActive) return;\n  const currentTime = performance.now() / 1000;\n  const adjustedTime = currentTime - totalPausedTime;\n  const globalTime = adjustedTime % LOOP_DURATION;\n  const t = globalTime / LOOP_DURATION;\n\n  const allPaths = getAllPaths(pacman, ghosts);\n\n  Object.entries(ghosts).forEach(([key, ghost]) => {\n    const pathKey = pathMapping[key as keyof typeof pathMapping];\n    const path = (allPaths as any)[pathKey];\n    if (!path) return;\n    const position = path.getPointAt(t);\n    if (!position) return;\n    const tangent = path.getTangentAt(t);\n    if (!tangent || tangent.length() === 0) return;\n\n    ghost.position.copy(position);\n\n    const objectType = key === \"pacman\" ? \"pacman\" : \"ghost\";\n    calculateObjectOrientation(ghost, tangent, objectType);\n  });\n\n  const delta = clock.getDelta();\n  if (pacmanMixer) {\n    pacmanMixer.update(delta);\n  }\n}\n\nexport function calculateObjectOrientation(\n  object: THREE.Object3D,\n  tangent: THREE.Vector3,\n  objectType: \"pacman\" | \"ghost\" | \"camera\" = \"ghost\"\n): void {\n  if (!tangent || tangent.length() === 0) return;\n\n  const targetRotation = Math.atan2(tangent.x, tangent.z);\n\n  if (objectType === \"pacman\") {\n    object.rotation.set(Math.PI / 2, Math.PI, targetRotation + Math.PI / 2);\n  } else if (objectType === \"ghost\") {\n    object.rotation.set(0, targetRotation, 0);\n  } else if (objectType === \"camera\") {\n    const lookAtPoint = object.position.clone().add(tangent);\n    object.lookAt(lookAtPoint);\n  }\n}\n","import { setupScene, startRenderLoop, onFrame } from \"./core/scene\";\nimport { updateHomeLoop } from \"./animation/HomeLoop\";\n\nasync function main() {\n  await setupScene();\n\n  // Register frame callbacks\n  onFrame(updateHomeLoop);\n\n  // Start the render loop\n  startRenderLoop();\n}\n\nmain();\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","THREE","isMobile","window","innerWidth","DOM_ELEMENTS","mazeContainer","document","querySelector","canvas","homeSection","introSection","povSection","finalSection","finalContainer","parentElements","querySelectorAll","gsap","ScrollTrigger","camera","innerHeight","quaternion","clone","setFromEuler","mazeTexture","load","mazeMaterial","matcap","topMaterial","color","metalness","roughness","envMapIntensity","ghostMaterial","opacity","transparent","depthWrite","depthTest","blending","side","transmission","floorMaterial","pacmanMaterials","blue","white","default","materialMap","CAM_Pacman_Backframe","CAM_Pacman_Logo_1","CAM_Pacman_Logo_2","loader","Array","fill","pacmanMixer","pacman","ghosts","ghost1","ghost2","ghost3","ghost4","ghost5","ghostContainers","Ghost_EUR","Ghost_CHF","Ghost_YEN","Ghost_USD","Ghost_GBP","setPixelRatio","pixelRatio","Math","min","devicePixelRatio","renderer","setSize","clientWidth","clientHeight","scene","antialias","alpha","powerPreference","precision","clock","frameCallbacks","async","setupScene","shadowMap","enabled","type","appendChild","domElement","body","readyState","addEventListener","render","ambientLight","add","directionalLight","position","set","shadow","mapSize","width","height","left","right","top","bottom","near","far","bias","radius","castShadow","setupLighting","values","forEach","ghost","Promise","resolve","reject","gltf","model","traverse","child","name","children","subChild","isMesh","material","push","visible","item","scale","rotation","PI","pacmanActions","animations","clip","action","clipAction","setEffectiveWeight","play","ghostContainer","ghostGroup","z","x","startsWith","includes","console","warn","clonedChild","y","receiveShadow","node","progress","error","loadModel","mazeCenterPathPoint","cameraStartPoints","startMobile","startDesktop","secondMobile","secondDesktop","mobileLookAt","desktopLookAt","startPosition","secondPosition","lookAtPosition","staticPathPoints","pacmanHome","pos","curveType","ghost1Home","ghost2Home","ghost3Home","ghost4Home","ghost5Home","cameraHomeScroll","lookAt","cameraPOV","ghost1POV","ghost2POV","ghost3POV","ghost4POV","ghost5POV","createPath","pathPoints","path","curve","createMazePath","i","length","current","next","hasPrevCurve","hasNextCurve","midPoint","createSmoothMidPoint","createSimpleMidPoint","originalMidPoint","straightMidPoint","lerp","stretchFactor","smoothingFactor","createCameraPath","createCameraHomeScrollPath","start","second","highPoint","end","pathMapping","updateHomeLoop","t","performance","now","allPaths","allPathPoints","scrollPathPoints","entries","pausedPos","arcPoint","pacmanHomeScroll","ghost1HomeScroll","ghost2HomeScroll","ghost3HomeScroll","ghost4HomeScroll","ghost5HomeScroll","getAllPaths","getPointAt","tangent","getTangentAt","copy","object","objectType","targetRotation","atan2","lookAtPoint","calculateObjectOrientation","delta","getDelta","update","callback","requestAnimationFrame","startRenderLoop","main"],"sourceRoot":""}