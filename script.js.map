{"version":3,"file":"script.js","mappings":"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","sources":["webpack://cam-3d-animation/webpack/bootstrap","webpack://cam-3d-animation/webpack/runtime/compat get default export","webpack://cam-3d-animation/webpack/runtime/define property getters","webpack://cam-3d-animation/webpack/runtime/hasOwnProperty shorthand","webpack://cam-3d-animation/external var \"THREE\"","webpack://cam-3d-animation/./src/config/config.ts","webpack://cam-3d-animation/./src/config/dom-elements.ts","webpack://cam-3d-animation/external var \"gsap\"","webpack://cam-3d-animation/external var \"ScrollTrigger\"","webpack://cam-3d-animation/./src/paths/pathpoints.ts","webpack://cam-3d-animation/./src/core/camera.ts","webpack://cam-3d-animation/./src/core/scene.ts","webpack://cam-3d-animation/./src/core/materials.ts","webpack://cam-3d-animation/./src/core/objects.ts","webpack://cam-3d-animation/./src/paths/paths.ts","webpack://cam-3d-animation/./src/animation/util.ts","webpack://cam-3d-animation/./src/animation/home-scroll.ts","webpack://cam-3d-animation/./src/animation/home-loop.ts","webpack://cam-3d-animation/./src/animation/pov-scroll.ts","webpack://cam-3d-animation/./src/main.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = THREE;","export const isMobile = window.innerWidth < 768;\n\nexport const ASSETS = {\n  mazeTexture: \"https://c-am.b-cdn.net/CAM/matcap24.png\",\n  mazeModel: \"https://c-am.b-cdn.net/CAM/c-am-assets-3.glb\",\n};\n","const SELECTORS = {\n  mazeContainer: \".el--home-maze.el\",\n  canvas: \"canvas\",\n\n  homeSection: \".sc--home.sc\",\n  introSection: \".sc--intro.sc\",\n  povSection: \".sc--pov.sc\",\n  finalSection: \".sc--final.sc\",\n  finalContainer: \".cr--final.cr\",\n\n  scrollComponent: \".cmp--scroll.cmp\",\n  parentElements: \".cmp--pov.cmp\",\n\n  pov: \".pov\",\n  cam: \".cam\",\n};\n\nexport const DOM_ELEMENTS = {\n  mazeContainer: document.querySelector(SELECTORS.mazeContainer) as HTMLElement,\n  canvas: document.querySelector(SELECTORS.canvas) as HTMLCanvasElement,\n\n  homeSection: document.querySelector(SELECTORS.homeSection) as HTMLElement,\n  introSection: document.querySelector(SELECTORS.introSection) as HTMLElement,\n  povSection: document.querySelector(SELECTORS.povSection) as HTMLElement,\n  finalSection: document.querySelector(SELECTORS.finalSection) as HTMLElement,\n  finalContainer: document.querySelector(\n    SELECTORS.finalContainer\n  ) as HTMLElement,\n\n  parentElements: document.querySelectorAll(\n    SELECTORS.parentElements\n  ) as NodeListOf<Element>,\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = gsap;","const __WEBPACK_NAMESPACE_OBJECT__ = ScrollTrigger;","import * as THREE from \"three\";\nimport { MazePathPoint, PathPoint, CameraPathPoint } from \"../types/types\";\nimport { isMobile } from \"../config/config\";\n\n// TODO - add curveCheckPoints to all curves where needed\n\nconst objectHomeScrollEndPathPoint = new THREE.Vector3(0.55675, 0.35, 0.45175);\n\nconst cameraPathPointsConfig = {\n  startMobile: new THREE.Vector3(0.5, 2.5, 2.5),\n  startDesktop: new THREE.Vector3(-2, 2.5, 2),\n  secondMobile: new THREE.Vector3(0.5, 2.5, 2),\n  secondDesktop: new THREE.Vector3(-1.5, 3, 0.75),\n  mobileLookAt: new THREE.Vector3(0.5, 0.5, -1.5),\n  desktopLookAt: new THREE.Vector3(-1.25, 0.5, 0.25),\n  cameraLookAtSecondDesktop: new THREE.Vector3(-0.75, 0.5, -0.75),\n  cameraLookAtSecondMobile: new THREE.Vector3(-0.75, 0.5, -0.75), // TODO\n\n  cameraHomeScrollEndLookAt: new THREE.Vector3(0.55675, -5, 0.35),\n  thirdPosition: new THREE.Vector3(0.55675, 3, 0.45175),\n\n  cameraHomeScrollEndPathPoint: new THREE.Vector3(0.55675, 0.5, 0.45175),\n};\n\n// determine positions and look at - changed if is mobile\nconst startPosition = isMobile\n  ? cameraPathPointsConfig.startMobile\n  : cameraPathPointsConfig.startDesktop;\nconst secondPosition = isMobile\n  ? cameraPathPointsConfig.secondMobile\n  : cameraPathPointsConfig.secondDesktop;\nconst lookAtPosition = isMobile\n  ? cameraPathPointsConfig.mobileLookAt\n  : cameraPathPointsConfig.desktopLookAt;\nconst cameraLookAtSecondPosition = isMobile\n  ? cameraPathPointsConfig.cameraLookAtSecondMobile\n  : cameraPathPointsConfig.cameraLookAtSecondDesktop;\n\nconst thirdPosition = cameraPathPointsConfig.thirdPosition;\nconst cameraHomeScrollEndLookAt =\n  cameraPathPointsConfig.cameraHomeScrollEndLookAt;\nconst cameraHomeScrollEndPathPoint =\n  cameraPathPointsConfig.cameraHomeScrollEndPathPoint;\n\nconst pacmanHomePathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.301),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, -0.2015),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, -0.0005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, -0.2015),\n    type: \"straight\",\n    curveCheckPoints: [\n      new THREE.Vector3(-0.34775, 0.55, -0.2015),\n      new THREE.Vector3(-0.44825, 0.55, -0.101),\n      new THREE.Vector3(-0.44825, 0.55, -0.05075),\n      new THREE.Vector3(-0.398, 0.55, -0.0005),\n      new THREE.Vector3(-0.34775, 0.55, 0.04975),\n    ],\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.1),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.4015),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.6025),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.8035),\n    type: \"straight\",\n    curveCheckPoints: [\n      new THREE.Vector3(-0.24725, 0.55, 0.8035),\n      new THREE.Vector3(-0.34775, 0.55, 0.904),\n      new THREE.Vector3(-0.398, 0.55, 1.0045),\n      new THREE.Vector3(-0.44825, 0.55, 1.105),\n      new THREE.Vector3(-0.34775, 0.55, 1.2055),\n      new THREE.Vector3(-0.24725, 0.55, 1.2055),\n    ],\n  },\n  /*  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n    curveCheckPoints: [\n      new THREE.Vector3(-0.2975, 0.55, 0.8035),\n      new THREE.Vector3(-0.34775, 0.55, 0.904),\n      new THREE.Vector3(-0.398, 0.55, 1.0045),\n      new THREE.Vector3(-0.44825, 0.55, 1.05475),\n    ],\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 1.105),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },*/\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 1.0045),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.0045),\n    type: \"straight\",\n    curveCheckPoints: [\n      new THREE.Vector3(0.65725, 0.55, 1.0045),\n      new THREE.Vector3(0.75775, 0.55, 0.904),\n      new THREE.Vector3(0.7075, 0.55, 0.8035),\n      new THREE.Vector3(0.65725, 0.55, 0.75325),\n      new THREE.Vector3(0.55675, 0.55, 0.703),\n      new THREE.Vector3(0.45625, 0.55, 0.75325),\n      new THREE.Vector3(0.35575, 0.55, 0.8035),\n      new THREE.Vector3(0.25525, 0.55, 0.703),\n      new THREE.Vector3(0.25525, 0.55, 0.65275),\n    ],\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.6025),\n    type: \"straight\",\n  },\n];\n\nconst ghost1HomePathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 0.301),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.2005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.1),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, -0.0005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n    curveCheckPoints: [\n      new THREE.Vector3(0.40575, 0.55, 0.8035),\n      new THREE.Vector3(0.45625, 0.55, 0.75325),\n      new THREE.Vector3(0.55675, 0.55, 0.703),\n      new THREE.Vector3(0.65725, 0.55, 0.75325),\n      new THREE.Vector3(0.70775, 0.55, 0.8035),\n    ],\n  },\n\n  { pos: new THREE.Vector3(0.75775, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n    curveCheckPoints: [\n      new THREE.Vector3(1.00875, 0.55, 0.8035),\n      new THREE.Vector3(1.05925, 0.55, 0.75325),\n      new THREE.Vector3(1.15975, 0.55, 0.703),\n      new THREE.Vector3(1.26025, 0.55, 0.75325),\n      new THREE.Vector3(1.31075, 0.55, 0.8035),\n    ],\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.301),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.502),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"upperArc\",\n    curveCheckPoints: [new THREE.Vector3(0.004, 0.55, 0.8035)],\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 1.0045),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.0965, 0.55, 1.0045),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n];\n\nconst ghost2HomePathPoints: MazePathPoint[] = [\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    arc: \"upperArc\",\n    curveCheckPoints: [new THREE.Vector3(0.004, 0.55, 0.8035)],\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.6025),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.4015),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.502), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"upperArc\",\n    curveCheckPoints: [\n      new THREE.Vector3(0.3055, 0.55, 0.8035),\n      new THREE.Vector3(0.35575, 0.55, 0.904),\n    ],\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 1.105),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 1.2055),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.1),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, -0.0005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.1),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.2005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    arc: \"lowerArc\",\n    curveCheckPoints: [new THREE.Vector3(0.65725, 0.55, -0.15125)],\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"upperArc\",\n    curveCheckPoints: [new THREE.Vector3(0.3055, 0.55, 0.8035)],\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.904),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 1.0045),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    arc: \"upperArc\",\n    curveCheckPoints: [\n      new THREE.Vector3(-0.0965, 0.55, 1.0045),\n      new THREE.Vector3(-0.04625, 0.55, 0.904),\n    ],\n  },\n];\n\nconst ghost3HomePathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.75325), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    arc: \"lowerArc\",\n    curveCheckPoints: [\n      new THREE.Vector3(0.65725, 0.55, -0.15125),\n      new THREE.Vector3(0.55675, 0.55, -0.101),\n      new THREE.Vector3(0.45625, 0.55, -0.15125),\n    ],\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, -0.2015),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.15475, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, -0.0005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.55675, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.2005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n    curveCheckPoints: [\n      new THREE.Vector3(1.26025, 0.55, 0.75325),\n      new THREE.Vector3(1.15975, 0.55, 0.703),\n      new THREE.Vector3(1.05925, 0.55, 0.75325),\n      new THREE.Vector3(1.009, 0.55, 0.8035),\n    ],\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.904), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.105),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 1.2055),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.75775, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    arc: \"upperArc\",\n    curveCheckPoints: [\n      new THREE.Vector3(0.7075, 0.55, 0.8035),\n      new THREE.Vector3(0.65725, 0.55, 0.75325),\n      new THREE.Vector3(0.45625, 0.55, 0.75325),\n    ],\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"upperArc\",\n    curveCheckPoints: [new THREE.Vector3(0.004, 0.55, 0.8035)],\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.808, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.75325), type: \"straight\" },\n];\n\nconst ghost4HomePathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.65725, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 1.0045),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 1.2055),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 1.105),\n    type: \"curve\",\n    arc: \"upperArc\",\n    curveCheckPoints: [\n      new THREE.Vector3(-0.398, 0.55, 1.0045),\n      new THREE.Vector3(-0.34775, 0.55, 0.904),\n      new THREE.Vector3(-0.398, 0.55, 0.8035),\n    ],\n  },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 0.301),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.4015),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.301),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.2005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, -0.2015),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.15975, 0.55, 0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.0005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, -0.2015),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.0005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n    curveCheckPoints: [new THREE.Vector3(1.26025, 0.55, 0.75325)],\n  },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.6025), type: \"straight\" },\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.4015), type: \"straight\" },\n];\n\nconst ghost5HomePathPoints: MazePathPoint[] = [\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.04975),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.0005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, -0.2015),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 0.0005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.1),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.4015),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.3055, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.904),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.904),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.105),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 1.2055),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, -0.2015),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, -0.101), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.1),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.2005),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, -0.15125),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, -0.101),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.04975),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n];\n\nconst cameraHomeScrollPathPoints: CameraPathPoint[] = [\n  //{ pos: startPosition, lookAt: lookAtPosition },\n  { pos: thirdPosition, lookAt: cameraHomeScrollEndLookAt },\n  { pos: secondPosition, lookAt: cameraLookAtSecondPosition },\n  { pos: thirdPosition, lookAt: cameraHomeScrollEndLookAt },\n  { pos: cameraHomeScrollEndPathPoint, lookAt: cameraHomeScrollEndLookAt },\n];\n\nconst cameraPOVPathPoints: MazePathPoint[] = [\n  {\n    pos: new THREE.Vector3(0.55675, 0.5, 0.45175),\n    type: \"curve\",\n    arc: \"forwardDownArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.6025),\n    type: \"curve\",\n    arc: \"upperArc\",\n    curveCheckPoints: [\n      new THREE.Vector3(0.55675, 0.55, 0.6525),\n      new THREE.Vector3(0.607, 0.55, 0.703),\n      new THREE.Vector3(0.65725, 0.55, 0.75325),\n      new THREE.Vector3(0.7075, 0.55, 0.8035),\n    ],\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.8035),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.9085, 0.55, 0.8035),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.85375),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.15525),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.9085, 0.55, 1.2055),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.808, 0.55, 1.2055),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 1.15525),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 1.05475),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.7075, 0.55, 1.0045),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.205, 0.55, 1.0045),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.05475),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.15525),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.205, 0.55, 1.2055),\n    type: \"straight\",\n  },\n  {\n    pos: new THREE.Vector3(0.5065, 0.55, 1.2055),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 1.306),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 1, 2.0095),\n    type: \"straight\",\n  },\n];\n\nconst ghost1POVPathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.75325),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.009, 0.55, 0.8035), type: \"straight\" },\n  { pos: new THREE.Vector3(0.9085, 0.55, 0.8035), type: \"straight\" },\n];\n\nconst ghost2POVPathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.009, 0.55, 1.2055),\n    type: \"curve\",\n    arc: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 1.15525), type: \"straight\" },\n  { pos: new THREE.Vector3(0.95875, 0.55, 1.05475), type: \"straight\" },\n];\n\nconst ghost3POVPathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.904), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.95425),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.406, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.5065, 0.55, 1.0045), type: \"straight\" },\n];\n\nconst ghost4POVPathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(0.15475, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.05475),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.205, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.3055, 0.55, 1.0045), type: \"straight\" },\n];\n\nconst ghost5POVPathPoints: MazePathPoint[] = [\n  { pos: new THREE.Vector3(0.55675, 0.55, 1.306), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 1.25575),\n    type: \"curve\",\n    arc: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.5065, 0.55, 1.2055), type: \"straight\" },\n  { pos: new THREE.Vector3(0.406, 0.55, 1.2055), type: \"straight\" },\n];\n\n// start position, end position, ghost fade: 10, 20, cam fade: 50, 60, text start fade out: 90\n\nexport const povTriggerPositions = {\n  ghost1: {\n    triggerPos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    ghostStartFadeIn: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    ghostEndFadeIn: new THREE.Vector3(0.725, 0.55, 0.8035),\n    ghostStartFadeOut: new THREE.Vector3(0.75, 0.55, 0.8035),\n    camStartFadeIn: new THREE.Vector3(0.75775, 0.55, 0.8035),\n    camEndFadeIn: new THREE.Vector3(0.775, 0.55, 0.8035),\n    camStartFadeOut: new THREE.Vector3(0.84, 0.55, 0.8035),\n    endPosition: new THREE.Vector3(0.85825, 0.55, 0.8035),\n  },\n  ghost2: {\n    triggerPos: new THREE.Vector3(0.9085, 0.55, 0.8035),\n    ghostStartFadeIn: new THREE.Vector3(0.95875, 0.55, 0.85375),\n    ghostEndFadeIn: new THREE.Vector3(0.95875, 0.55, 0.875),\n    ghostStartFadeOut: new THREE.Vector3(0.95875, 0.55, 0.89),\n    camStartFadeIn: new THREE.Vector3(0.95875, 0.55, 0.904),\n    camEndFadeIn: new THREE.Vector3(0.95875, 0.55, 0.93),\n    camStartFadeOut: new THREE.Vector3(0.95875, 0.55, 0.9975),\n    endPosition: new THREE.Vector3(0.95875, 0.55, 1.0045),\n  },\n  // ghost3: {\n  //   triggerPos: new THREE.Vector3(0.75775, 0.55, 1.05475),\n  //   ghostTextPos: new THREE.Vector3(0.7075, 0.55, 1.0045),\n  //   camTextPos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n  //   endPosition: new THREE.Vector3(0.55675, 0.55, 1.0045),\n  // },\n  // ghost4: {\n  //   triggerPos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n  //   ghostTextPos: new THREE.Vector3(0.5065, 0.55, 1.0045),\n  //   camTextPos: new THREE.Vector3(0.45625, 0.55, 1.0045),\n  //   endPosition: new THREE.Vector3(0.35575, 0.55, 1.0045),\n  // },\n  // ghost5: {\n  //   triggerPos: new THREE.Vector3(0.15475, 0.55, 1.15525),\n  //   ghostTextPos: new THREE.Vector3(0.205, 0.55, 1.2055),\n  //   camTextPos: new THREE.Vector3(0.25525, 0.55, 1.2055),\n  //   endPosition: new THREE.Vector3(0.35575, 0.55, 1.2055),\n  // },\n};\n\nexport function getStartPosition() {\n  return startPosition;\n}\n\nexport function getSecondPosition() {\n  return secondPosition;\n}\n\nexport function getLookAtPosition() {\n  return lookAtPosition;\n}\n\nexport const homePaths = {\n  pacman: pacmanHomePathPoints,\n  ghost1: ghost1HomePathPoints,\n  ghost2: ghost2HomePathPoints,\n  ghost3: ghost3HomePathPoints,\n  ghost4: ghost4HomePathPoints,\n  ghost5: ghost5HomePathPoints,\n} as const;\n\nexport const povPaths = {\n  camera: cameraPOVPathPoints,\n  ghost1: ghost1POVPathPoints,\n  ghost2: ghost2POVPathPoints,\n  ghost3: ghost3POVPathPoints,\n  ghost4: ghost4POVPathPoints,\n  ghost5: ghost5POVPathPoints,\n} as const;\n\nexport function createHomeScrollPathPoints(\n  pausedPositions: Record<string, THREE.Vector3>\n): Record<string, PathPoint[]> {\n  const scrollPaths: Record<string, PathPoint[]> = {};\n\n  Object.entries(pausedPositions).forEach(([key, pausedPos]) => {\n    const arcPoint = new THREE.Vector3(\n      pausedPos.x * (1 / 4) + objectHomeScrollEndPathPoint.x * (3 / 4),\n      1.5,\n      pausedPos.z * (1 / 4) + objectHomeScrollEndPathPoint.z * (3 / 4)\n    );\n\n    scrollPaths[key] = [\n      { pos: pausedPos.clone() },\n      { pos: arcPoint },\n      { pos: objectHomeScrollEndPathPoint },\n    ];\n  });\n\n  return scrollPaths;\n}\n\nexport function getCameraHomeScrollPathPoints(): CameraPathPoint[] {\n  return cameraHomeScrollPathPoints;\n}\n","import * as THREE from \"three\";\nimport gsap from \"gsap\";\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\nimport { getLookAtPosition, getStartPosition } from \"../paths/pathpoints\";\n\ngsap.registerPlugin(ScrollTrigger);\n\nconst CAMERA_CONFIG = {\n  originalFOV: 50,\n  wideFOV: 80,\n  near: 0.001,\n  far: 100,\n};\n\nexport const camera = new THREE.PerspectiveCamera(\n  50,\n  window.innerWidth / window.innerHeight,\n  CAMERA_CONFIG.near,\n  CAMERA_CONFIG.far\n);\n\nexport function setupCamera(): void {\n  const startPosition = getStartPosition();\n  const lookAtPosition = getLookAtPosition();\n  camera.position.set(startPosition.x, startPosition.y, startPosition.z);\n  camera.lookAt(lookAtPosition.x, lookAtPosition.y, lookAtPosition.z);\n}\n","import * as THREE from \"three\";\nimport { isMobile } from \"../config/config\";\nimport { DOM_ELEMENTS } from \"../config/dom-elements\";\nimport { camera } from \"./camera\";\n\nexport const scene = new THREE.Scene();\n\nconst renderer = new THREE.WebGLRenderer({\n  antialias: true,\n  alpha: true,\n  powerPreference: \"high-performance\",\n  precision: \"highp\",\n});\n\nconst clock = new THREE.Clock();\nconst frameCallbacks: (() => void)[] = [];\n\nexport function initRenderer(): void {\n  enhanceAntiAliasing();\n\n  if (DOM_ELEMENTS.mazeContainer) {\n    renderer.setSize(\n      DOM_ELEMENTS.mazeContainer.clientWidth,\n      DOM_ELEMENTS.mazeContainer.clientHeight\n    );\n    DOM_ELEMENTS.mazeContainer.appendChild(renderer.domElement);\n  } else {\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n  }\n\n  setPixelRatio();\n  window.addEventListener(\"resize\", setPixelRatio);\n\n  renderer.render(scene, camera);\n}\n\nfunction enhanceAntiAliasing(): void {\n  if (isMobile) {\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n  } else {\n    renderer.setPixelRatio(window.devicePixelRatio);\n  }\n  renderer.shadowMap.enabled = true;\n  renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n}\n\nfunction setPixelRatio(): void {\n  const pixelRatio = Math.min(window.devicePixelRatio, isMobile ? 2 : 3);\n  renderer.setPixelRatio(pixelRatio);\n\n  if (DOM_ELEMENTS.mazeContainer) {\n    renderer.setSize(\n      DOM_ELEMENTS.mazeContainer.clientWidth,\n      DOM_ELEMENTS.mazeContainer.clientHeight\n    );\n    camera.aspect =\n      DOM_ELEMENTS.mazeContainer.clientWidth /\n      DOM_ELEMENTS.mazeContainer.clientHeight;\n  } else {\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    camera.aspect = window.innerWidth / window.innerHeight;\n  }\n\n  camera.updateProjectionMatrix();\n}\n\nexport function setupLighting(): void {\n  const ambientLight = new THREE.AmbientLight(0xffffff);\n  scene.add(ambientLight);\n\n  const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n  scene.add(directionalLight);\n  directionalLight.position.set(-5, 15, 10);\n  directionalLight.shadow.mapSize.width = 4096;\n  directionalLight.shadow.mapSize.height = 4096;\n  directionalLight.shadow.camera.left = -20;\n  directionalLight.shadow.camera.right = 20;\n  directionalLight.shadow.camera.top = 20;\n  directionalLight.shadow.camera.bottom = -20;\n  directionalLight.shadow.camera.near = 0.1;\n  directionalLight.shadow.camera.far = 50;\n  directionalLight.shadow.bias = -0.001;\n  directionalLight.shadow.radius = 3;\n  directionalLight.castShadow = true;\n}\n\nexport function startRenderLoop(): void {\n  const render = () => {\n    frameCallbacks.forEach((callback) => callback());\n\n    renderer.render(scene, camera);\n\n    requestAnimationFrame(render);\n  };\n  render();\n}\n\nexport function onFrame(callback: () => void): void {\n  frameCallbacks.push(callback);\n}\n\nexport { renderer, clock };\n","import * as THREE from \"three\";\nimport { ASSETS } from \"../config/config\";\n\nconst textureLoader = new THREE.TextureLoader();\n\nconst mazeTexture = textureLoader.load(ASSETS.mazeTexture);\n\nexport const mazeMaterial = new THREE.MeshMatcapMaterial({\n  matcap: mazeTexture,\n});\n\nexport const topMaterial = new THREE.MeshStandardMaterial({\n  color: 0xf2f9f9,\n  metalness: 0.4,\n  roughness: 0,\n  envMapIntensity: 10,\n});\n\nexport const ghostMaterial = new THREE.MeshPhysicalMaterial({\n  color: 0xffffff,\n  opacity: 1,\n  transparent: true,\n  depthWrite: false,\n  depthTest: true,\n  blending: THREE.NormalBlending,\n  side: THREE.DoubleSide,\n  roughness: 0.75,\n  metalness: 0.2,\n  transmission: 0.5,\n});\n\nexport const floorMaterial = new THREE.MeshStandardMaterial({\n  color: 0xffffff,\n  opacity: 0.8,\n  transparent: true,\n  roughness: 0.5,\n  metalness: 0.1,\n});\n\nconst pacmanMaterials = {\n  blue: new THREE.MeshBasicMaterial({\n    color: 0x1469d3,\n    transparent: true,\n    opacity: 1,\n  }),\n  white: new THREE.MeshBasicMaterial({\n    color: 0xffffff,\n    transparent: true,\n    opacity: 1,\n  }),\n  default: new THREE.MeshBasicMaterial({\n    color: 0x1469d3,\n    transparent: true,\n    opacity: 1,\n  }),\n};\n\nexport const materialMap = {\n  CAM_Pacman_Backframe: pacmanMaterials.blue,\n  \"CAM-Pacman_Bitcoin_1\": pacmanMaterials.white,\n  \"CAM-Pacman_Bitcoin_2\": pacmanMaterials.white,\n  \"CAM-Pacman_Bottom\": pacmanMaterials.blue,\n  \"CAM-Pacman_Top\": pacmanMaterials.blue,\n  \"CAM-Pacman_Eye\": pacmanMaterials.white,\n  CAM_Pacman_Logo_1: pacmanMaterials.white,\n  CAM_Pacman_Logo_2: pacmanMaterials.white,\n  \"CAM-Pacman_Shell_Boolean\": pacmanMaterials.blue,\n  \"CAM-Pacman_Shell\": pacmanMaterials.blue,\n  \"CAM-Pacman_Bottom_electronic\": pacmanMaterials.white,\n  \"CAM-Pacman_Top_electronic\": pacmanMaterials.white,\n  \"CAM-Pacman_Bottom_Text\": pacmanMaterials.white,\n  \"CAM-Pacman_Top_Text\": pacmanMaterials.white,\n  default: pacmanMaterials.blue,\n};\n","import * as THREE from \"three\";\nimport { ASSETS } from \"../config/config\";\nimport { GhostContainer } from \"../types/types\";\nimport { clock } from \"./scene\";\nimport {\n  mazeMaterial,\n  topMaterial,\n  ghostMaterial,\n  floorMaterial,\n  materialMap,\n} from \"./materials\";\n\nexport { clock };\n\nconst loader = new THREE.GLTFLoader();\n\nexport let pacmanMixer: THREE.AnimationMixer;\n\nexport const pacman = new THREE.Group();\n\nexport const ghosts: GhostContainer = {\n  pacman: pacman,\n  ghost1: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost2: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost3: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost4: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost5: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n};\n\nconst ghostContainers = {\n  Ghost_EUR: ghosts.ghost1,\n  Ghost_CHF: ghosts.ghost2,\n  Ghost_YEN: ghosts.ghost3,\n  Ghost_USD: ghosts.ghost4,\n  Ghost_GBP: ghosts.ghost5,\n};\n\nexport async function loadModel(scene: THREE.Scene): Promise<void> {\n  Object.values(ghosts).forEach((ghost) => scene.add(ghost));\n  scene.add(pacman);\n  return new Promise((resolve, reject) => {\n    loader.load(\n      ASSETS.mazeModel,\n      function (gltf) {\n        const model = gltf.scene;\n\n        // Print all elements in the 3D model\n        console.log(\"=== 3D Model Hierarchy ===\");\n        model.traverse((obj: THREE.Object3D) => {\n          console.log(`[${obj.type}] ${obj.name}`);\n        });\n        console.log(\"=========================\");\n\n        model.traverse((child: THREE.Object3D) => {\n          if (child.name === \"CAM-Pacman\") {\n            const children: THREE.Object3D[] = [];\n            child.traverse((subChild: THREE.Object3D) => {\n              if (\n                (subChild as any).isMesh &&\n                subChild.name !== \"CAM-Pacman_Shell\" &&\n                subChild.name !== \"CAM-Pacman_Shell_Boolean\"\n              ) {\n                const material =\n                  materialMap[subChild.name as keyof typeof materialMap] ||\n                  materialMap.default;\n                (subChild as THREE.Mesh).material = material;\n                children.push(subChild);\n              } else if (\n                subChild.name === \"CAM-Pacman_Shell\" ||\n                subChild.name === \"CAM-Pacman_Shell_Boolean\"\n              ) {\n                subChild.visible = false;\n              }\n            });\n\n            children.forEach((item) => ghosts.pacman.add(item));\n            ghosts.pacman.scale.set(0.05, 0.05, 0.05);\n            ghosts.pacman.rotation.set(Math.PI / 2, Math.PI / 2, Math.PI / 4);\n\n            pacmanMixer = new THREE.AnimationMixer(ghosts.pacman);\n            const pacmanActions: { [key: string]: THREE.AnimationAction } = {};\n\n            gltf.animations.forEach((clip: THREE.AnimationClip) => {\n              const action = pacmanMixer.clipAction(clip);\n              pacmanActions[clip.name] = action;\n              action.setEffectiveWeight(1);\n              action.play();\n            });\n          } else if (\n            child.name &&\n            ghostContainers[child.name as keyof typeof ghostContainers]\n          ) {\n            const ghostContainer =\n              ghostContainers[child.name as keyof typeof ghostContainers];\n            const ghostGroup = new THREE.Group();\n\n            child.rotation.z = Math.PI;\n            child.rotation.x = Math.PI / 2;\n            child.scale.set(0.75, 0.75, 0.75);\n\n            const children: THREE.Object3D[] = [];\n            child.traverse((subChild: THREE.Object3D) => {\n              if ((subChild as any).isMesh) {\n                if (subChild.name && subChild.name.startsWith(\"Ghost_Mesh\")) {\n                  (subChild as THREE.Mesh).material = ghostMaterial;\n                } else if (\n                  subChild.name &&\n                  [\"EUR\", \"CHF\", \"YEN\", \"USD\", \"GBP\"].includes(subChild.name)\n                ) {\n                  subChild.visible = false;\n                }\n                children.push(subChild);\n              }\n            });\n\n            children.forEach((item) => {\n              if (\n                item.name &&\n                (item.name.includes(\"EUR\") ||\n                  item.name.startsWith(\"Ghost_Mesh\"))\n              ) {\n                item.rotation.z = Math.PI;\n                item.rotation.x = Math.PI / 2;\n              } else {\n                item.rotation.set(0, 0, 0);\n              }\n              ghostGroup.add(item);\n            });\n\n            if (ghostContainer) {\n              ghostContainer.add(ghostGroup);\n            } else {\n              console.warn(`ghostContainer for ${child.name} is undefined!`);\n            }\n          }\n\n          if ((child as any).isMesh) {\n            if (child.name === \"CAM-Arena_LowRes_Top\") {\n              (child as THREE.Mesh).material = topMaterial;\n              child.castShadow = true;\n            } else if (child.name === \"CAM-Arena_LowRes_Bottom\") {\n              (child as THREE.Mesh).material = mazeMaterial;\n              child.castShadow = true;\n            } else if (child.name === \"CAM-Floor\") {\n              const clonedChild = child.clone();\n              child.position.y = -0.1;\n              child.position.x = 0;\n              child.position.z = 0;\n              (child as THREE.Mesh).material = new THREE.MeshBasicMaterial({\n                color: 0xffffff,\n                opacity: 1,\n                transparent: false,\n                depthWrite: true,\n                depthTest: true,\n                side: THREE.FrontSide,\n              });\n              child.receiveShadow = false;\n              child.castShadow = true;\n              child.scale.set(0.5, 0.5, 0.5);\n\n              (clonedChild as THREE.Mesh).material = floorMaterial;\n              clonedChild.position.y = -0.5;\n              clonedChild.receiveShadow = true;\n              scene.add(clonedChild);\n            }\n          }\n        });\n\n        model.traverse(function (node: THREE.Object3D) {\n          if ((node as any).isMesh) {\n            node.castShadow = true;\n            node.receiveShadow = true;\n          }\n        });\n\n        scene.add(model);\n        model.position.set(0.5, 0.5, 0.5);\n\n        resolve();\n      },\n      function (progress: any) { },\n      function (error: any) {\n        reject(error);\n      }\n    );\n  });\n}\n","import * as THREE from \"three\";\nimport { MazePathPoint, PathPoint, CameraPathPoint } from \"../types/types\";\nimport {\n  homePaths,\n  povPaths,\n  createHomeScrollPathPoints,\n  getCameraHomeScrollPathPoints,\n} from \"./pathpoints\";\n\n// Cache for created paths\nconst pathCache = new Map<string, THREE.CurvePath<THREE.Vector3>>();\n\n// Optional utility for smoothing tangent directions when following paths\nexport class TangentSmoother {\n  private currentTangent: THREE.Vector3;\n  private smoothing: number;\n\n  constructor(initialTangent: THREE.Vector3, smoothing: number = 0.06) {\n    this.currentTangent = initialTangent.clone();\n    this.smoothing = smoothing;\n  }\n\n  update(targetTangent: THREE.Vector3): THREE.Vector3 {\n    this.currentTangent.lerp(targetTangent, this.smoothing);\n    return this.currentTangent.normalize();\n  }\n\n  reset(newTangent: THREE.Vector3): void {\n    this.currentTangent.copy(newTangent);\n  }\n\n  setSmoothingFactor(smoothing: number): void {\n    this.smoothing = Math.max(0.001, Math.min(1, smoothing));\n  }\n}\n\nfunction createMazePath(\n  pathPoints: MazePathPoint[],\n  pathName?: string\n): THREE.CurvePath<THREE.Vector3> {\n  const cacheKey = pathPoints\n    .map((p) => `${p.pos.x},${p.pos.y},${p.pos.z},${p.type},${p.arc || \"\"}`)\n    .join(\"|\");\n\n  if (pathCache.has(cacheKey)) {\n    return pathCache.get(cacheKey)!;\n  }\n\n  const path = new THREE.CurvePath<THREE.Vector3>();\n\n  let i = 0;\n  while (i < pathPoints.length - 1) {\n    const current = pathPoints[i];\n    const next = pathPoints[i + 1];\n\n    // Check if current point has curveCheckPoints\n    if (current.curveCheckPoints && current.curveCheckPoints.length > 0) {\n      // Create CatmullRomCurve3 with start point, checkpoints, and end point\n      const catmullPoints = [\n        current.pos,\n        ...current.curveCheckPoints,\n        next.pos,\n      ];\n      console.log(\n        `Creating CatmullRomCurve3 for ${pathName} with curveCheckPoints:`,\n        catmullPoints.map((p) => `(${p.x}, ${p.y}, ${p.z})`)\n      );\n      path.add(\n        new THREE.CatmullRomCurve3(catmullPoints, false, \"centripetal\", 0)\n      );\n    } else if (current.type === \"straight\") {\n      console.log(\n        \"Creating LineCurve3 from\",\n        `(${current.pos.x}, ${current.pos.y}, ${current.pos.z})`,\n        \"to\",\n        `(${next.pos.x}, ${next.pos.y}, ${next.pos.z})`\n      );\n      path.add(new THREE.LineCurve3(current.pos, next.pos));\n    } else {\n      // Create curve using existing logic\n      const midPoint = createNormalCurveMidPoint(current, next);\n      console.log(\n        \"Creating QuadraticBezierCurve3 from\",\n        `(${current.pos.x}, ${current.pos.y}, ${current.pos.z})`,\n        \"via\",\n        `(${midPoint.x}, ${midPoint.y}, ${midPoint.z})`,\n        \"to\",\n        `(${next.pos.x}, ${next.pos.y}, ${next.pos.z})`\n      );\n      path.add(\n        new THREE.QuadraticBezierCurve3(current.pos, midPoint, next.pos)\n      );\n    }\n\n    i++;\n  }\n\n  pathCache.set(cacheKey, path);\n  return path;\n}\n\nfunction createNormalCurveMidPoint(\n  current: MazePathPoint,\n  next: MazePathPoint\n): THREE.Vector3 {\n  if (current.arc) {\n    const curveType = current.arc;\n\n    if (curveType === \"upperArc\") {\n      return new THREE.Vector3(current.pos.x, current.pos.y, next.pos.z);\n    } else if (curveType === \"lowerArc\") {\n      return new THREE.Vector3(next.pos.x, current.pos.y, current.pos.z);\n    } else if (curveType === \"forwardDownArc\") {\n      return new THREE.Vector3(current.pos.x, next.pos.y, current.pos.z);\n    }\n  }\n\n  return new THREE.Vector3(current.pos.x, current.pos.y, next.pos.z);\n}\n\nfunction createHomeScrollPath(\n  pathPoints: PathPoint[]\n): THREE.CurvePath<THREE.Vector3> {\n  const path = new THREE.CurvePath<THREE.Vector3>();\n\n  if (pathPoints.length === 3) {\n    const curve = new THREE.QuadraticBezierCurve3(\n      pathPoints[0].pos,\n      pathPoints[1].pos,\n      pathPoints[2].pos\n    );\n    path.add(curve);\n  }\n\n  return path;\n}\n\nfunction createCameraHomeScrollPath(\n  pathPoints: CameraPathPoint[]\n): THREE.CurvePath<THREE.Vector3> {\n  const path = new THREE.CurvePath<THREE.Vector3>();\n\n  if (pathPoints.length === 4) {\n    const curve = new THREE.CubicBezierCurve3(\n      pathPoints[0].pos,\n      pathPoints[1].pos,\n      pathPoints[2].pos,\n      pathPoints[3].pos\n    );\n    path.add(curve);\n  }\n\n  return path;\n}\n\nfunction createCameraPath(\n  pathPoints: CameraPathPoint[]\n): THREE.CurvePath<THREE.Vector3> {\n  const path = new THREE.CurvePath<THREE.Vector3>();\n\n  for (let i = 0; i < pathPoints.length - 1; i++) {\n    const current = pathPoints[i];\n    const next = pathPoints[i + 1];\n\n    // Check if it's a MazePathPoint-like structure\n    if (\"type\" in current && current.type === \"straight\") {\n      path.add(new THREE.LineCurve3(current.pos, next.pos));\n    } else if (\n      \"type\" in current &&\n      current.type === \"curve\" &&\n      \"arc\" in current\n    ) {\n      // Create curve using existing logic\n      const midPoint = createCameraCurveMidPoint(current, next);\n      path.add(\n        new THREE.QuadraticBezierCurve3(current.pos, midPoint, next.pos)\n      );\n    } else {\n      // Default to straight line for other types\n      path.add(new THREE.LineCurve3(current.pos, next.pos));\n    }\n  }\n\n  return path;\n}\n\nfunction createCameraCurveMidPoint(\n  current: CameraPathPoint,\n  next: CameraPathPoint\n): THREE.Vector3 {\n  if (\"arc\" in current && current.arc) {\n    const curveType = current.arc;\n\n    if (curveType === \"upperArc\") {\n      return new THREE.Vector3(current.pos.x, current.pos.y, next.pos.z);\n    } else if (curveType === \"lowerArc\") {\n      return new THREE.Vector3(next.pos.x, current.pos.y, current.pos.z);\n    } else if (curveType === \"forwardDownArc\") {\n      return new THREE.Vector3(current.pos.x, next.pos.y, current.pos.z);\n    }\n  }\n\n  return new THREE.Vector3(current.pos.x, current.pos.y, next.pos.z);\n}\n\nexport function getHomePaths(): Record<string, THREE.CurvePath<THREE.Vector3>> {\n  const paths: Record<string, THREE.CurvePath<THREE.Vector3>> = {};\n\n  Object.entries(homePaths).forEach(([key, pathPoints]) => {\n    paths[key] = createMazePath(pathPoints, key);\n  });\n\n  return paths;\n}\n\n// when scrolling, this is where the ghosts are going into the void\nexport function getHomeScrollPaths(\n  pausedPositions: Record<string, THREE.Vector3>\n): Record<string, THREE.CurvePath<THREE.Vector3>> {\n  const scrollPathPoints = createHomeScrollPathPoints(pausedPositions);\n  const cameraPathPoints = getCameraHomeScrollPathPoints();\n\n  const paths: Record<string, THREE.CurvePath<THREE.Vector3>> = {\n    camera: createCameraHomeScrollPath(cameraPathPoints),\n  };\n\n  Object.entries(scrollPathPoints).forEach(([key, pathPoints]) => {\n    paths[key] = createHomeScrollPath(pathPoints);\n  });\n\n  return paths;\n}\n\nexport function getPovPaths(): Record<string, THREE.CurvePath<THREE.Vector3>> {\n  const paths: Record<string, THREE.CurvePath<THREE.Vector3>> = {};\n\n  Object.entries(povPaths).forEach(([key, pathPoints]) => {\n    if (key === \"camera\") {\n      // Camera path uses CameraPathPoint[] and needs special handling\n      paths[key] = createMazePath(pathPoints as MazePathPoint[], key);\n    } else {\n      // Ghost paths use MazePathPoint[]\n      paths[key] = createMazePath(pathPoints as MazePathPoint[], key);\n    }\n  });\n\n  return paths;\n}\n","import * as THREE from \"three\";\n\nexport function calculateObjectOrientation(\n  object: THREE.Object3D,\n  tangent: THREE.Vector3,\n  objectType: \"pacman\" | \"ghost\" | \"camera\" = \"ghost\"\n): void {\n  if (!tangent || tangent.length() === 0) return;\n\n  const targetRotation = Math.atan2(tangent.x, tangent.z);\n\n  if (objectType === \"pacman\") {\n    object.rotation.set(Math.PI / 2, Math.PI, targetRotation + Math.PI / 2);\n  } else if (objectType === \"ghost\") {\n    object.rotation.set(0, targetRotation, 0);\n  } else if (objectType === \"camera\") {\n    const lookAtPoint = object.position.clone().add(tangent);\n    object.lookAt(lookAtPoint);\n  }\n}\n\nexport function slerpToLayDown(\n  object: THREE.Object3D,\n  startQuat: THREE.Quaternion,\n  progress: number\n) {\n  const layDownQuat1 = new THREE.Quaternion().setFromEuler(\n    new THREE.Euler(Math.PI / 2, 0, 0)\n  );\n  const layDownQuat2 = new THREE.Quaternion().setFromEuler(\n    new THREE.Euler(-Math.PI / 2, 0, 0)\n  );\n\n  const d1 = startQuat.angleTo(layDownQuat1);\n  const d2 = startQuat.angleTo(layDownQuat2);\n  const targetQuat = d1 < d2 ? layDownQuat1 : layDownQuat2;\n\n  object.quaternion.copy(startQuat.clone().slerp(targetQuat, progress));\n}\n","import gsap from \"gsap\";\nimport * as THREE from \"three\";\nimport { camera } from \"../core/camera\";\nimport { ghosts, pacman } from \"../core/objects\";\nimport { getCameraHomeScrollPathPoints } from \"../paths/pathpoints\";\nimport { getHomeScrollPaths } from \"../paths/paths\";\nimport { homeLoopHandler } from \"./home-loop\";\nimport { slerpToLayDown } from \"./util\";\n\nlet homeScrollTimeline: gsap.core.Timeline | null = null;\n\nconst characterSpeeds: Record<string, number> = {\n  pacman: 0.9,\n  ghost1: 1,\n  ghost2: 1.1,\n  ghost3: 1.2,\n  ghost4: 1.3,\n  ghost5: 1.4,\n};\n\nexport function initHomeScrollAnimation(\n  pausedPositions: Record<string, THREE.Vector3>,\n  pausedRotations: Record<string, THREE.Quaternion>\n) {\n  if (homeScrollTimeline) {\n    homeScrollTimeline.kill();\n    homeScrollTimeline = null;\n  }\n\n  const scrollPaths = getHomeScrollPaths(pausedPositions);\n  const cameraPathPoints = getCameraHomeScrollPathPoints();\n\n  homeScrollTimeline = gsap\n    .timeline({\n      scrollTrigger: {\n        id: \"homeScroll\",\n        trigger: \".sc--home\",\n        start: \"top top\",\n        end: \"bottom top\",\n        scrub: 0.5,\n        onScrubComplete: () => {\n          // on scroll complete, check home loop handler\n          homeLoopHandler();\n        },\n      },\n    })\n    .to(\n      { progress: 0 },\n      {\n        progress: 1,\n        immediateRender: false,\n        onUpdate: function () {\n          const progress = this.targets()[0].progress;\n          updateScrollAnimation(\n            progress,\n            scrollPaths,\n            pausedRotations,\n            cameraPathPoints\n          );\n        },\n      }\n    );\n}\n\nfunction updateScrollAnimation(\n  progress: number,\n  paths: Record<string, THREE.CurvePath<THREE.Vector3>>,\n  pausedRotations: Record<string, THREE.Quaternion>,\n  cameraPathPoints: any[]\n) {\n  if (paths.camera) {\n    const cameraPoint = paths.camera.getPointAt(progress);\n    camera.position.copy(cameraPoint);\n\n    const lookAtCurve = new THREE.CubicBezierCurve3(\n      cameraPathPoints[0].lookAt,\n      cameraPathPoints[1].lookAt,\n      cameraPathPoints[2].lookAt,\n      cameraPathPoints[3].lookAt\n    );\n    const lookAtPoint = lookAtCurve.getPoint(progress);\n    camera.lookAt(lookAtPoint);\n    camera.updateProjectionMatrix();\n  }\n\n  const fadeStartProgress = 0.85;\n  const fadeEndProgress = 0.95;\n  const opacity =\n    progress < fadeStartProgress\n      ? 1\n      : progress > fadeEndProgress\n        ? 0\n        : 1 -\n        (progress - fadeStartProgress) / (fadeEndProgress - fadeStartProgress);\n\n  // Pacman (slowest)\n  if (paths.pacman && pacman) {\n    const pacmanSpeed = characterSpeeds[\"pacman\"] ?? 1.0;\n    const rawPacmanProgress = Math.min(progress * pacmanSpeed, 1);\n    const easedPacmanProgress = Math.pow(rawPacmanProgress, 1.25);\n    const pacmanPoint = paths.pacman.getPointAt(easedPacmanProgress);\n    if (pacmanPoint) {\n      pacman.position.copy(pacmanPoint);\n      slerpToLayDown(pacman, pausedRotations[\"pacman\"], easedPacmanProgress);\n      // Animate pacman opacity\n      pacman.traverse((child) => {\n        if ((child as any).isMesh && (child as any).material) {\n          (child as any).material.opacity = opacity;\n        }\n      });\n    }\n  }\n\n  // Ghosts (each with their own speed)\n  Object.entries(ghosts).forEach(([key, ghost]) => {\n    const path = paths[key];\n    if (path) {\n      const ghostSpeed = characterSpeeds[key] ?? 1.0;\n      const rawGhostProgress = Math.min(progress * ghostSpeed, 1);\n      const easedGhostProgress = Math.pow(rawGhostProgress, 1.25);\n      const ghostPoint = path.getPointAt(easedGhostProgress);\n      if (ghostPoint) {\n        ghost.position.copy(ghostPoint);\n        slerpToLayDown(ghost, pausedRotations[key], easedGhostProgress);\n        // Animate ghost opacity\n        if ((ghost as any).material) {\n          (ghost as any).material.opacity = opacity;\n        }\n      }\n    }\n  });\n}\n","import { ghosts } from \"../core/objects\";\nimport { getHomePaths, TangentSmoother } from \"../paths/paths\";\nimport { onFrame, clock } from \"../core/scene\";\nimport * as THREE from \"three\";\nimport { calculateObjectOrientation } from \"./util\";\nimport { initHomeScrollAnimation } from \"./home-scroll\";\n\nconst LOOP_DURATION = 50;\nlet isHomeLoopActive = true;\nlet animationTime = 0;\nlet pausedT = 0;\nlet pausedPositions: Record<string, THREE.Vector3> = {};\nlet pausedRotations: Record<string, THREE.Quaternion> = {};\nlet homeLoopFrameRegistered = false;\n\n// Tangent smoothers for home loop (separate from scroll smoothers)\nconst homeLoopTangentSmoothers: Record<string, TangentSmoother> = {};\n\n// Initialize home loop tangent smoothers\nfunction initializeHomeLoopTangentSmoothers() {\n  homeLoopTangentSmoothers.pacman = new TangentSmoother(new THREE.Vector3(1, 0, 0), 0.06);\n  homeLoopTangentSmoothers.ghost1 = new TangentSmoother(new THREE.Vector3(1, 0, 0), 0.06);\n  homeLoopTangentSmoothers.ghost2 = new TangentSmoother(new THREE.Vector3(1, 0, 0), 0.06);\n  homeLoopTangentSmoothers.ghost3 = new TangentSmoother(new THREE.Vector3(1, 0, 0), 0.06);\n  homeLoopTangentSmoothers.ghost4 = new TangentSmoother(new THREE.Vector3(1, 0, 0), 0.06);\n  homeLoopTangentSmoothers.ghost5 = new TangentSmoother(new THREE.Vector3(1, 0, 0), 0.06);\n}\n\nfunction stopHomeLoop() {\n  if (!isHomeLoopActive) return;\n  isHomeLoopActive = false;\n  pausedT = (animationTime % LOOP_DURATION) / LOOP_DURATION;\n  pausedPositions = {};\n  pausedRotations = {};\n  Object.entries(ghosts).forEach(([key, ghost]) => {\n    pausedPositions[key] = ghost.position.clone();\n    pausedRotations[key] = ghost.quaternion.clone();\n  });\n  initHomeScrollAnimation(pausedPositions, pausedRotations);\n}\n\nfunction startHomeLoop() {\n  isHomeLoopActive = true;\n  animationTime = pausedT * LOOP_DURATION;\n\n  // Initialize smooth tangent smoothers for home loop\n  initializeHomeLoopTangentSmoothers();\n\n  const homePaths = getHomePaths();\n  Object.entries(ghosts).forEach(([key, ghost]) => {\n    const path = homePaths[key];\n    if (path) {\n      const position = path.getPointAt(0);\n      if (position) ghost.position.copy(position);\n\n      // Reset the smoother with initial tangent\n      if (homeLoopTangentSmoothers[key]) {\n        const initialTangent = path.getTangentAt(0);\n        if (initialTangent) {\n          homeLoopTangentSmoothers[key].reset(initialTangent);\n        }\n      }\n    }\n  });\n\n  if (!homeLoopFrameRegistered) {\n    onFrame(() => updateHomeLoop(clock.getDelta()));\n    homeLoopFrameRegistered = true;\n  }\n}\n\nfunction updateHomeLoop(delta: number) {\n  if (!isHomeLoopActive) return;\n  animationTime += delta;\n  const t = (animationTime % LOOP_DURATION) / LOOP_DURATION;\n  const homePaths = getHomePaths();\n  Object.entries(ghosts).forEach(([key, ghost]) => {\n    const path = homePaths[key];\n    if (path) {\n      const position = path.getPointAt(t);\n      if (position) ghost.position.copy(position);\n\n      // Apply smooth tangent-based orientation\n      if (homeLoopTangentSmoothers[key] && t > 0) {\n        const rawTangent = path.getTangentAt(t);\n        if (rawTangent && rawTangent.length() > 0) {\n          const smoothTangent = homeLoopTangentSmoothers[key].update(rawTangent);\n          const objectType = key === \"pacman\" ? \"pacman\" : \"ghost\";\n          calculateObjectOrientation(ghost, smoothTangent, objectType);\n        }\n      }\n    }\n  });\n}\n\n// when scroll is 0 - home loop is running.\n// Home= pacman and ghosts moving on their paths - scroll doesn't mattermatter\nexport function homeLoopHandler() {\n  if (window.scrollY === 0) {\n    startHomeLoop();\n  }\n}\n\nexport function setupHomeLoopScrollHandler() {\n  window.addEventListener(\"scroll\", () => {\n    if (window.scrollY !== 0) {\n      stopHomeLoop();\n    }\n  });\n}\n","import gsap from \"gsap\";\nimport * as THREE from \"three\";\nimport { camera } from \"../core/camera\";\nimport { ghosts } from \"../core/objects\";\nimport { getPovPaths, TangentSmoother } from \"../paths/paths\";\nimport { povTriggerPositions } from \"../paths/pathpoints\";\nimport { DOM_ELEMENTS } from \"../config/dom-elements\";\nimport { calculateObjectOrientation } from \"./util\";\n\nlet povScrollTimeline: gsap.core.Timeline | null = null;\n\n// Animation state\nlet isInPovSection = false;\nlet previousCameraPosition: THREE.Vector3 | null = null;\nlet animationStarted = false;\nlet rotationStarted = false;\nlet startedInitEndScreen = false;\nlet endScreenPassed = false;\nlet startEndProgress = 0;\n\n// Camera rotation constants\nconst startRotationPoint = new THREE.Vector3(0.55675, 0.55, 1.306);\nconst endRotationPoint = new THREE.Vector3(-0.14675, 1, 1.8085);\nconst targetLookAt = new THREE.Vector3(0.55675, 0.1, 1.306);\nconst finalLookAt = new THREE.Vector3(-0.14675, 0, 1.8085);\nconst reverseFinalLookAt = new THREE.Vector3(\n  7.395407041377711,\n  0.9578031302345096,\n  -4.312450290270135\n);\n\n// Animation timing constants\nconst originalFOV = 50;\nconst wideFOV = 80;\nconst startEndScreenSectionProgress = 0.8;\nconst rotationStartingPoint = 0.973;\n\n// Cached values\nlet cachedStartYAngle: number | null = null;\nlet isMovingForward = true;\n\n// Ghost trigger state\nconst ghostStates: Record<string, any> = {};\n\n// Tangent smoothers for POV scroll (separate from home loop smoothers)\nconst povTangentSmoothers: Record<string, TangentSmoother> = {};\n\n// Initialize POV tangent smoothers\nfunction initializePovTangentSmoothers() {\n  // Camera smoother - most important for smooth user experience\n  povTangentSmoothers.camera = new TangentSmoother(new THREE.Vector3(0, 0, -1), 0.08);\n\n  // Ghost smoothers\n  povTangentSmoothers.ghost1 = new TangentSmoother(new THREE.Vector3(1, 0, 0), 0.08);\n  povTangentSmoothers.ghost2 = new TangentSmoother(new THREE.Vector3(1, 0, 0), 0.08);\n  povTangentSmoothers.ghost3 = new TangentSmoother(new THREE.Vector3(1, 0, 0), 0.08);\n  povTangentSmoothers.ghost4 = new TangentSmoother(new THREE.Vector3(1, 0, 0), 0.08);\n  povTangentSmoothers.ghost5 = new TangentSmoother(new THREE.Vector3(1, 0, 0), 0.08);\n}\n\nexport function initPovScrollAnimation() {\n  if (povScrollTimeline) {\n    povScrollTimeline.kill();\n    povScrollTimeline = null;\n  }\n\n  const povPaths = getPovPaths();\n\n  // Initialize tangent smoothers for POV scroll\n  initializePovTangentSmoothers();\n\n  // Initialize ghost states\n  Object.keys(povTriggerPositions).forEach((key) => {\n    ghostStates[key] = {\n      hasBeenTriggered: false,\n      hasBeenDeactivated: false,\n      triggerCameraProgress: null,\n      ghostStartFadeInProgress: null,\n      ghostEndFadeInProgress: null,\n      ghostStartFadeOutProgress: null,\n      camStartFadeInProgress: null,\n      camEndFadeInProgress: null,\n      camStartFadeOutProgress: null,\n      endCameraProgress: null,\n      currentPathT: 0,\n      ghostTextOpacity: 0,\n      camTextOpacity: 0,\n      lastProgress: 0,\n    };\n  });\n\n  povScrollTimeline = gsap\n    .timeline({\n      scrollTrigger: {\n        id: \"povScroll\",\n        trigger: DOM_ELEMENTS.povSection,\n        start: \"top bottom\",\n        end: \"bottom top\",\n        endTrigger: \".sc--final\",\n        scrub: 0.5,\n        toggleActions: \"play none none reverse\",\n        onEnter: () => {\n          isInPovSection = true;\n        },\n        onLeave: handleLeavePOV,\n        onLeaveBack: handleLeavePOV,\n      },\n    })\n    .to(\n      { progress: 0 },\n      {\n        progress: 1,\n        immediateRender: false,\n        onStart: handleAnimationStart,\n        onUpdate: function (this: gsap.core.Tween) {\n          handleAnimationUpdate.call(this);\n        },\n        onReverseComplete: () => resetState(true),\n        onComplete: resetState,\n      }\n    );\n}\n\nfunction handleAnimationStart() {\n  const povPaths = getPovPaths();\n\n  // Reset camera tangent smoother with initial camera tangent\n  if (povTangentSmoothers.camera && povPaths.camera) {\n    const initialCameraTangent = povPaths.camera.getTangentAt(0);\n    if (initialCameraTangent) {\n      povTangentSmoothers.camera.reset(initialCameraTangent);\n    }\n  }\n\n  // Position all ghosts at start of their paths\n  Object.entries(ghosts).forEach(([key, ghost]) => {\n    if (povPaths[key] && key !== \"pacman\") {\n      const position = povPaths[key].getPointAt(0);\n      ghost.position.copy(position);\n      const tangent = povPaths[key].getTangentAt(0).normalize();\n      ghost.lookAt(position.clone().add(tangent));\n      ghost.visible = false;\n      ghost.scale.set(0.5, 0.5, 0.5);\n    }\n  });\n\n  // Hide pacman during POV section\n  if (ghosts.pacman) {\n    ghosts.pacman.visible = false;\n  }\n\n  animationStarted = true;\n}\n\nfunction handleAnimationUpdate(this: gsap.core.Tween) {\n  const overallProgress = (this.targets()[0] as any).progress;\n  const povPaths = getPovPaths();\n\n  if (!povPaths.camera) return;\n\n  const cameraPosition = povPaths.camera.getPointAt(overallProgress);\n\n  if (previousCameraPosition) {\n    updateCamera(overallProgress, povPaths);\n    updateGhosts(cameraPosition, overallProgress, povPaths);\n    previousCameraPosition.copy(cameraPosition);\n  } else {\n    previousCameraPosition = cameraPosition.clone();\n  }\n}\n\nfunction updateCamera(progress: number, povPaths: Record<string, THREE.CurvePath<THREE.Vector3>>) {\n  const position = povPaths.camera.getPointAt(progress);\n  camera.position.copy(position);\n  camera.fov = wideFOV;\n\n  // Show canvas if hidden\n  const canvas = document.querySelector(\"canvas\") as HTMLCanvasElement;\n  if (canvas && canvas.style.display === \"none\" && progress < 0.99) {\n    canvas.style.display = \"block\";\n  }\n\n  // Get smooth tangent for camera orientation\n  const rawTangent = povPaths.camera.getTangentAt(progress).normalize();\n  let smoothTangent = rawTangent;\n\n  if (povTangentSmoothers.camera && progress > 0) {\n    smoothTangent = povTangentSmoothers.camera.update(rawTangent);\n  }\n\n  const defaultLookAt = position.clone().add(smoothTangent);\n\n  // Handle different camera phases\n  // if (progress === 0) {\n  //   camera.lookAt(new THREE.Vector3(camera.position.x, 2, camera.position.z));\n  // } else if (progress < 0.1) {\n  //   handleInitialTransition(progress, position);\n  // } else \n  if (progress >= rotationStartingPoint) {\n    handleRotationPhase(progress, position, defaultLookAt);\n  } else if (progress > startEndScreenSectionProgress && endScreenPassed) {\n    handleEndSequence(progress);\n  } else {\n    handleDefaultOrientation(progress, defaultLookAt);\n  }\n\n  camera.updateProjectionMatrix();\n}\n\nfunction handleInitialTransition(progress: number, position: THREE.Vector3) {\n  const transitionProgress = progress / 0.1;\n  const upLookAt = new THREE.Vector3(position.x, 1, position.z);\n  const frontLookAt = new THREE.Vector3(position.x, 0.5, position.z + 1);\n\n  const interpolatedLookAt = new THREE.Vector3();\n  interpolatedLookAt.lerpVectors(upLookAt, frontLookAt, smoothStep(transitionProgress));\n\n  camera.lookAt(interpolatedLookAt);\n}\n\nfunction handleRotationPhase(progress: number, position: THREE.Vector3, defaultLookAt: THREE.Vector3) {\n  const startRotationProgress = findClosestProgressOnPath(getPovPaths().camera, startRotationPoint);\n  const endRotationProgress = findClosestProgressOnPath(getPovPaths().camera, endRotationPoint);\n\n  if (progress >= startRotationProgress && progress <= endRotationProgress) {\n    const sectionProgress = (progress - startRotationProgress) / (endRotationProgress - startRotationProgress);\n\n    if (cachedStartYAngle === null) {\n      const startDir = new THREE.Vector2(defaultLookAt.x - position.x, defaultLookAt.z - position.z).normalize();\n      cachedStartYAngle = Math.atan2(startDir.y, startDir.x);\n      cachedStartYAngle = cachedStartYAngle > 3 ? cachedStartYAngle / 2 : cachedStartYAngle;\n    }\n\n    const targetDir = new THREE.Vector2(targetLookAt.x - position.x, targetLookAt.z - position.z).normalize();\n    let targetYAngle = Math.atan2(targetDir.y, targetDir.x);\n\n    let angleDiff = targetYAngle - cachedStartYAngle;\n    if (angleDiff > Math.PI) angleDiff -= Math.PI * 2;\n    else if (angleDiff < -Math.PI) angleDiff += Math.PI * 2;\n\n    angleDiff = -angleDiff * 1.75;\n    targetYAngle = cachedStartYAngle + angleDiff;\n\n    const easedProgress = smoothStep(sectionProgress);\n    const newYAngle = cachedStartYAngle * (1 - easedProgress) + targetYAngle * easedProgress;\n\n    const radius = 1.0;\n    const newLookAt = new THREE.Vector3(\n      position.x + Math.cos(newYAngle) * radius,\n      position.y,\n      position.z + Math.sin(newYAngle) * radius\n    );\n\n    camera.lookAt(newLookAt);\n    rotationStarted = true;\n\n    if (progress >= startEndScreenSectionProgress && !startedInitEndScreen) {\n      startedInitEndScreen = true;\n      initEndScreen();\n    }\n  }\n}\n\nfunction handleEndSequence(progress: number) {\n  if (startEndProgress === 0 && progress !== 1) {\n    const truncatedProgress = Math.floor(progress * 100) / 100;\n    startEndProgress = truncatedProgress === 0.99 ? rotationStartingPoint : progress;\n  }\n\n  const animationProgress = (progress - startEndProgress) / (1 - startEndProgress);\n\n  if (isMovingForward && animationProgress > 0) {\n    const currentLookAt = getCameraLookAtPoint();\n    const interpolatedLookAt = new THREE.Vector3().lerpVectors(\n      currentLookAt,\n      finalLookAt,\n      smoothStep(animationProgress)\n    );\n\n    const startFOV = wideFOV;\n    const targetFOV = wideFOV / 4;\n    camera.fov = startFOV + (targetFOV - startFOV) * smoothStep(animationProgress);\n\n    camera.lookAt(interpolatedLookAt);\n  } else if (animationProgress > 0) {\n    const interpolatedLookAt = new THREE.Vector3().lerpVectors(\n      reverseFinalLookAt,\n      finalLookAt,\n      smoothStep(animationProgress)\n    );\n\n    const startFOV = wideFOV / 4;\n    const targetFOV = wideFOV;\n    camera.fov = targetFOV - (targetFOV - startFOV) * smoothStep(animationProgress);\n\n    camera.lookAt(interpolatedLookAt);\n  }\n}\n\nfunction handleDefaultOrientation(progress: number, defaultLookAt: THREE.Vector3) {\n  const startRotationProgress = findClosestProgressOnPath(getPovPaths().camera, startRotationPoint);\n  const endRotationProgress = findClosestProgressOnPath(getPovPaths().camera, endRotationPoint);\n\n  if ((progress < startRotationProgress || progress > endRotationProgress) && !startedInitEndScreen) {\n    cachedStartYAngle = null;\n    rotationStarted = false;\n    endScreenPassed = false;\n    startedInitEndScreen = false;\n\n    const finalSection = document.querySelector(\".sc--final.sc\") as HTMLElement;\n    if (finalSection) {\n      finalSection.style.opacity = \"0\";\n    }\n  }\n\n  if (!rotationStarted && !startedInitEndScreen) {\n    camera.lookAt(defaultLookAt);\n  }\n\n  if (!(endScreenPassed && progress > 0.8)) {\n    startEndProgress = 0;\n  }\n}\n\nfunction updateGhosts(\n  cameraPosition: THREE.Vector3,\n  overallProgress: number,\n  povPaths: Record<string, THREE.CurvePath<THREE.Vector3>>\n) {\n  Object.entries(povTriggerPositions).forEach(([key, triggerData]) => {\n    const ghost = ghosts[key];\n    const path = povPaths[key];\n\n    if (!ghost || !path || key === \"pacman\") return;\n\n    updateGhost(key, ghost, path, cameraPosition, triggerData);\n  });\n}\n\nfunction updateGhost(\n  key: string,\n  ghost: THREE.Object3D,\n  path: THREE.CurvePath<THREE.Vector3>,\n  cameraPosition: THREE.Vector3,\n  triggerData: any\n) {\n  const { triggerPos, ghostStartFadeIn, ghostEndFadeIn, ghostStartFadeOut, camStartFadeIn, camEndFadeIn, camStartFadeOut, endPosition } = triggerData;\n  const state = ghostStates[key];\n\n  // Get DOM elements specific to this ghost\n  const parentElements = document.querySelectorAll(\".cmp--pov.cmp\");\n  const ghostIndex = parseInt(key.replace(\"ghost\", \"\")) - 1;\n  const parent = parentElements[ghostIndex] as HTMLElement;\n\n  if (!parent) return;\n\n  // Get POV and CAM elements specifically within this ghost's parent container\n  const povElements = parent.querySelectorAll(\".pov\");\n  const camElements = parent.querySelectorAll(\".cam\");\n\n  if (!povElements || !camElements || povElements.length === 0 || camElements.length === 0) return;\n\n  // Initialize state if needed\n  if (state.triggerCameraProgress === null) {\n    state.triggerCameraProgress = findClosestProgressOnPath(getPovPaths().camera, triggerPos, 800);\n    state.ghostStartFadeInProgress = findClosestProgressOnPath(getPovPaths().camera, ghostStartFadeIn, 800);\n    state.ghostEndFadeInProgress = findClosestProgressOnPath(getPovPaths().camera, ghostEndFadeIn, 800);\n    state.ghostStartFadeOutProgress = findClosestProgressOnPath(getPovPaths().camera, ghostStartFadeOut, 800);\n    state.camStartFadeInProgress = findClosestProgressOnPath(getPovPaths().camera, camStartFadeIn, 800);\n    state.camEndFadeInProgress = findClosestProgressOnPath(getPovPaths().camera, camEndFadeIn, 800);\n    state.camStartFadeOutProgress = findClosestProgressOnPath(getPovPaths().camera, camStartFadeOut, 800);\n    state.endCameraProgress = findClosestProgressOnPath(getPovPaths().camera, endPosition, 800);\n  }\n\n  const currentCameraProgress = findClosestProgressOnPath(getPovPaths().camera, cameraPosition, 800);\n\n  // Update ghost visibility and position\n  if (currentCameraProgress >= state.triggerCameraProgress && currentCameraProgress <= state.endCameraProgress) {\n    if (!ghost.visible) {\n      ghost.visible = true;\n      state.hasBeenTriggered = true;\n\n      // Reset tangent smoother with initial tangent when ghost becomes visible\n      if (povTangentSmoothers[key]) {\n        const initialTangent = path.getTangentAt(0);\n        if (initialTangent) {\n          povTangentSmoothers[key].reset(initialTangent);\n        }\n      }\n    }\n\n    // Update ghost position\n    const normalizedProgress = (currentCameraProgress - state.triggerCameraProgress) /\n      (state.endCameraProgress - state.triggerCameraProgress);\n    let ghostProgress = Math.max(0, Math.min(1, normalizedProgress));\n\n    // Smooth the parameter\n    if (state.currentPathT === undefined) {\n      state.currentPathT = ghostProgress;\n    } else {\n      const parameterSmoothingFactor = 0.1;\n      state.currentPathT += (ghostProgress - state.currentPathT) * parameterSmoothingFactor;\n    }\n\n    ghostProgress = state.currentPathT;\n\n    // Update ghost position and rotation\n    const pathPoint = path.getPointAt(ghostProgress);\n    ghost.position.copy(pathPoint);\n\n    // Apply smooth tangent-based orientation\n    if (povTangentSmoothers[key] && ghostProgress > 0) {\n      const rawTangent = path.getTangentAt(ghostProgress);\n      if (rawTangent && rawTangent.length() > 0) {\n        const smoothTangent = povTangentSmoothers[key].update(rawTangent);\n        calculateObjectOrientation(ghost, smoothTangent, \"ghost\");\n      }\n    }\n\n    // Handle fade out at the end\n    if (ghostProgress > 0.9) {\n      const mesh = ghost as THREE.Mesh;\n      if (mesh.material && 'opacity' in mesh.material) {\n        (mesh.material as THREE.Material & { opacity: number }).opacity = 1 - (ghostProgress - 0.9) / 0.1;\n      }\n    } else {\n      const mesh = ghost as THREE.Mesh;\n      if (mesh.material && 'opacity' in mesh.material) {\n        (mesh.material as THREE.Material & { opacity: number }).opacity = 1;\n      }\n    }\n  } else {\n    ghost.visible = false;\n    state.hasBeenTriggered = false;\n  }\n\n  // Update text visibility\n  updateTextVisibility(key, currentCameraProgress, state, parent, povElements, camElements);\n}\n\nfunction updateTextVisibility(\n  key: string,\n  currentCameraProgress: number,\n  state: any,\n  parent: HTMLElement,\n  povElements: NodeListOf<Element>,\n  camElements: NodeListOf<Element>\n) {\n  // Calculate target opacities using precise fade timing positions\n  let targetGhostOpacity = 0;\n  let targetCamOpacity = 0;\n\n  // Ghost text fade in (ghostStartFadeIn -> ghostEndFadeIn)\n  if (currentCameraProgress >= state.ghostStartFadeInProgress && currentCameraProgress <= state.ghostEndFadeInProgress) {\n    const fadeProgress = (currentCameraProgress - state.ghostStartFadeInProgress) /\n      (state.ghostEndFadeInProgress - state.ghostStartFadeInProgress);\n    targetGhostOpacity = Math.min(1, fadeProgress);\n    parent.style.opacity = targetGhostOpacity.toString();\n  }\n  // Ghost text stays fully visible (ghostEndFadeIn -> ghostStartFadeOut)\n  else if (currentCameraProgress > state.ghostEndFadeInProgress && currentCameraProgress < state.ghostStartFadeOutProgress) {\n    targetGhostOpacity = 1;\n  }\n  // Ghost text fade out (ghostStartFadeOut -> camStartFadeIn) - finishes exactly when cam starts fading in\n  else if (currentCameraProgress >= state.ghostStartFadeOutProgress && currentCameraProgress <= state.camStartFadeInProgress) {\n    const fadeOutProgress = (currentCameraProgress - state.ghostStartFadeOutProgress) /\n      (state.camStartFadeInProgress - state.ghostStartFadeOutProgress);\n    targetGhostOpacity = Math.max(0, 1 - fadeOutProgress);\n  }\n\n  // CAM text fade in (camStartFadeIn -> camEndFadeIn)\n  if (currentCameraProgress >= state.camStartFadeInProgress && currentCameraProgress <= state.camEndFadeInProgress) {\n    const fadeProgress = (currentCameraProgress - state.camStartFadeInProgress) /\n      (state.camEndFadeInProgress - state.camStartFadeInProgress);\n    targetCamOpacity = Math.min(1, fadeProgress);\n  }\n  // CAM text stays visible (camEndFadeIn -> camStartFadeOut)\n  else if (currentCameraProgress > state.camEndFadeInProgress && currentCameraProgress < state.camStartFadeOutProgress) {\n    targetCamOpacity = 1;\n  }\n  // CAM text fade out (camStartFadeOut -> endPosition)\n  else if (currentCameraProgress >= state.camStartFadeOutProgress && currentCameraProgress <= state.endCameraProgress) {\n    const fadeOutProgress = (currentCameraProgress - state.camStartFadeOutProgress) /\n      (state.endCameraProgress - state.camStartFadeOutProgress);\n    targetCamOpacity = Math.max(0, 1 - fadeOutProgress);\n    parent.style.opacity = targetCamOpacity.toString();\n  }\n\n  const isPassed = targetCamOpacity > 0.01 && targetGhostOpacity > 0.01;\n\n  if (isPassed) {\n    if (!parent.classList.contains(\"no-visibility\")) {\n      parent.classList.add(\"no-visibility\");\n    }\n  } else {\n    if (!parent.classList.contains(\"no-visibility\")) {\n      parent.classList.remove(\"no-visibility\");\n    }\n  }\n\n  // Update all POV elements (ghost text)\n  povElements.forEach((povElement) => {\n    const element = povElement as HTMLElement;\n    if (targetGhostOpacity > 0.01) {\n      element.classList.remove(\"no-visibility\");\n      element.style.opacity = targetGhostOpacity.toString();\n    } else if (targetGhostOpacity <= 0.01 && !element.classList.contains(\"no-visibility\")) {\n      element.classList.add(\"no-visibility\");\n      element.style.opacity = \"0\";\n    }\n  });\n\n  // Update all CAM elements\n  camElements.forEach((camElement) => {\n    const element = camElement as HTMLElement;\n    if (targetCamOpacity > 0.01) {\n      element.classList.remove(\"no-visibility\");\n      element.style.opacity = targetCamOpacity.toString();\n    } else if (targetCamOpacity <= 0.01 && !element.classList.contains(\"no-visibility\")) {\n      element.classList.add(\"no-visibility\");\n      element.style.opacity = \"0\";\n    }\n  });\n}\n\nfunction handleLeavePOV() {\n  isInPovSection = false;\n\n  // Reset all ghost states\n  Object.entries(ghosts).forEach(([key, ghost]) => {\n    if (key !== \"pacman\") {\n      ghost.visible = false;\n\n      const ghostIndex = parseInt(key.replace(\"ghost\", \"\")) - 1;\n      const parentElements = document.querySelectorAll(\".cmp--pov.cmp\");\n      const parent = parentElements[ghostIndex] as HTMLElement;\n\n      if (parent) {\n        // Hide all POV and CAM elements\n        const povElements = document.querySelectorAll(\".pov\");\n        const camElements = document.querySelectorAll(\".cam\");\n\n        povElements.forEach((povElement) => {\n          const element = povElement as HTMLElement;\n          element.classList.add(\"no-visibility\");\n          element.style.opacity = \"0\";\n        });\n\n        camElements.forEach((camElement) => {\n          const element = camElement as HTMLElement;\n          element.classList.add(\"no-visibility\");\n          element.style.opacity = \"0\";\n        });\n      }\n\n      if (!parent.classList.contains(\"no-visibility\")) {\n        parent.classList.add(\"no-visibility\");\n      }\n\n      // Reset ghost material opacity\n      const mesh = ghost as THREE.Mesh;\n      if (mesh.material && 'opacity' in mesh.material) {\n        (mesh.material as THREE.Material & { opacity: number }).opacity = 1;\n      }\n    }\n  });\n\n  // Show pacman again\n  if (ghosts.pacman) {\n    ghosts.pacman.visible = true;\n  }\n\n  // Reset camera\n  camera.fov = originalFOV;\n  camera.updateProjectionMatrix();\n\n  // Reset tangent smoothers\n  Object.keys(povTangentSmoothers).forEach((key) => {\n    if (povTangentSmoothers[key]) {\n      const resetVector = key === \"camera\" ? new THREE.Vector3(0, 0, -1) : new THREE.Vector3(1, 0, 0);\n      povTangentSmoothers[key].reset(resetVector);\n    }\n  });\n}\n\nfunction resetState(isReverse: boolean = false) {\n  // Reset camera state\n  if (ghosts.pacman) {\n    ghosts.pacman.visible = true;\n  }\n\n  rotationStarted = false;\n  cachedStartYAngle = null;\n  startEndProgress = 0;\n  startedInitEndScreen = false;\n\n  if (!isReverse) {\n    const canvas = document.querySelector(\"canvas\") as HTMLCanvasElement;\n    if (canvas) {\n      canvas.style.display = \"none\";\n    }\n    camera.lookAt(finalLookAt);\n    endScreenPassed = true;\n  } else {\n    endScreenPassed = false;\n  }\n\n  // Reset all ghost states\n  Object.keys(ghostStates).forEach((key) => {\n    ghostStates[key] = {\n      hasBeenTriggered: false,\n      hasBeenDeactivated: false,\n      triggerCameraProgress: null,\n      ghostStartFadeInProgress: null,\n      ghostEndFadeInProgress: null,\n      ghostStartFadeOutProgress: null,\n      camStartFadeInProgress: null,\n      camEndFadeInProgress: null,\n      camStartFadeOutProgress: null,\n      endCameraProgress: null,\n      currentPathT: 0,\n      ghostTextOpacity: 0,\n      camTextOpacity: 0,\n      lastProgress: 0,\n    };\n\n    // Reset tangent smoothers\n    if (povTangentSmoothers[key]) {\n      povTangentSmoothers[key].reset(new THREE.Vector3(1, 0, 0));\n    }\n  });\n\n  // Reset camera tangent smoother\n  if (povTangentSmoothers.camera) {\n    povTangentSmoothers.camera.reset(new THREE.Vector3(0, 0, -1));\n  }\n}\n\nfunction initEndScreen() {\n  const finalSection = document.querySelector(\".sc--final.sc\") as HTMLElement;\n  if (!finalSection) return;\n\n  const tl = gsap.timeline({\n    scrollTrigger: {\n      trigger: \".sc--final\",\n      start: \"top top\",\n      end: \"bottom bottom\",\n      scrub: 0.5,\n      toggleActions: \"play none none reverse\",\n    },\n  });\n\n  tl.to(finalSection, {\n    opacity: 1,\n    ease: \"power2.inOut\",\n    onComplete: () => {\n      endScreenPassed = true;\n      startedInitEndScreen = false;\n    },\n  });\n}\n\n// Utility functions\nfunction smoothStep(x: number): number {\n  return x * x * (3 - 2 * x);\n}\n\nfunction getCameraLookAtPoint(): THREE.Vector3 {\n  const direction = new THREE.Vector3(0, 0, -1);\n  direction.applyQuaternion(camera.quaternion);\n  const lookAtPoint = new THREE.Vector3();\n  lookAtPoint.copy(camera.position).add(direction.multiplyScalar(10));\n  return lookAtPoint;\n}\n\nfunction findClosestProgressOnPath(\n  path: THREE.CurvePath<THREE.Vector3>,\n  targetPoint: THREE.Vector3,\n  samples: number = 2000\n): number {\n  if (!path || !targetPoint) return 0;\n\n  let closestProgress = 0;\n  let closestDistance = Infinity;\n\n  for (let i = 0; i < samples; i++) {\n    try {\n      const t = i / (samples - 1);\n      const pointOnPath = path.getPointAt(t);\n      if (!pointOnPath) continue;\n\n      const distance = pointOnPath.distanceTo(targetPoint);\n      if (distance < closestDistance) {\n        closestDistance = distance;\n        closestProgress = t;\n      }\n    } catch (error) {\n      // Continue on error\n    }\n  }\n\n  return closestProgress;\n}\n\n// Track scroll direction\nlet oldTop = 0;\nwindow.addEventListener(\"scroll\", () => {\n  const top = window.scrollY;\n  isMovingForward = top > oldTop;\n  oldTop = top;\n});\n","import {\n  startRenderLoop,\n  initRenderer,\n  setupLighting,\n  scene,\n} from \"./core/scene\";\nimport {\n  homeLoopHandler,\n  setupHomeLoopScrollHandler,\n} from \"./animation/home-loop\";\nimport { initPovScrollAnimation } from \"./animation/pov-scroll\";\nimport { loadModel } from \"./core/objects\";\nimport { setupCamera } from \"./core/camera\";\n\nasync function main() {\n  initRenderer();\n  setupLighting();\n  setupCamera();\n  await loadModel(scene);\n\n  homeLoopHandler();\n  setupHomeLoopScrollHandler();\n\n  initPovScrollAnimation();\n\n  startRenderLoop();\n}\n\nmain();\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","THREE","isMobile","window","innerWidth","DOM_ELEMENTS","mazeContainer","document","querySelector","canvas","homeSection","introSection","povSection","finalSection","finalContainer","parentElements","querySelectorAll","gsap","ScrollTrigger","objectHomeScrollEndPathPoint","cameraPathPointsConfig","startMobile","startDesktop","secondMobile","secondDesktop","mobileLookAt","desktopLookAt","cameraLookAtSecondDesktop","cameraLookAtSecondMobile","cameraHomeScrollEndLookAt","thirdPosition","cameraHomeScrollEndPathPoint","startPosition","secondPosition","lookAtPosition","cameraLookAtSecondPosition","pacmanHomePathPoints","pos","type","arc","curveCheckPoints","ghost1HomePathPoints","ghost2HomePathPoints","ghost3HomePathPoints","ghost4HomePathPoints","ghost5HomePathPoints","cameraHomeScrollPathPoints","lookAt","cameraPOVPathPoints","ghost1POVPathPoints","ghost2POVPathPoints","ghost3POVPathPoints","ghost4POVPathPoints","ghost5POVPathPoints","povTriggerPositions","ghost1","triggerPos","ghostStartFadeIn","ghostEndFadeIn","ghostStartFadeOut","camStartFadeIn","camEndFadeIn","camStartFadeOut","endPosition","ghost2","getStartPosition","getLookAtPosition","homePaths","pacman","ghost3","ghost4","ghost5","povPaths","camera","getCameraHomeScrollPathPoints","innerHeight","scene","renderer","antialias","alpha","powerPreference","precision","clock","frameCallbacks","setPixelRatio","pixelRatio","Math","min","devicePixelRatio","setSize","clientWidth","clientHeight","aspect","updateProjectionMatrix","mazeTexture","load","mazeMaterial","matcap","topMaterial","color","metalness","roughness","envMapIntensity","ghostMaterial","opacity","transparent","depthWrite","depthTest","blending","side","transmission","floorMaterial","pacmanMaterials","blue","white","default","materialMap","CAM_Pacman_Backframe","CAM_Pacman_Logo_1","CAM_Pacman_Logo_2","loader","pacmanMixer","ghosts","ghostContainers","Ghost_EUR","Ghost_CHF","Ghost_YEN","Ghost_USD","Ghost_GBP","pathCache","Map","TangentSmoother","constructor","initialTangent","smoothing","this","currentTangent","clone","update","targetTangent","lerp","normalize","reset","newTangent","copy","setSmoothingFactor","max","createMazePath","pathPoints","pathName","cacheKey","map","p","x","y","z","join","has","path","i","length","current","next","catmullPoints","console","log","add","midPoint","createNormalCurveMidPoint","set","curveType","createCameraHomeScrollPath","curve","getHomePaths","paths","entries","forEach","getPovPaths","calculateObjectOrientation","object","tangent","objectType","targetRotation","atan2","rotation","PI","lookAtPoint","position","slerpToLayDown","startQuat","progress","layDownQuat1","setFromEuler","layDownQuat2","targetQuat","angleTo","quaternion","slerp","homeScrollTimeline","characterSpeeds","initHomeScrollAnimation","pausedPositions","pausedRotations","kill","scrollPaths","scrollPathPoints","pausedPos","arcPoint","createHomeScrollPathPoints","createHomeScrollPath","getHomeScrollPaths","cameraPathPoints","scrollTrigger","id","trigger","start","end","scrub","onScrubComplete","homeLoopHandler","to","immediateRender","onUpdate","cameraPoint","getPointAt","getPoint","fadeStartProgress","pacmanSpeed","rawPacmanProgress","easedPacmanProgress","pow","pacmanPoint","traverse","child","isMesh","material","ghost","ghostSpeed","rawGhostProgress","easedGhostProgress","ghostPoint","updateScrollAnimation","targets","LOOP_DURATION","isHomeLoopActive","animationTime","pausedT","homeLoopFrameRegistered","homeLoopTangentSmoothers","scrollY","callback","getTangentAt","delta","t","rawTangent","updateHomeLoop","getDelta","push","startHomeLoop","povScrollTimeline","isInPovSection","previousCameraPosition","animationStarted","rotationStarted","startedInitEndScreen","endScreenPassed","startEndProgress","startRotationPoint","endRotationPoint","targetLookAt","finalLookAt","reverseFinalLookAt","cachedStartYAngle","isMovingForward","ghostStates","povTangentSmoothers","initPovScrollAnimation","keys","hasBeenTriggered","hasBeenDeactivated","triggerCameraProgress","ghostStartFadeInProgress","ghostEndFadeInProgress","ghostStartFadeOutProgress","camStartFadeInProgress","camEndFadeInProgress","camStartFadeOutProgress","endCameraProgress","currentPathT","ghostTextOpacity","camTextOpacity","lastProgress","endTrigger","toggleActions","onEnter","onLeave","handleLeavePOV","onLeaveBack","onStart","handleAnimationStart","handleAnimationUpdate","onReverseComplete","resetState","onComplete","initialCameraTangent","visible","scale","overallProgress","cameraPosition","fov","style","display","smoothTangent","defaultLookAt","startRotationProgress","findClosestProgressOnPath","endRotationProgress","sectionProgress","startDir","targetDir","targetYAngle","angleDiff","easedProgress","smoothStep","newYAngle","radius","newLookAt","cos","sin","ease","initEndScreen","handleRotationPhase","truncatedProgress","floor","animationProgress","currentLookAt","direction","applyQuaternion","multiplyScalar","getCameraLookAtPoint","interpolatedLookAt","lerpVectors","startFOV","targetFOV","wideFOV","handleEndSequence","handleDefaultOrientation","updateCamera","triggerData","state","parent","parseInt","replace","povElements","camElements","currentCameraProgress","normalizedProgress","ghostProgress","undefined","parameterSmoothingFactor","pathPoint","mesh","targetGhostOpacity","targetCamOpacity","fadeProgress","toString","fadeOutProgress","classList","contains","remove","povElement","element","camElement","updateTextVisibility","updateGhost","updateGhosts","ghostIndex","resetVector","isReverse","targetPoint","samples","closestProgress","closestDistance","Infinity","pointOnPath","distance","distanceTo","error","oldTop","addEventListener","top","async","shadowMap","enabled","appendChild","domElement","body","render","ambientLight","directionalLight","shadow","mapSize","width","height","left","right","bottom","near","far","bias","castShadow","setupLighting","setupCamera","values","Promise","resolve","reject","gltf","model","name","children","subChild","item","pacmanActions","animations","clip","action","clipAction","setEffectiveWeight","play","ghostContainer","ghostGroup","startsWith","includes","warn","clonedChild","receiveShadow","node","loadModel","requestAnimationFrame","startRenderLoop","main"],"sourceRoot":""}