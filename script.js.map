{"version":3,"file":"script.js","mappings":"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","sources":["webpack://cam-3d-animation/external var \"THREE\"","webpack://cam-3d-animation/./src/config.ts","webpack://cam-3d-animation/./src/scene.ts","webpack://cam-3d-animation/./src/camera.ts","webpack://cam-3d-animation/./src/materials.ts","webpack://cam-3d-animation/./src/objects.ts","webpack://cam-3d-animation/./src/paths.ts","webpack://cam-3d-animation/./src/animation-system.ts","webpack://cam-3d-animation/./src/main.ts"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = THREE;","import * as THREE from \"three\";\nimport { TriggerPosition } from \"./types\";\nimport { parentElements } from \"./scene\";\n\n// Camera Configuration\nexport const CAMERA_CONFIG = {\n  originalFOV: 50,\n  wideFOV: 80,\n  near: 0.001,\n  far: 1000,\n};\n\n// Mobile Detection\nexport const isMobile = window.innerWidth < 768;\n\n// Camera Positions\nexport const CAMERA_POSITIONS = {\n  startMobile: new THREE.Vector3(0.5, 2.5, 2.5),\n  startDesktop: new THREE.Vector3(-2, 2.5, 2),\n  secondMobile: new THREE.Vector3(0.5, 2.5, 2),\n  secondDesktop: new THREE.Vector3(-1.5, 3, 2),\n  mobileLookAt: new THREE.Vector3(0.5, 0.5, -1.5),\n  desktopLookAt: new THREE.Vector3(-1.25, 0.5, 0.25),\n};\n\n// Get correct positions based on device\nexport const startPosition = isMobile\n  ? CAMERA_POSITIONS.startMobile\n  : CAMERA_POSITIONS.startDesktop;\nexport const secondPosition = isMobile\n  ? CAMERA_POSITIONS.secondMobile\n  : CAMERA_POSITIONS.secondDesktop;\nexport const lookAtPosition = isMobile\n  ? CAMERA_POSITIONS.mobileLookAt\n  : CAMERA_POSITIONS.desktopLookAt;\n\n// Maze Center Position for Bezier Curves\nexport const MAZE_CENTER = new THREE.Vector3(0.45175, 0.5, 0.55675);\n\n// Asset URLs\nexport const ASSETS = {\n  mazeTexture: \"https://c-am.b-cdn.net/CAM/matcap24.png\",\n  mazeModel: \"https://c-am.b-cdn.net/CAM/c-am-assets-3.glb\",\n};\n\n// DOM Selectors\nexport const SELECTORS = {\n  mazeContainer: \".el--home-maze.el\",\n  scrollComponent: \".cmp--scroll\",\n  introSection: \".sc--intro\",\n  homeSection: \".sc--home\",\n  povSection: \".sc--pov\",\n  finalSection: \".sc--final.sc\",\n  parentElements: \".cmp--pov.cmp\",\n};\n\n// POV Positions for Ghosts\nexport const POV_POSITIONS = {\n  ghost1: new THREE.Vector3(0.65725, 0.55, 0.75325),\n  ghost2: new THREE.Vector3(0.9085, 0.55, 0.8035),\n  ghost3: new THREE.Vector3(0.75775, 0.55, 1.05475),\n  ghost4: new THREE.Vector3(0.65725, 0.55, 1.0045),\n  ghost5: new THREE.Vector3(0.15475, 0.55, 1.15525),\n};\n\n// Shader Configuration\nexport const SHADER_CONFIG = {\n  vertexShader: `\n    varying vec3 vPosition;\n    void main() {\n      vPosition = position;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n  `,\n  fragmentShader: `\n    varying vec3 vPosition;\n    uniform float mixValue;\n    void main() {\n      float factor = (vPosition.y + 1.0) / 2.0;\n      vec3 colorA = vec3(0.0, 0.0, 1.0);\n      vec3 colorB = vec3(0.0, 1.0, 1.0);\n      vec3 colorC = vec3(1.0, 0.0, 0.0);\n      vec3 colorD = vec3(1.0, 1.0, 0.0);\n      \n      vec3 gradientA = mix(colorA, colorB, factor);\n      vec3 gradientB = mix(colorC, colorD, factor);\n      \n      vec3 finalColor = mix(gradientA, gradientB, mixValue);\n      gl_FragColor = vec4(finalColor, 1.0);\n    }\n  `,\n};\n","import * as THREE from 'three';\nimport { SELECTORS, isMobile } from './config';\n\n// Scene Setup\nexport const scene = new THREE.Scene();\n\n// Renderer Setup\nexport const renderer = new THREE.WebGLRenderer({\n  antialias: true,\n  alpha: true,\n  powerPreference: 'high-performance',\n  precision: 'highp'\n});\n\n// Container\nexport const container = document.querySelector(SELECTORS.mazeContainer) as HTMLElement;\n\n// Clock for animations\nexport const clock = new THREE.Clock();\n\n// Anti-aliasing Enhancement\nfunction enhanceAntiAliasing(): void {\n  if (isMobile) {\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n  } else {\n    renderer.setPixelRatio(window.devicePixelRatio);\n  }\n  renderer.shadowMap.enabled = true;\n  renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n}\n\n// Pixel Ratio Setup - ADDED to match backup.js\nfunction setPixelRatio(): void {\n  const pixelRatio = Math.min(window.devicePixelRatio, isMobile ? 2 : 3);\n  renderer.setPixelRatio(pixelRatio);\n  renderer.setSize(container.clientWidth, container.clientHeight);\n}\n\n// Initialize Renderer - FIXED to match backup.js\nexport function initRenderer(): void {\n  enhanceAntiAliasing();\n  renderer.shadowMap.enabled = true;\n  renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n  renderer.setSize(container.clientWidth, container.clientHeight);\n  container.appendChild(renderer.domElement);\n\n  // ADD these event listeners to match backup.js:\n  window.addEventListener(\"load\", setPixelRatio);\n  window.addEventListener(\"resize\", setPixelRatio);\n}\n\n// Lighting Setup\nexport function setupLighting(): void {\n  const ambientLight = new THREE.AmbientLight(0xffffff);\n  scene.add(ambientLight);\n\n  const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n  scene.add(directionalLight);\n  directionalLight.position.set(-5, 15, 10);\n  directionalLight.shadow.mapSize.width = 4096;\n  directionalLight.shadow.mapSize.height = 4096;\n  directionalLight.shadow.camera.left = -20;\n  directionalLight.shadow.camera.right = 20;\n  directionalLight.shadow.camera.top = 20;\n  directionalLight.shadow.camera.bottom = -20;\n  directionalLight.shadow.camera.near = 0.1;\n  directionalLight.shadow.camera.far = 50;\n  directionalLight.shadow.bias = -0.001;\n  directionalLight.shadow.radius = 3;\n  directionalLight.castShadow = true;\n}\n\n// Canvas and DOM Elements\nexport const canvas = document.querySelector(\"canvas\") as HTMLCanvasElement;\nexport const finalSection = document.querySelector(SELECTORS.finalSection) as HTMLElement;\nexport const finalContainer = finalSection?.querySelector(\".cr--final.cr\") as HTMLElement;\nexport const parentElements = document.querySelectorAll(SELECTORS.parentElements) as NodeListOf<Element>;","import * as THREE from \"three\";\nimport {\n  CAMERA_CONFIG,\n  startPosition,\n  secondPosition,\n  lookAtPosition,\n} from \"./config\";\nimport { container } from \"./scene\";\n\n// Camera Setup\nexport const camera = new THREE.PerspectiveCamera(\n  CAMERA_CONFIG.originalFOV,\n  container.clientWidth / container.clientHeight,\n  CAMERA_CONFIG.near,\n  CAMERA_CONFIG.far\n);\n\n// Initialize Camera\nexport function initCamera(): void {\n  camera.position.copy(startPosition);\n  camera.lookAt(lookAtPosition);\n}\n\n// Camera Quaternions\nexport const startQuaternion = camera.quaternion.clone();\nexport const endQuaternion = new THREE.Quaternion().setFromEuler(\n  new THREE.Euler(-1.5708, 0, 0)\n);\n\n// Camera Utility Functions\nexport function getCameraLookAtPoint(): THREE.Vector3 {\n  const direction = new THREE.Vector3(0, 0, -1);\n  direction.applyQuaternion(camera.quaternion);\n  const lookAtPoint = new THREE.Vector3();\n  lookAtPoint.copy(camera.position).add(direction.multiplyScalar(10));\n  return lookAtPoint;\n}\n\n// Global camera setter for debugging\n(window as any).setCamera = function (lookAt: string | THREE.Vector3): void {\n  if (typeof lookAt === \"string\") {\n    const [x, y, z] = lookAt.split(\",\").map(Number);\n    lookAt = new THREE.Vector3(x, y, z);\n  }\n  camera.lookAt(lookAt);\n  camera.updateProjectionMatrix();\n  camera.updateMatrix();\n  camera.updateMatrixWorld();\n};\n\n// Resize Handler\nexport function setupCameraResize(): void {\n  window.addEventListener(\"resize\", () => {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n  });\n}\n","import * as THREE from 'three';\nimport { ASSETS, SHADER_CONFIG } from './config';\nimport { MaterialMap } from './types';\n\n// Texture Loader\nconst textureLoader = new THREE.TextureLoader();\n\n// Load Textures\nexport const mazeTexture = textureLoader.load(ASSETS.mazeTexture);\n\n// Basic Materials\nexport const mazeMaterial = new THREE.MeshMatcapMaterial({ matcap: mazeTexture });\n\nexport const topMaterial = new THREE.MeshStandardMaterial({\n  color: 0xf2f9f9,\n  metalness: 0.4,\n  roughness: 0,\n  envMapIntensity: 10,\n});\n\nexport const ghostMaterial = new THREE.MeshPhysicalMaterial({\n  color: 0xffffff,\n  opacity: 1,\n  transparent: true,\n  depthWrite: false,\n  depthTest: true,\n  blending: THREE.NormalBlending,\n  side: THREE.DoubleSide,\n  roughness: 0.75,\n  metalness: 0.2,\n  transmission: 0.5,\n});\n\nexport const floorMaterial = new THREE.MeshStandardMaterial({\n  color: 0xffffff,\n  opacity: 0.8,\n  transparent: true,\n  roughness: 0.5,\n  metalness: 0.1,\n});\n\n// Shader Material\nexport const pacmanShaderMaterial = new THREE.ShaderMaterial({\n  vertexShader: SHADER_CONFIG.vertexShader,\n  fragmentShader: SHADER_CONFIG.fragmentShader,\n  uniforms: {\n    mixValue: { value: 0.0 },\n  },\n});\n\n// Pacman Materials\nexport const pacmanMaterials = {\n  blue: new THREE.MeshBasicMaterial({ color: 0x1469d3 }),\n  white: new THREE.MeshBasicMaterial({ color: 0xffffff }),\n  default: new THREE.MeshBasicMaterial({ color: 0x1469d3 })\n};\n\n// Material Mapping for Pacman Parts\nexport const materialMap: MaterialMap = {\n  CAM_Pacman_Backframe: pacmanMaterials.blue,\n  \"CAM-Pacman_Bitcoin_1\": pacmanMaterials.white,\n  \"CAM-Pacman_Bitcoin_2\": pacmanMaterials.white,\n  \"CAM-Pacman_Bottom\": pacmanMaterials.blue,\n  \"CAM-Pacman_Top\": pacmanMaterials.blue,\n  \"CAM-Pacman_Eye\": pacmanMaterials.white,\n  CAM_Pacman_Logo_1: pacmanMaterials.white,\n  CAM_Pacman_Logo_2: pacmanMaterials.white,\n  \"CAM-Pacman_Shell_Boolean\": pacmanMaterials.blue,\n  \"CAM-Pacman_Shell\": pacmanMaterials.blue,\n  \"CAM-Pacman_Bottom_electronic\": pacmanMaterials.white,\n  \"CAM-Pacman_Top_electronic\": pacmanMaterials.white,\n  \"CAM-Pacman_Bottom_Text\": pacmanMaterials.white,\n  \"CAM-Pacman_Top_Text\": pacmanMaterials.white,\n  default: pacmanMaterials.blue\n};\n\n// Ghost Cover Materials\nexport const ghostCoverMaterials = Array(5).fill(ghostMaterial);","import * as THREE from \"three\";\nimport { ASSETS } from \"./config\";\nimport { GhostContainer } from \"./types\";\nimport { scene, clock } from \"./scene\";\nimport {\n  mazeMaterial,\n  topMaterial,\n  ghostMaterial,\n  floorMaterial,\n  materialMap,\n} from \"./materials\";\n\n// Export clock for animation system\nexport { clock };\n\n// GLB Loader - check if available in global THREE\nconsole.log(\"Checking for GLTFLoader...\");\nconsole.log(\"THREE object:\", typeof THREE);\nconsole.log(\"GLTFLoader available:\", !!(THREE as any).GLTFLoader);\n\nconst loader = (THREE as any).GLTFLoader\n  ? new (THREE as any).GLTFLoader()\n  : null;\n\nif (loader) {\n  console.log(\"GLTFLoader created successfully\");\n} else {\n  console.warn(\"GLTFLoader not available - model will not load\");\n}\n\n// Animation Mixer\nexport let pacmanMixer: THREE.AnimationMixer;\n\n// Pacman Group\nexport const pacman = new THREE.Group();\nscene.add(pacman);\n\n// Ghost Objects\nexport const ghosts: GhostContainer = {\n  pacman: pacman,\n  ghost1: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost2: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost3: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost4: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost5: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n};\n\n// Add ghosts to scene\nObject.values(ghosts).forEach((ghost) => scene.add(ghost));\n\n// Add a test cube to verify rendering\nconst testGeometry = new THREE.BoxGeometry(1, 1, 1);\nconst testMaterial = new THREE.MeshBasicMaterial({ color: 0xff0000 });\nconst testCube = new THREE.Mesh(testGeometry, testMaterial);\ntestCube.position.set(0, 0, 0);\nscene.add(testCube);\nconsole.log(\"Test cube added to scene\");\n\n// Ghost Container Mapping\nconst ghostContainers: GhostContainer = {\n  Ghost_EUR: ghosts.ghost1,\n  Ghost_CHF: ghosts.ghost2,\n  Ghost_YEN: ghosts.ghost3,\n  Ghost_USD: ghosts.ghost4,\n  Ghost_GBP: ghosts.ghost5,\n};\n\n// Load 3D Model - FIXED to match backup.js exactly\nexport function loadModel(): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (!loader) {\n      console.warn(\n        \"GLTFLoader not available. Please include GLTFLoader script.\"\n      );\n      resolve();\n      return;\n    }\n\n    loader.load(\n      ASSETS.mazeModel,\n      function (gltf: any) {\n        const model = gltf.scene;\n        const pacmanNames: string[] = [];\n\n        model.traverse((child: THREE.Object3D) => {\n          // Null check for child.name\n          const childName = child.name || \"\";\n\n          // PACMAN PROCESSING - inline like backup.js\n          if (childName === \"CAM-Pacman\") {\n            const children: THREE.Mesh[] = [];\n\n            child.traverse((subChild) => {\n              const subChildName = subChild.name || \"\";\n\n              if (\n                (subChild as any).isMesh &&\n                subChildName !== \"CAM-Pacman_Shell\" &&\n                subChildName !== \"CAM-Pacman_Shell_Boolean\"\n              ) {\n                (subChild as THREE.Mesh).material =\n                  materialMap[subChildName] || materialMap.default;\n                children.push(subChild as THREE.Mesh);\n              } else if (\n                subChildName === \"CAM-Pacman_Shell\" ||\n                subChildName === \"CAM-Pacman_Shell_Boolean\"\n              ) {\n                subChild.visible = false;\n                (subChild as any).morphTargetInfluences = [];\n                subChild.userData.skipAnimation = true;\n              }\n              pacmanNames.push(subChildName);\n            });\n\n            children.forEach((item) => ghosts.pacman.add(item));\n            ghosts.pacman.scale.set(0.05, 0.05, 0.05);\n            ghosts.pacman.rotation.set(Math.PI / 2, Math.PI / 2, Math.PI / 4);\n\n            // Animation setup\n            if (gltf.animations && gltf.animations.length > 0) {\n              pacmanMixer = new THREE.AnimationMixer(ghosts.pacman);\n              const pacmanActions: { [key: string]: THREE.AnimationAction } =\n                {};\n\n              gltf.animations.forEach((clip: THREE.AnimationClip) => {\n                const action = pacmanMixer.clipAction(clip);\n\n                action.getMixer().addEventListener(\"loop\", function (e: any) {\n                  e.action.getRoot().traverse(function (obj: any) {\n                    if (obj.userData && obj.userData.skipAnimation) {\n                      obj.updateMorphTargets = function () {};\n                    }\n                  });\n                });\n\n                pacmanActions[clip.name] = action;\n                action.setEffectiveWeight(0);\n                action.play();\n              });\n\n              Object.values(pacmanActions).forEach((action) => {\n                action.setEffectiveWeight(1);\n              });\n            }\n          }\n          // GHOST PROCESSING\n          else if (ghostContainers[childName]) {\n            const ghostContainer = ghostContainers[childName];\n            const ghostGroup = new THREE.Group();\n\n            child.rotation.z = Math.PI;\n            child.rotation.x = Math.PI / 2;\n            child.scale.set(0.75, 0.75, 0.75);\n\n            const children: THREE.Object3D[] = [];\n            child.traverse((subChild) => {\n              const subChildName = subChild.name || \"\";\n\n              if ((subChild as any).isMesh) {\n                if (subChildName.startsWith(\"Ghost_Mesh\")) {\n                  if (subChild instanceof THREE.Mesh) {\n                    subChild.material = ghostMaterial;\n                  }\n                } else if (\n                  [\"EUR\", \"CHF\", \"YEN\", \"USD\", \"GBP\"].includes(subChildName)\n                ) {\n                  subChild.visible = false;\n                }\n                children.push(subChild);\n              }\n            });\n\n            children.forEach((item) => {\n              const itemName = item.name || \"\";\n              if (\n                itemName.includes(\"EUR\") ||\n                itemName.startsWith(\"Ghost_Mesh\")\n              ) {\n                item.rotation.z = Math.PI;\n                item.rotation.x = Math.PI / 2;\n              } else {\n                item.rotation.set(0, 0, 0);\n              }\n              ghostGroup.add(item);\n            });\n\n            if (\n              ghostContainer instanceof THREE.Mesh ||\n              ghostContainer instanceof THREE.Group\n            ) {\n              ghostContainer.add(ghostGroup);\n            }\n          }\n\n          // MESH PROCESSING\n          if ((child as any).isMesh) {\n            if (childName === \"CAM-Arena_LowRes_Top\") {\n              (child as THREE.Mesh).material = topMaterial;\n              child.castShadow = true;\n            } else if (childName === \"CAM-Arena_LowRes_Bottom\") {\n              (child as THREE.Mesh).material = mazeMaterial;\n              child.castShadow = true;\n            } else if (childName === \"CAM-Floor\") {\n              const clonedChild = child.clone();\n              child.position.y = -0.1;\n              child.position.x = 0;\n              child.position.z = 0;\n              (child as THREE.Mesh).material = new THREE.MeshBasicMaterial({\n                color: 0xffffff,\n                opacity: 1,\n                transparent: false,\n                depthWrite: true,\n                depthTest: true,\n                side: THREE.FrontSide,\n              });\n              child.receiveShadow = false;\n              child.castShadow = true;\n              child.scale.set(0.5, 0.5, 0.5);\n              (clonedChild as THREE.Mesh).material = floorMaterial;\n              clonedChild.position.y = -0.5;\n              clonedChild.receiveShadow = true;\n              scene.add(clonedChild);\n            }\n          }\n        });\n\n        // Enable shadows AFTER traversing\n        model.traverse(function (node: THREE.Object3D) {\n          if ((node as any).isMesh) {\n            node.castShadow = true;\n            node.receiveShadow = true;\n          }\n        });\n\n        // Add model to scene and position it\n        scene.add(model);\n        model.position.set(0.5, 0.5, 0.5);\n        console.log(\"3D Model loaded successfully\");\n        resolve();\n      },\n      undefined,\n      function (error: ErrorEvent) {\n        console.error(\"Fehler beim Laden des 3D-Modells:\", error);\n        console.warn(\"Continuing without 3D model...\");\n        resolve();\n      }\n    );\n  });\n}\n","import * as THREE from \"three\";\nimport { PathPoint, PathData, PathMapping } from \"./types\";\nimport { CAMERA_POSITIONS, isMobile } from \"./config\";\n\n// Path Creation Utility\nexport function createPath(\n  pathPoints: PathPoint[]\n): THREE.CurvePath<THREE.Vector3> {\n  const path = new THREE.CurvePath<THREE.Vector3>();\n\n  for (let i = 0; i < pathPoints.length - 1; i++) {\n    const current = pathPoints[i];\n    const next = pathPoints[i + 1];\n\n    if (current.type === \"straight\") {\n      const line = new THREE.LineCurve3(current.pos, next.pos);\n      path.add(line);\n    } else if (current.type === \"curve\") {\n      let midPoint: THREE.Vector3;\n      if (current.curveType === \"upperArc\") {\n        midPoint = new THREE.Vector3(current.pos.x, current.pos.y, next.pos.z);\n      } else if (current.curveType === \"lowerArc\") {\n        midPoint = new THREE.Vector3(next.pos.x, current.pos.y, current.pos.z);\n      } else if (current.curveType === \"forwardDownArc\") {\n        midPoint = new THREE.Vector3(current.pos.x, next.pos.y, current.pos.z);\n      } else {\n        midPoint = new THREE.Vector3(current.pos.x, current.pos.y, next.pos.z);\n      }\n      const curve = new THREE.QuadraticBezierCurve3(\n        current.pos,\n        midPoint,\n        next.pos\n      );\n      path.add(curve);\n    }\n  }\n  return path;\n}\n\n// Path Points Definitions (shortened as requested)\nconst pacmanHomePathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.6025), type: \"straight\" },\n];\n\nconst ghost1HomePathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.502), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.75775, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.004, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.0965, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.502), type: \"straight\" },\n];\n\nconst ghost2HomePathPoints: PathPoint[] = [\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.004, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.502), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.3055, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.3055, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.0965, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n];\n\nconst ghost3HomePathPoints: PathPoint[] = [\n  {\n    pos: new THREE.Vector3(0.808, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.15475, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.55675, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.009, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.904), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.75775, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.004, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.808, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n];\n\nconst ghost4HomePathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.65725, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.15975, 0.55, 0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.6025), type: \"straight\" },\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.4015), type: \"straight\" },\n];\n\nconst ghost5HomePathPoints: PathPoint[] = [\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.04975),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.3055, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, -0.101), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.04975),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n];\n\nconst cameraPOVPathPoints: PathPoint[] = [\n  {\n    pos: new THREE.Vector3(0.55675, 0.5, 0.45175),\n    type: \"curve\",\n    curveType: \"forwardDownArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.607, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.7075, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.9085, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.85375), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.15525),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.9085, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.808, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.75775, 0.55, 1.15525), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 1.05475),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.7075, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.205, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.15475, 0.55, 1.05475), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.15525),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.205, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.5065, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 1.306),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.44825, 1, 2.0095), type: \"straight\" },\n];\n\nconst ghost1POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.009, 0.55, 0.8035), type: \"straight\" },\n  { pos: new THREE.Vector3(0.9085, 0.55, 0.8035), type: \"straight\" },\n];\n\nconst ghost2POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.009, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 1.15525), type: \"straight\" },\n  { pos: new THREE.Vector3(0.95875, 0.55, 1.05475), type: \"straight\" },\n];\n\nconst ghost3POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.904), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.95425),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.406, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.5065, 0.55, 1.0045), type: \"straight\" },\n];\n\nconst ghost4POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(0.15475, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.05475),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.205, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.3055, 0.55, 1.0045), type: \"straight\" },\n];\n\nconst ghost5POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(0.55675, 0.55, 1.306), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 1.25575),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.5065, 0.55, 1.2055), type: \"straight\" },\n  { pos: new THREE.Vector3(0.406, 0.55, 1.2055), type: \"straight\" },\n];\n\n// Camera Home Path - ensure it uses the correct positions based on device\nconst cameraStartPosition = isMobile\n  ? CAMERA_POSITIONS.startMobile\n  : CAMERA_POSITIONS.startDesktop;\nconst cameraSecondPosition = isMobile\n  ? CAMERA_POSITIONS.secondMobile\n  : CAMERA_POSITIONS.secondDesktop;\n\nexport const cameraHomePath = new THREE.CubicBezierCurve3(\n  cameraStartPosition,\n  cameraSecondPosition,\n  new THREE.Vector3(0.55675, 3, 0.45175),\n  new THREE.Vector3(0.55675, 0.5, 0.45175)\n);\n\n// Path Data Configuration\nexport const pathsData: { [key: string]: PathData } = {\n  pacmanHomePath: {\n    points: pacmanHomePathPoints,\n    color: 0xffff00,\n  },\n  ghost1HomePath: {\n    points: ghost1HomePathPoints,\n    color: 0xff0000,\n  },\n  ghost2HomePath: {\n    points: ghost2HomePathPoints,\n    color: 0xffa500,\n  },\n  ghost3HomePath: {\n    points: ghost3HomePathPoints,\n    color: 0xff69b4,\n  },\n  ghost4HomePath: {\n    points: ghost4HomePathPoints,\n    color: 0x32cd32,\n  },\n  ghost5HomePath: {\n    points: ghost5HomePathPoints,\n    color: 0xffdab9,\n  },\n  cameraPOVPath: {\n    points: cameraPOVPathPoints,\n    color: 0xffffff,\n  },\n  ghost1POVPath: {\n    points: ghost1POVPathPoints,\n    color: 0xff0000,\n  },\n  ghost2POVPath: {\n    points: ghost2POVPathPoints,\n    color: 0xffa500,\n  },\n  ghost3POVPath: {\n    points: ghost3POVPathPoints,\n    color: 0xff69b4,\n  },\n  ghost4POVPath: {\n    points: ghost4POVPathPoints,\n    color: 0x32cd32,\n  },\n  ghost5POVPath: {\n    points: ghost5POVPathPoints,\n    color: 0xffdab9,\n  },\n};\n\n// Path Mapping Functions\nexport function getPathsForSection(section: string): PathMapping {\n  const mapping: PathMapping = {};\n\n  if (section === \"home\") {\n    mapping.pacman = \"pacmanHomePath\";\n    mapping.ghost1 = \"ghost1HomePath\";\n    mapping.ghost2 = \"ghost2HomePath\";\n    mapping.ghost3 = \"ghost3HomePath\";\n    mapping.ghost4 = \"ghost4HomePath\";\n    mapping.ghost5 = \"ghost5HomePath\";\n  } else if (section === \"pov\") {\n    mapping.pacman = \"cameraPOVPath\";\n    mapping.ghost1 = \"ghost1POVPath\";\n    mapping.ghost2 = \"ghost2POVPath\";\n    mapping.ghost3 = \"ghost3POVPath\";\n    mapping.ghost4 = \"ghost4POVPath\";\n    mapping.ghost5 = \"ghost5POVPath\";\n  }\n  return mapping;\n}\n\n// Create all paths\nexport const paths: { [key: string]: THREE.CurvePath<THREE.Vector3> } = {};\n\n// Initialize paths\nObject.entries(pathsData).forEach(([key, data]) => {\n  paths[key] = createPath(data.points);\n});\n\n// Create pathsMap for ghost animation system\nexport const pathsMap: { [key: string]: THREE.CurvePath<THREE.Vector3> } = {\n  pacman: paths.pacmanHomePath,\n  ghost1: paths.ghost1HomePath,\n  ghost2: paths.ghost2HomePath,\n  ghost3: paths.ghost3HomePath,\n  ghost4: paths.ghost4HomePath,\n  ghost5: paths.ghost5HomePath,\n};\n","import * as THREE from \"three\";\nimport { ghosts, pacmanMixer, clock } from \"./objects\";\nimport { MAZE_CENTER } from \"./config\";\nimport { AnimationState, BezierCurve, GhostPosition } from \"./types\";\nimport { pathsMap } from \"./paths\";\n\n// 1. STATE MANAGEMENT\nlet currentAnimationState: AnimationState = \"HOME\";\nlet isFirstScroll = true;\n\n// 2. POSITION & BEZIER SYSTEM\nconst capturedPositions: { [key: string]: THREE.Vector3 } = {};\nconst bezierCurves: { [key: string]: BezierCurve } = {};\nconst originalPositions: { [key: string]: THREE.Vector3 } = {};\n\n// Store original positions for all ghosts\nfunction storeOriginalPositions() {\n  Object.keys(ghosts).forEach((ghostKey) => {\n    if (ghostKey !== \"pacman\" && ghosts[ghostKey]) {\n      originalPositions[ghostKey] = ghosts[ghostKey].position.clone();\n    }\n  });\n}\n\n// 2.1 Capture current ghost positions when first scroll happens\nfunction captureGhostPositions() {\n  Object.keys(ghosts).forEach((ghostKey) => {\n    if (ghostKey !== \"pacman\" && ghosts[ghostKey]) {\n      capturedPositions[ghostKey] = ghosts[ghostKey].position.clone();\n    }\n  });\n  console.log(\"Ghost positions captured:\", capturedPositions);\n}\n\n// 2.2 Create bezier curves from captured positions to maze center and back\nfunction createBezierCurves() {\n  Object.keys(capturedPositions).forEach((ghostKey) => {\n    const startPos = capturedPositions[ghostKey];\n    const midPos = MAZE_CENTER.clone();\n    const endPos = startPos.clone(); // Back to original position\n\n    bezierCurves[ghostKey] = {\n      startPosition: startPos,\n      midPosition: midPos,\n      endPosition: endPos,\n      curve: new THREE.QuadraticBezierCurve3(startPos, midPos, endPos),\n    };\n  });\n  console.log(\"Bezier curves created:\", bezierCurves);\n}\n\n// 2.3 Move ghost on curve based on scroll progress (0-1)\nfunction moveGhostOnCurve(ghostKey: string, scrollProgress: number) {\n  if (!bezierCurves[ghostKey] || !ghosts[ghostKey]) return;\n\n  const curve = bezierCurves[ghostKey].curve;\n  const position = curve.getPointAt(scrollProgress);\n\n  // Calculate opacity (fade out in last 20%)\n  let opacity = 1;\n  if (scrollProgress > 0.8) {\n    opacity = 1 - (scrollProgress - 0.8) / 0.2;\n  }\n\n  ghosts[ghostKey].position.copy(position);\n\n  // Handle material opacity for both Mesh and Group\n  const ghost = ghosts[ghostKey];\n  if (ghost instanceof THREE.Mesh && ghost.material) {\n    if (Array.isArray(ghost.material)) {\n      ghost.material.forEach((mat) => {\n        if (mat.transparent !== undefined) mat.opacity = opacity;\n      });\n    } else {\n      if (ghost.material.transparent !== undefined)\n        ghost.material.opacity = opacity;\n    }\n  } else if (ghost instanceof THREE.Group) {\n    ghost.traverse((child) => {\n      if (child instanceof THREE.Mesh && child.material) {\n        if (Array.isArray(child.material)) {\n          child.material.forEach((mat) => {\n            if (mat.transparent !== undefined) mat.opacity = opacity;\n          });\n        } else {\n          if (child.material.transparent !== undefined)\n            child.material.opacity = opacity;\n        }\n      }\n    });\n  }\n}\n\n// 3. SCROLL MANAGEMENT\nfunction onFirstScroll() {\n  if (isFirstScroll) {\n    console.log(\"First scroll detected - switching to scroll animation\");\n    captureGhostPositions();\n    createBezierCurves();\n    currentAnimationState = \"SCROLL_ANIMATION\";\n    isFirstScroll = false;\n  }\n}\n\n// 4. ANIMATION LOOP\nlet animationTime = 0;\nfunction animationLoop() {\n  const deltaTime = clock.getDelta();\n  animationTime += deltaTime;\n\n  // Only run path animation when in HOME state\n  if (currentAnimationState === \"HOME\") {\n    // Update pacman animation mixer\n    if (pacmanMixer) {\n      pacmanMixer.update(deltaTime);\n    }\n\n    // Move ghosts along their paths\n    Object.keys(ghosts).forEach((ghostKey) => {\n      if (ghostKey === \"pacman\") return;\n\n      const path = pathsMap[ghostKey];\n      if (path) {\n        const t = (animationTime * 0.1) % 1; // Speed control\n        const position = path.getPointAt(t);\n        if (position && ghosts[ghostKey]) {\n          ghosts[ghostKey].position.copy(position);\n\n          // Set opacity to 1 for both Mesh and Group\n          const ghost = ghosts[ghostKey];\n          if (ghost instanceof THREE.Mesh && ghost.material) {\n            if (Array.isArray(ghost.material)) {\n              ghost.material.forEach((mat) => {\n                if (mat.transparent !== undefined) mat.opacity = 1;\n              });\n            } else {\n              if (ghost.material.transparent !== undefined)\n                ghost.material.opacity = 1;\n            }\n          } else if (ghost instanceof THREE.Group) {\n            ghost.traverse((child) => {\n              if (child instanceof THREE.Mesh && child.material) {\n                if (Array.isArray(child.material)) {\n                  child.material.forEach((mat) => {\n                    if (mat.transparent !== undefined) mat.opacity = 1;\n                  });\n                } else {\n                  if (child.material.transparent !== undefined)\n                    child.material.opacity = 1;\n                }\n              }\n            });\n          }\n        }\n      }\n    });\n  }\n\n  requestAnimationFrame(animationLoop);\n}\n\n// 5. GSAP INTEGRATION\nfunction setupScrollTriggers() {\n  // Import GSAP dynamically to avoid build issues\n  if (typeof window !== \"undefined\" && (window as any).gsap) {\n    const gsap = (window as any).gsap;\n    const ScrollTrigger = gsap.ScrollTrigger;\n\n    // Intro ScrollTrigger - moves ghosts to center\n    ScrollTrigger.create({\n      trigger: \".sc--intro\",\n      start: \"top bottom\",\n      end: \"bottom top\",\n      onUpdate: (self: any) => {\n        onFirstScroll();\n        if (currentAnimationState === \"SCROLL_ANIMATION\") {\n          const progress = self.progress;\n          Object.keys(bezierCurves).forEach((ghostKey) => {\n            moveGhostOnCurve(ghostKey, progress);\n          });\n        }\n      },\n    });\n\n    // Home ScrollTrigger - moves ghosts back from center\n    ScrollTrigger.create({\n      trigger: \".sc--home\",\n      start: \"top bottom\",\n      end: \"bottom top\",\n      onUpdate: (self: any) => {\n        if (currentAnimationState === \"SCROLL_ANIMATION\") {\n          const progress = 1 - self.progress; // Reverse direction\n          Object.keys(bezierCurves).forEach((ghostKey) => {\n            moveGhostOnCurve(ghostKey, progress);\n          });\n        }\n      },\n      onLeave: () => {\n        // Back to top - reset to HOME state\n        if (window.scrollY === 0) {\n          console.log(\"Back to top - resetting to HOME state\");\n          currentAnimationState = \"HOME\";\n          isFirstScroll = true;\n        }\n      },\n    });\n\n    // POV ScrollTrigger - position ghosts for POV section\n    ScrollTrigger.create({\n      trigger: \".sc--pov\",\n      start: \"top bottom\",\n      end: \"bottom top\",\n      onEnter: () => {\n        // Position ghosts at maze center for POV animations\n        Object.keys(ghosts).forEach((ghostKey) => {\n          if (ghostKey !== \"pacman\" && ghosts[ghostKey]) {\n            ghosts[ghostKey].position.copy(MAZE_CENTER);\n\n            // Set opacity to 1 for both Mesh and Group\n            const ghost = ghosts[ghostKey];\n            if (ghost instanceof THREE.Mesh && ghost.material) {\n              if (Array.isArray(ghost.material)) {\n                ghost.material.forEach((mat) => {\n                  if (mat.transparent !== undefined) mat.opacity = 1;\n                });\n              } else {\n                if (ghost.material.transparent !== undefined)\n                  ghost.material.opacity = 1;\n              }\n            } else if (ghost instanceof THREE.Group) {\n              ghost.traverse((child) => {\n                if (child instanceof THREE.Mesh && child.material) {\n                  if (Array.isArray(child.material)) {\n                    child.material.forEach((mat) => {\n                      if (mat.transparent !== undefined) mat.opacity = 1;\n                    });\n                  } else {\n                    if (child.material.transparent !== undefined)\n                      child.material.opacity = 1;\n                  }\n                }\n              });\n            }\n          }\n        });\n      },\n    });\n  }\n}\n\n// Initialize the animation system\nexport function initAnimationSystem() {\n  console.log(\"Initializing animation system...\");\n\n  // Store original positions\n  storeOriginalPositions();\n\n  // Setup GSAP ScrollTriggers\n  setupScrollTriggers();\n\n  // Start animation loop\n  animationLoop();\n\n  console.log(\"Animation system initialized\");\n}\n","import { initRenderer, setupLighting, renderer, scene } from \"./scene\";\nimport { initCamera, setupCameraResize, camera } from \"./camera\";\nimport { loadModel } from \"./objects\";\nimport { initAnimationSystem } from \"./animation-system\";\n\n// Initialize everything\nasync function init() {\n  console.log(\"Starting CAM 3D Animation...\");\n\n  try {\n    initRenderer();\n    console.log(\"Renderer initialized\");\n\n    setupLighting();\n    console.log(\"Lighting setup complete\");\n\n    initCamera();\n    console.log(\"Camera initialized\");\n\n    setupCameraResize();\n    console.log(\"Camera resize setup complete\");\n\n    console.log(\"Loading 3D model...\");\n    await loadModel();\n    console.log(\"Model loading complete\");\n\n    // Initialize new animation system\n    console.log(\"Initializing animation system...\");\n    initAnimationSystem();\n\n    // Basic render loop\n    function animate() {\n      renderer.render(scene, camera);\n      requestAnimationFrame(animate);\n    }\n    animate();\n    console.log(\"Animation loop started\");\n\n    // Debug scene contents\n    console.log(\"Scene children count:\", scene.children.length);\n    scene.children.forEach((child, index) => {\n      console.log(`Child ${index}:`, child.type, child.name || \"unnamed\");\n    });\n  } catch (error) {\n    console.error(\"Initialization error:\", error);\n  }\n}\n\n// Start when DOM is ready\nif (document.readyState === \"loading\") {\n  document.addEventListener(\"DOMContentLoaded\", init);\n} else {\n  init();\n}\n"],"names":["THREE","isMobile","window","innerWidth","CAMERA_POSITIONS","startMobile","startDesktop","secondMobile","secondDesktop","mobileLookAt","desktopLookAt","startPosition","lookAtPosition","MAZE_CENTER","SHADER_CONFIG","vertexShader","fragmentShader","scene","renderer","antialias","alpha","powerPreference","precision","container","document","querySelector","clock","setPixelRatio","pixelRatio","Math","min","devicePixelRatio","setSize","clientWidth","clientHeight","finalSection","camera","querySelectorAll","quaternion","clone","setFromEuler","setCamera","lookAt","x","y","z","split","map","Number","updateProjectionMatrix","updateMatrix","updateMatrixWorld","mazeTexture","load","mazeMaterial","matcap","topMaterial","color","metalness","roughness","envMapIntensity","ghostMaterial","opacity","transparent","depthWrite","depthTest","blending","side","transmission","floorMaterial","pacmanMaterials","uniforms","mixValue","value","blue","white","default","materialMap","CAM_Pacman_Backframe","CAM_Pacman_Logo_1","CAM_Pacman_Logo_2","Array","fill","console","log","loader","pacmanMixer","warn","pacman","add","ghosts","ghost1","ghost2","ghost3","ghost4","ghost5","Object","values","forEach","ghost","testGeometry","testMaterial","testCube","position","set","ghostContainers","Ghost_EUR","Ghost_CHF","Ghost_YEN","Ghost_USD","Ghost_GBP","pacmanHomePathPoints","pos","type","curveType","ghost1HomePathPoints","ghost2HomePathPoints","ghost3HomePathPoints","ghost4HomePathPoints","ghost5HomePathPoints","cameraPOVPathPoints","ghost1POVPathPoints","ghost2POVPathPoints","ghost3POVPathPoints","ghost4POVPathPoints","ghost5POVPathPoints","cameraStartPosition","cameraSecondPosition","pathsData","pacmanHomePath","points","ghost1HomePath","ghost2HomePath","ghost3HomePath","ghost4HomePath","ghost5HomePath","cameraPOVPath","ghost1POVPath","ghost2POVPath","ghost3POVPath","ghost4POVPath","ghost5POVPath","paths","entries","key","data","pathPoints","path","i","length","current","next","line","midPoint","curve","createPath","pathsMap","currentAnimationState","isFirstScroll","capturedPositions","bezierCurves","originalPositions","moveGhostOnCurve","ghostKey","scrollProgress","getPointAt","copy","material","isArray","mat","undefined","traverse","child","animationTime","animationLoop","deltaTime","getDelta","update","keys","t","requestAnimationFrame","initAnimationSystem","gsap","ScrollTrigger","create","trigger","start","end","onUpdate","self","startPos","midPos","endPos","midPosition","endPosition","progress","onLeave","scrollY","onEnter","setupScrollTriggers","async","init","animate","render","shadowMap","enabled","appendChild","domElement","addEventListener","ambientLight","directionalLight","shadow","mapSize","width","height","left","right","top","bottom","near","far","bias","radius","castShadow","setupLighting","aspect","innerHeight","Promise","resolve","reject","gltf","model","pacmanNames","childName","name","children","subChild","subChildName","isMesh","push","visible","morphTargetInfluences","userData","skipAnimation","item","scale","rotation","PI","animations","pacmanActions","clip","action","clipAction","getMixer","e","getRoot","obj","updateMorphTargets","setEffectiveWeight","play","ghostContainer","ghostGroup","startsWith","includes","itemName","clonedChild","receiveShadow","node","error","index","readyState"],"sourceRoot":""}