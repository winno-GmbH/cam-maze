{"version":3,"file":"script.js","mappings":"mBAAA,MAAM,EAA+BA,MCExBC,EAAWC,OAAOC,WAAa,IAc/BC,EAAc,IAAI,UAAc,OAAS,GAAK,QAU9CC,GAPH,IAAI,UAAc,OAAS,IAAM,QACjC,IAAI,UAAc,MAAQ,IAAM,OAChC,IAAI,UAAc,OAAS,IAAM,SACjC,IAAI,UAAc,OAAS,IAAM,QACjC,IAAI,UAAc,OAAS,IAAM,SAGX,CAC9BC,YAAa,IAAI,UAAc,GAAK,IAAK,KACzCC,aAAc,IAAI,WAAe,EAAG,IAAK,GACzCC,aAAc,IAAI,UAAc,GAAK,IAAK,GAC1CC,cAAe,IAAI,WAAe,IAAK,EAAG,GAC1CC,aAAc,IAAI,UAAc,GAAK,IAAM,KAC3CC,cAAe,IAAI,WAAe,KAAM,GAAK,OAGlCC,EAAgBX,EACzBI,EAAiBC,YACjBD,EAAiBE,aACRM,EAAiBZ,EAC1BI,EAAiBG,aACjBH,EAAiBI,cACRK,EAAiBb,EAC1BI,EAAiBK,aACjBL,EAAiBM,cAiBRI,EAAe,CAC1BC,cAAeC,SAASC,cAdT,qBAefC,OAAQF,SAASC,cAAc,UAC/BE,aAAcH,SAASC,cAZT,iBAadG,eAAgBJ,SAASC,cART,iBAWhBI,eAAgBL,SAASM,iBAdT,kBClDLC,EAAQ,IAAI,QAEZC,EAAW,IAAI,gBAAoB,CAC9CC,WAAW,EACXC,OAAO,EACPC,gBAAiB,mBACjBC,UAAW,UAeb,SAASC,IACP,MAAMC,EAAaC,KAAKC,IAAI/B,OAAOgC,iBAAkBjC,EAAW,EAAI,GACpEwB,EAASK,cAAcC,GAEnBhB,EAAaC,cACfS,EAASU,QACPpB,EAAaC,cAAcoB,YAC3BrB,EAAaC,cAAcqB,cAG7BZ,EAASU,QAAQjC,OAAOC,WAAYD,OAAOoC,YAE/C,CAxBqB,IAAI,QCJlB,MAAMC,EAAS,IAAI,oBFHX,GEKbrC,OAAOC,WAAaD,OAAOoC,YFHrB,KACD,KEOA,SAASE,IACdD,EAAOE,SAASC,KAAK9B,GACrB2B,EAAOI,OAAO7B,EAChB,CAE+ByB,EAAOK,WAAWC,QAA1C,MACMC,GAAgB,IAAI,cAAmBC,aAClD,IAAI,SAAa,OAAQ,EAAG,ICjBjBC,GAFS,IAAI,iBAEeC,KHO1B,2CGLFC,EAAe,IAAI,qBAAyB,CACvDC,OAAQH,IAGGI,EAAc,IAAI,uBAA2B,CACxDC,MAAO,SACPC,UAAW,GACXC,UAAW,EACXC,gBAAiB,KAGNC,EAAgB,IAAI,uBAA2B,CAC1DJ,MAAO,SACPK,QAAS,EACTC,aAAa,EACbC,YAAY,EACZC,WAAW,EACXC,SAAU,iBACVC,KAAM,aACNR,UAAW,IACXD,UAAW,GACXU,aAAc,KAGHC,EAAgB,IAAI,uBAA2B,CAC1DZ,MAAO,SACPK,QAAS,GACTC,aAAa,EACbJ,UAAW,GACXD,UAAW,KAGPY,EAAkB,CACtBC,KAAM,IAAI,oBAAwB,CAChCd,MAAO,QACPM,aAAa,EACbD,QAAS,IAEXU,MAAO,IAAI,oBAAwB,CACjCf,MAAO,SACPM,aAAa,EACbD,QAAS,IAEXW,QAAS,IAAI,oBAAwB,CACnChB,MAAO,QACPM,aAAa,EACbD,QAAS,KAIAY,EAAc,CACzBC,qBAAsBL,EAAgBC,KACtC,uBAAwBD,EAAgBE,MACxC,uBAAwBF,EAAgBE,MACxC,oBAAqBF,EAAgBC,KACrC,iBAAkBD,EAAgBC,KAClC,iBAAkBD,EAAgBE,MAClCI,kBAAmBN,EAAgBE,MACnCK,kBAAmBP,EAAgBE,MACnC,2BAA4BF,EAAgBC,KAC5C,mBAAoBD,EAAgBC,KACpC,+BAAgCD,EAAgBE,MAChD,4BAA6BF,EAAgBE,MAC7C,yBAA0BF,EAAgBE,MAC1C,sBAAuBF,EAAgBE,MACvCC,QAASH,EAAgBC,MC1DrBO,GD6D6BC,MAAM,GAAGC,KAAKnB,GC7DlC,IAAI,cAEZ,IAAIoB,EAEJ,MAAMC,EAAS,IAAI,QAC1BtD,EAAMuD,IAAID,GAEH,MAAME,EAAyB,CACpCF,OAAQA,EACRG,OAAQ,IAAI,OAAW,IAAI,iBAAwBxB,GACnDyB,OAAQ,IAAI,OAAW,IAAI,iBAAwBzB,GACnD0B,OAAQ,IAAI,OAAW,IAAI,iBAAwB1B,GACnD2B,OAAQ,IAAI,OAAW,IAAI,iBAAwB3B,GACnD4B,OAAQ,IAAI,OAAW,IAAI,iBAAwB5B,IAG/C6B,EAAkB,CACtBC,UAAWP,EAAOC,OAClBO,UAAWR,EAAOE,OAClBO,UAAWT,EAAOG,OAClBO,UAAWV,EAAOI,OAClBO,UAAWX,EAAOK,QAGpBO,OAAOC,OAAOb,GAAQc,SAASC,GAAUvE,EAAMuD,IAAIgB,KCnC5C,MAAMC,EAAoC,CAC/C,CAAEC,IAAK,IAAI,UAAc,OAAS,IAAM,OAASC,KAAM,YACvD,CACED,IAAK,IAAI,UAAc,OAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,IAAMC,KAAM,YACpD,CACED,IAAK,IAAI,UAAc,OAAS,KAAO,MACvCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,KAAO,OAASC,KAAM,YACxD,CACED,IAAK,IAAI,UAAc,OAAS,KAAO,OACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,KAAO,MACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,WAAe,OAAS,KAAO,MACxCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,WAAe,OAAS,KAAO,MACxCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,WAAe,OAAS,KAAO,OAASC,KAAM,YACzD,CACED,IAAK,IAAI,WAAe,OAAS,KAAO,OACxCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,WAAe,OAAS,KAAO,MACxCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,WAAe,KAAO,KAAO,MACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,WAAe,OAAS,IAAM,IACvCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,WAAe,OAAS,IAAM,OAASC,KAAM,YACxD,CACED,IAAK,IAAI,WAAe,OAAS,IAAM,OACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,WAAe,OAAS,IAAM,OAASC,KAAM,YACxD,CACED,IAAK,IAAI,WAAe,OAAS,IAAM,OACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,WAAe,OAAS,IAAM,MACvCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,WAAe,OAAS,IAAM,OAASC,KAAM,YACxD,CACED,IAAK,IAAI,WAAe,OAAS,IAAM,OACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,WAAe,OAAS,IAAM,OAASC,KAAM,YACxD,CACED,IAAK,IAAI,WAAe,OAAS,IAAM,OACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,WAAe,OAAS,IAAM,MACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,WAAe,KAAO,IAAM,QACrCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,WAAe,OAAS,IAAM,OACvCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,WAAe,OAAS,IAAM,QAASC,KAAM,YACxD,CACED,IAAK,IAAI,WAAe,OAAS,IAAM,QACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,WAAe,OAAS,IAAM,OACvCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,WAAe,OAAS,IAAM,QAASC,KAAM,YACxD,CACED,IAAK,IAAI,UAAc,OAAS,IAAM,QACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,QAASC,KAAM,YACvD,CACED,IAAK,IAAI,WAAe,OAAS,IAAM,QACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,WAAe,OAAS,IAAM,OACvCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,WAAe,OAAS,IAAM,QAASC,KAAM,YACxD,CACED,IAAK,IAAI,UAAc,OAAS,IAAM,QACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,MAAQ,IAAM,OACrCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,QACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,QACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,OAASC,KAAM,aAG5CE,EAAoC,CAC/C,CAAEH,IAAK,IAAI,WAAe,OAAS,IAAM,MAAQC,KAAM,YACvD,CACED,IAAK,IAAI,WAAe,OAAS,IAAM,MACvCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,WAAe,OAAS,IAAM,OAASC,KAAM,YACxD,CACED,IAAK,IAAI,WAAe,OAAS,IAAM,OACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,WAAe,OAAS,IAAM,IACvCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,WAAe,OAAS,KAAO,MAASC,KAAM,YACzD,CACED,IAAK,IAAI,UAAc,OAAS,KAAO,MACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,IACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,MAAQC,KAAM,YACtD,CACED,IAAK,IAAI,UAAc,OAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,QACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,QACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,OAASC,KAAM,YACvD,CACED,IAAK,IAAI,UAAc,OAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,QAAS,IAAM,QACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,QAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,QAAS,IAAM,QACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,QAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,QAAS,IAAM,MAAQC,KAAM,YACtD,CACED,IAAK,IAAI,UAAc,QAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,QAAS,IAAM,OAASC,KAAM,YACvD,CACED,IAAK,IAAI,UAAc,OAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,MAAQC,KAAM,YACtD,CACED,IAAK,IAAI,UAAc,OAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,KAAO,IAAM,OACpCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,WAAe,OAAS,IAAM,MACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,QACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,QAASC,KAAM,YACvD,CACED,IAAK,IAAI,WAAe,OAAS,IAAM,QACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,WAAe,OAAS,IAAM,OACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,WAAe,MAAQ,IAAM,QACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,WAAe,OAAS,IAAM,MACvCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,WAAe,OAAS,IAAM,OAASC,KAAM,YACxD,CACED,IAAK,IAAI,WAAe,OAAS,IAAM,OACvCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,WAAe,OAAS,IAAM,MAAQC,KAAM,YACvD,CAAED,IAAK,IAAI,WAAe,OAAS,IAAM,MAAQC,KAAM,aAG5CG,EAAoC,CAC/C,CACEJ,IAAK,IAAI,WAAe,OAAS,IAAM,MACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,KAAO,IAAM,OACpCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,WAAe,OAAS,IAAM,OAASC,KAAM,YACxD,CACED,IAAK,IAAI,WAAe,OAAS,IAAM,OACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,WAAe,OAAS,IAAM,MACvCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,WAAe,OAAS,IAAM,OAASC,KAAM,YACxD,CACED,IAAK,IAAI,UAAc,OAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,MAAQC,KAAM,YACtD,CACED,IAAK,IAAI,UAAc,OAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,MAAQ,IAAM,OACrCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,QAASC,KAAM,YACvD,CACED,IAAK,IAAI,UAAc,OAAS,IAAM,QACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,QAASC,KAAM,YACvD,CACED,IAAK,IAAI,UAAc,QAAS,IAAM,QACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,QAAS,IAAM,OAAQC,KAAM,YACtD,CACED,IAAK,IAAI,UAAc,QAAS,IAAM,IACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,QAAS,KAAO,MAASC,KAAM,YACxD,CACED,IAAK,IAAI,UAAc,QAAS,KAAO,MACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,QAAS,IAAM,IACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,IAAMC,KAAM,YACpD,CACED,IAAK,IAAI,UAAc,OAAS,KAAO,MACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,KAAO,OACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,KAAO,QACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,KAAO,MACvCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,KAAO,MAASC,KAAM,YACxD,CACED,IAAK,IAAI,UAAc,OAAS,IAAM,IACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,MAAQC,KAAM,YACtD,CACED,IAAK,IAAI,UAAc,OAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,MAAQ,IAAM,OACrCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,QACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,QAASC,KAAM,YACvD,CACED,IAAK,IAAI,WAAe,OAAS,IAAM,QACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,WAAe,OAAS,IAAM,OACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,WAAe,MAAQ,IAAM,QACtCC,KAAM,QACNC,UAAW,aAIFG,EAAoC,CAC/C,CACEL,IAAK,IAAI,UAAc,KAAO,IAAM,OACpCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,MAAQC,KAAM,YACtD,CACED,IAAK,IAAI,UAAc,OAAS,KAAO,MACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,KAAO,OACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,KAAO,QACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,KAAO,MACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,KAAO,QACvCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,KAAO,OAASC,KAAM,YACxD,CACED,IAAK,IAAI,UAAc,OAAS,KAAO,OACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,KAAO,MACvCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,KAAO,MAASC,KAAM,YACxD,CACED,IAAK,IAAI,UAAc,OAAS,KAAO,MACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,IACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,OAASC,KAAM,YACvD,CACED,IAAK,IAAI,UAAc,QAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,QAAS,IAAM,MAAQC,KAAM,YACtD,CACED,IAAK,IAAI,UAAc,QAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,QAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,QAAS,IAAM,QACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,QAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,QAAS,IAAM,QACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,MAAO,IAAM,OACpCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,MAAQC,KAAM,YACtD,CACED,IAAK,IAAI,UAAc,OAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,QACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,OAAQC,KAAM,YACtD,CACED,IAAK,IAAI,UAAc,OAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,MAAQ,IAAM,OACrCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,QACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,QACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,KAAO,IAAM,OACpCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,WAAe,OAAS,IAAM,MACvCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,QAASC,KAAM,YACvD,CACED,IAAK,IAAI,UAAc,OAAS,IAAM,QACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,KAAO,IAAM,OACpCC,KAAM,QACNC,UAAW,aAIFI,EAAoC,CAC/C,CAAEN,IAAK,IAAI,UAAc,QAAS,IAAM,OAASC,KAAM,YACvD,CACED,IAAK,IAAI,UAAc,QAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,OAASC,KAAM,YACvD,CACED,IAAK,IAAI,UAAc,OAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,QAASC,KAAM,YACvD,CACED,IAAK,IAAI,UAAc,OAAS,IAAM,QACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,QAASC,KAAM,YACvD,CACED,IAAK,IAAI,WAAe,OAAS,IAAM,QACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,WAAe,OAAS,IAAM,OACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,WAAe,KAAO,IAAM,QACrCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,WAAe,OAAS,IAAM,MACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,WAAe,KAAO,IAAM,OACrCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,WAAe,OAAS,IAAM,MAAQC,KAAM,YACvD,CACED,IAAK,IAAI,WAAe,OAAS,IAAM,MACvCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,WAAe,OAAS,IAAM,OAASC,KAAM,YACxD,CACED,IAAK,IAAI,WAAe,OAAS,IAAM,OACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,OAASC,KAAM,YACvD,CACED,IAAK,IAAI,UAAc,OAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,IAAMC,KAAM,YACpD,CACED,IAAK,IAAI,UAAc,OAAS,KAAO,MACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,KAAO,OACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,QAAS,KAAO,MACvCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,QAAS,IAAM,MAASC,KAAM,YACvD,CACED,IAAK,IAAI,UAAc,QAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,QAAS,KAAO,MACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,QAAS,KAAO,OACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,QAAS,KAAO,MACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,QAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,QAAS,IAAM,IAAMC,KAAM,YACpD,CACED,IAAK,IAAI,UAAc,QAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,QAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,QAAS,IAAM,QACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,QAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,QAAS,IAAM,OAASC,KAAM,YACvD,CAAED,IAAK,IAAI,UAAc,QAAS,IAAM,OAASC,KAAM,aAG5CM,EAAoC,CAC/C,CACEP,IAAK,IAAI,UAAc,OAAS,KAAO,QACvCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,MAASC,KAAM,YACvD,CACED,IAAK,IAAI,WAAe,OAAS,IAAM,MACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,WAAe,OAAS,KAAO,MACxCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,WAAe,OAAS,KAAO,OAASC,KAAM,YACzD,CACED,IAAK,IAAI,WAAe,OAAS,KAAO,OACxCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,WAAe,OAAS,KAAO,MACxCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,WAAe,KAAO,IAAM,MACrCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,WAAe,OAAS,IAAM,IACvCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,WAAe,OAAS,IAAM,OAASC,KAAM,YACxD,CACED,IAAK,IAAI,WAAe,OAAS,IAAM,OACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,WAAe,OAAS,IAAM,OAASC,KAAM,YACxD,CACED,IAAK,IAAI,WAAe,OAAS,IAAM,OACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,WAAe,OAAS,IAAM,MACvCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,WAAe,OAAS,IAAM,OAASC,KAAM,YACxD,CACED,IAAK,IAAI,UAAc,OAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,MAAQ,IAAM,OACrCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,QAASC,KAAM,YACvD,CACED,IAAK,IAAI,UAAc,OAAS,IAAM,QACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,MACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,QAAS,IAAM,QAASC,KAAM,YACvD,CACED,IAAK,IAAI,UAAc,QAAS,IAAM,QACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,QAAS,IAAM,OAAQC,KAAM,YACtD,CACED,IAAK,IAAI,UAAc,QAAS,KAAO,MACvCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,QAAS,KAAO,OAASC,KAAM,YACxD,CACED,IAAK,IAAI,UAAc,QAAS,KAAO,OACvCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,QAAS,KAAO,MAAQC,KAAM,YACvD,CACED,IAAK,IAAI,UAAc,QAAS,IAAM,IACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,IAAMC,KAAM,YACpD,CACED,IAAK,IAAI,UAAc,OAAS,KAAO,MACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,KAAO,OACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,KAAO,QACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,KAAO,MACvCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,KAAO,QACvCC,KAAM,QACNC,UAAW,aAIFM,EAAmC,CAC9C,CACER,IAAK,IAAI,UAAc,QAAU,GAAK,QACtCC,KAAM,QACNC,UAAW,kBAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,KAAO,IAAM,MACpCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,QACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,MAAQ,IAAM,OAASC,KAAM,YACtD,CACED,IAAK,IAAI,UAAc,MAAQ,IAAM,OACrCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,QAAUC,KAAM,YACxD,CACED,IAAK,IAAI,UAAc,OAAS,IAAM,SACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,MAAQ,IAAM,QAASC,KAAM,YACtD,CACED,IAAK,IAAI,UAAc,KAAO,IAAM,QACpCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,SAAUC,KAAM,YACxD,CACED,IAAK,IAAI,UAAc,OAAS,IAAM,SACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,MAAQ,IAAM,QAASC,KAAM,YACtD,CACED,IAAK,IAAI,UAAc,KAAO,IAAM,QACpCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,SAAUC,KAAM,YACxD,CACED,IAAK,IAAI,UAAc,OAAS,IAAM,SACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,KAAO,IAAM,QAASC,KAAM,YACrD,CACED,IAAK,IAAI,UAAc,MAAQ,IAAM,QACrCC,KAAM,QACNC,UAAW,YAEb,CACEF,IAAK,IAAI,UAAc,OAAS,IAAM,OACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,WAAe,OAAS,EAAG,QAASC,KAAM,aAG1CQ,EAAmC,CAC9C,CAAET,IAAK,IAAI,UAAc,QAAS,IAAM,MAAQC,KAAM,YACtD,CACED,IAAK,IAAI,UAAc,QAAS,IAAM,QACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,MAAO,IAAM,OAASC,KAAM,YACrD,CAAED,IAAK,IAAI,UAAc,MAAQ,IAAM,OAASC,KAAM,aAG3CS,EAAmC,CAC9C,CAAEV,IAAK,IAAI,UAAc,QAAS,IAAM,QAASC,KAAM,YACvD,CACED,IAAK,IAAI,UAAc,MAAO,IAAM,QACpCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,OAAS,IAAM,SAAUC,KAAM,YACxD,CAAED,IAAK,IAAI,UAAc,OAAS,IAAM,SAAUC,KAAM,aAG7CU,EAAmC,CAC9C,CAAEX,IAAK,IAAI,UAAc,OAAS,IAAM,MAAQC,KAAM,YACtD,CACED,IAAK,IAAI,UAAc,OAAS,IAAM,QACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,KAAO,IAAM,QAASC,KAAM,YACrD,CAAED,IAAK,IAAI,UAAc,MAAQ,IAAM,QAASC,KAAM,aAG3CW,EAAmC,CAC9C,CAAEZ,IAAK,IAAI,UAAc,OAAS,IAAM,OAAQC,KAAM,YACtD,CACED,IAAK,IAAI,UAAc,OAAS,IAAM,SACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,KAAO,IAAM,QAASC,KAAM,YACrD,CAAED,IAAK,IAAI,UAAc,MAAQ,IAAM,QAASC,KAAM,aAG3CY,EAAmC,CAC9C,CAAEb,IAAK,IAAI,UAAc,OAAS,IAAM,OAAQC,KAAM,YACtD,CACED,IAAK,IAAI,UAAc,OAAS,IAAM,SACtCC,KAAM,QACNC,UAAW,YAEb,CAAEF,IAAK,IAAI,UAAc,MAAQ,IAAM,QAASC,KAAM,YACtD,CAAED,IAAK,IAAI,UAAc,KAAO,IAAM,QAASC,KAAM,aCzmC1Ca,GAPiB,IAAI,oBAChCnG,EACAC,EACA,IAAI,UAAc,OAAS,EAAG,QAC9B,IAAI,UAAc,OAAS,GAAK,SAGb,CACnBmG,WAAYC,EAAW,GACvBC,WAAYD,EAAW,GACvBE,WAAYF,EAAW,GACvBG,WAAYH,EAAW,GACvBI,WAAYJ,EAAW,GACvBK,WAAYL,EAAW,GACvBM,UAAWN,EAAW,GACtBO,UAAWP,EAAW,GACtBQ,UAAWR,EAAW,GACtBS,UAAWT,EAAW,GACtBU,UAAWV,EAAW,GACtBW,UAAWX,EAAW,KAGxB,SAASA,EAAWY,GAClB,MAAMC,EAAO,IAAI,YAEjB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAWG,OAAS,EAAGD,IAAK,CAC9C,MAAME,EAAUJ,EAAWE,GACrBG,EAAOL,EAAWE,EAAI,GAE5B,GAAqB,aAAjBE,EAAQ/B,KAAqB,CAC/B,MAAMiC,EAAO,IAAI,aAAiBF,EAAQhC,IAAKiC,EAAKjC,KACpD6B,EAAK/C,IAAIoD,EACX,MAAO,GAAqB,UAAjBF,EAAQ/B,KAAkB,CACnC,IAAIkC,EAEFA,EADwB,aAAtBH,EAAQ9B,UACC,IAAI,UAAc8B,EAAQhC,IAAIoC,EAAGJ,EAAQhC,IAAIqC,EAAGJ,EAAKjC,IAAIsC,GACrC,aAAtBN,EAAQ9B,UACN,IAAI,UAAc+B,EAAKjC,IAAIoC,EAAGJ,EAAQhC,IAAIqC,EAAGL,EAAQhC,IAAIsC,GACrC,mBAAtBN,EAAQ9B,UACN,IAAI,UAAc8B,EAAQhC,IAAIoC,EAAGH,EAAKjC,IAAIqC,EAAGL,EAAQhC,IAAIsC,GAEzD,IAAI,UAAcN,EAAQhC,IAAIoC,EAAGJ,EAAQhC,IAAIqC,EAAGJ,EAAKjC,IAAIsC,GAEtE,MAAMC,EAAQ,IAAI,wBAChBP,EAAQhC,IACRmC,EACAF,EAAKjC,KAEP6B,EAAK/C,IAAIyD,EACX,CACF,CACA,OAAOV,CACT,CC/CA,MAAMW,EAAkD,CACtDxD,OAAQ,KACRC,OAAQ,KACRC,OAAQ,KACRC,OAAQ,IACRC,OAAQ,IACRP,OAAQ,IAUJ,EAAW5E,OAAOC,WAAa,IAC/BuI,EAAsB,EACxB,IAAI,UAAc,GAAK,IAAK,KAC5B,IAAI,WAAe,EAAG,IAAK,GACzBC,EAAuB,EACzB,IAAI,UAAc,GAAK,IAAK,GAC5B,IAAI,WAAe,IAAK,EAAG,GACzB,EAAiB,IAAI,oBACzBD,EACAC,EACA,IAAI,UAAc,OAAS,EAAG,QAC9B,IAAI,UAAc,OAAS,GAAK,SAGlC,IAAIC,EAAwBrG,EAAOE,SAASI,QACxCgG,EAA0BtG,EAAOK,WAAWC,QAG5CiG,EAAoD,KACpDC,EAAuD,KA+RpD,MAAMC,EAAkB,IA7R/B,MAYE,WAAAC,GAXQ,KAAAC,MAAwB,OACxB,KAAAC,cAAwB,EACzB,KAAAC,kBAA4B,GAC3B,KAAAC,kBAA4B,EAC5B,KAAAC,WAAqB,EACrB,KAAAC,aAA4D,CAAC,EAC7D,KAAAC,kBAAmD,CAAC,EACpD,KAAAC,kBAAiD,CAAC,EAClD,KAAAC,eAAiB,EACjB,KAAAC,kBAAoB,EAG1BC,QAAQC,IAAI,oCACZD,QAAQC,IAAI,gCAAiCzJ,EAC/C,CAGO,kBAAA0J,GACLC,KAAKb,MAAQ,iBACba,KAAKZ,cAAgB,EACrBY,KAAKV,kBAAmB,EACxBU,KAAKT,WAAaU,KAAKC,MAEvBrB,EAAwBrG,EAAOE,SAASI,QACxCgG,EAA0BtG,EAAOK,WAAWC,OAC9C,CAEO,kBAAAqH,GAEL,MACMC,GADcH,KAAKC,MACMF,KAAKT,YAAc,IAClDS,KAAKJ,kBAAqBQ,EAAUJ,KAAKX,kBAAqB,EAC9DW,KAAKV,kBAAmB,CAC1B,CAEO,mBAAAe,GACLL,KAAKb,MAAQ,iBACba,KAAKV,kBAAmB,EACxBU,KAAKT,WACHU,KAAKC,MAAQF,KAAKJ,kBAAoBI,KAAKX,kBAAoB,GACnE,CAEO,qBAAAiB,GACLzE,OAAO0E,QAAQtF,GAAQc,SAAQ,EAAEyE,EAAKxE,MACpCgE,KAAKP,kBAAkBe,GAAOxE,EAAMtD,SAASI,QAC7CkH,KAAKN,kBAAkBc,GAAOxE,EAAMyE,SAAS3H,UAEjD,CAEO,kBAAA4H,GACLV,KAAKR,aAAe,CAAC,EACrB3D,OAAO0E,QAAQP,KAAKP,mBAAmB1D,SAAQ,EAAEyE,EAAKG,MACpD,MAAMC,EAASvK,EAAYyC,QACrB+H,EAAe,IAAI,WACtBF,EAASrC,EAAIsC,EAAOtC,GAAK,EAC1B,GACCqC,EAASnC,EAAIoC,EAAOpC,GAAK,GAE5BwB,KAAKR,aAAagB,GAAO,IAAI,wBAC3BG,EACAE,EACAD,KAGN,CAEO,mBAAAE,GACc,qBAAfd,KAAKb,QACTa,KAAKG,qBACLH,KAAKM,wBACLN,KAAKU,qBAEL3B,EAAoB,IAAI,oBACtBvG,EAAOE,SAASI,QAChB,IAAI,WACDN,EAAOE,SAAS4F,EAAIjI,EAAYiI,GAAK,EACtC,GACC9F,EAAOE,SAAS8F,EAAInI,EAAYmI,GAAK,GAExC,IAAI,UAAc,OAAS,EAAG,QAC9BnI,EAAYyC,SAEdkG,EAA8BxG,EAAOK,WAAWC,QAChDkH,KAAKb,MAAQ,mBACf,CAEO,iBAAA4B,CAAkBC,GACvBhB,KAAKL,eAAiB1H,KAAKgJ,IAAI,EAAGhJ,KAAKC,IAAI,EAAG8I,GAChD,CAGO,MAAAE,GACL,GAAmB,mBAAflB,KAAKb,OAA8Ba,KAAKV,iBAAkB,CAC5D,MACMc,GADcH,KAAKC,MACMF,KAAKT,YAAc,IAElD,IAAI4B,GAAKnB,KAAKJ,kBA1HS,IA0HWQ,GAAkC,EAChEgB,EAAQD,EACZ,GAAIA,EAAI,IAAM,CACZ,MAAME,GAASF,EAAI,KAAQ,IAC3BC,GAAS,EAAIC,GAASF,EAAY,EAARE,CAC5B,CACArB,KAAKsB,iBAAiBF,GACtBpB,KAAKuB,kBAAkBH,EACzB,KAA0B,qBAAfpB,KAAKb,QACda,KAAKwB,sBAAsBxB,KAAKL,gBAChCK,KAAKyB,4BAA4BzB,KAAKL,gBAE1C,CAEQ,gBAAA2B,CAAiBH,GACvB,MAAMO,EDnGQ,QCmGyB,ODlGhC,CACL3G,OAAQiC,EAAMC,WACd/B,OAAQ8B,EAAMG,WACdhC,OAAQ6B,EAAMI,WACdhC,OAAQ4B,EAAMK,WACdhC,OAAQ2B,EAAMM,WACdhC,OAAQ0B,EAAMO,YAYX,CAAC,ECiFDxC,EAAO4G,UACV5G,EAAO4G,SAAU,GAInB9F,OAAO0E,QAAQtF,GAAQc,SAAQ,EAAEyE,EAAKxE,MACpC,MAAM+B,EAAO2D,EAAYlB,GACzB,GAAIzC,EAAM,CACR,MAAMrF,EAAWqF,EAAK6D,WAAWT,GACjCnF,EAAMtD,SAASC,KAAKD,GACpB,MAAMmJ,EAAU9D,EAAK+D,aAAaX,GAAGY,YAIrC,GAHA/F,EAAMpD,OAAOF,EAASI,QAAQkC,IAAI6G,IAGtB,WAARrB,EAAkB,CACpB,MAAMwB,EAAY/J,KAAKgK,MAAMJ,EAAQvD,EAAGuD,EAAQrD,QAEP0D,IAApClG,EAAcmG,oBAChBnG,EAAcmG,kBAAoBH,GAGrC,IAAII,EAAeJ,EAAahG,EAAcmG,kBAE1CC,EAAenK,KAAKoK,GACtBD,GAAgB,EAAInK,KAAKoK,GAChBD,GAAgBnK,KAAKoK,KAC9BD,GAAgB,EAAInK,KAAKoK,IAG3B,MAAMC,EAAe,GACfC,EACHvG,EAAcmG,kBAAoBC,EAAeE,EAEnDtG,EAAcmG,kBAAoBI,EACnCvG,EAAMyE,SAAS+B,IACbvK,KAAKoK,GAAK,EACVpK,KAAKoK,GACLE,EAAmBtK,KAAKoK,GAAK,EAEjC,CACF,IAEJ,CAEQ,iBAAAd,CAAkBJ,GAExB,MAAMzI,EAAW,EAAekJ,WAAWT,GAM3C,GALA3I,EAAOE,SAASC,KAAKD,GAErBF,EAAOiK,IA1LU,GA2LjBjK,EAAOkK,yBAEG,IAANvB,EACF3I,EAAOK,WAAWF,KAAKmG,OAClB,CACL,MAAM6D,EAAoB,IAAI,aAC9BA,EAAkBC,iBAChB9D,EACA/F,EACAoI,GAEF3I,EAAOK,WAAWF,KAAKgK,EACzB,CACF,CAEQ,qBAAAnB,CAAsB7B,GAC5B9D,OAAO0E,QAAQtF,GAAQc,SAAQ,EAAEyE,EAAKxE,MACpC,MAAM6G,EAAQnE,EAAwB8B,IAAQ,EAC9C,IAAIsC,EAAgB7K,KAAKC,IAAKyH,EAAiBkD,EAlN/B,GAkNuD,GAGrEC,EADU,WAARtC,EACcvI,KAAKgJ,IACnB,EACAhJ,KAAKC,IACH,GACEyH,EAvNc,KAwNSoD,SAASvC,EAAIwC,QAAQ,QAAS,KAAO,IAC5DH,EA3NQ,KAgOE5K,KAAKgJ,IACnB,EACAhJ,KAAKC,IAAI,GAAKyH,EA/NH,IA+NoCkD,EAlOnC,KAqOhB,MAAMpE,EAAQuB,KAAKR,aAAagB,GAChC,IAAK/B,EAAO,OACZ,MAAM/F,EAAW+F,EAAMwE,SAASH,GAChC9G,EAAMtD,SAASC,KAAKD,GAEpB,MAAMwK,EAAmBlD,KAAKN,kBAAkBc,GAC1C2C,EAAiB,IAAI,QAAYlL,KAAKoK,IAAM,EAAG,EAAG,GAClDe,EAAkB,IAAI,QAC1BF,EAAiB5E,GACd6E,EAAe7E,EAAI4E,EAAiB5E,GAAKwE,EAC5CI,EAAiB3E,GACd4E,EAAe5E,EAAI2E,EAAiB3E,GAAKuE,EAC5CI,EAAiB1E,GACd2E,EAAe3E,EAAI0E,EAAiB1E,GAAKsE,GAE9C9G,EAAMyE,SAAS9H,KAAKyK,GAEpB,IAAIzJ,EAAU,EACVmJ,GAtPuB,KA0PzBnJ,EAAU,GAFPmJ,EAxPsB,KAyPtB,EAzPsB,IA2PzBnJ,EAAU1B,KAAKgJ,IAAI,EAAGtH,IAGtBqC,aAAiB,QACjBA,EAAMqH,UACN,YAAarH,EAAMqH,SAElBrH,EAAMqH,SAAiB1J,QAAUA,EACzBqC,aAAiB,SAC1BA,EAAMsH,UAAUC,IAEZA,aAAiB,QACjBA,EAAMF,UACN,YAAaE,EAAMF,WAElBE,EAAMF,SAAiB1J,QAAUA,QAK5C,CAEQ,2BAAA8H,CAA4B9B,GAClC,IAAKZ,IAAsBC,EAA6B,OAExD,MAAMtG,EAAWqG,EAAkBkE,SAAShL,KAAKC,IAAIyH,EAAgB,IACrEnH,EAAOE,SAASC,KAAKD,GAErBF,EAAOiK,IAnRU,GAoRjBjK,EAAOkK,yBAEP,MAAMc,EAAI,IAAI,aACdA,EAAEZ,iBACA5D,EACAjG,EACAd,KAAKC,IAAIyH,EAAgB,IAE3BnH,EAAOK,WAAWF,KAAK6K,EACzB,CAEO,WAAAC,GACLzD,KAAKb,MAAQ,iBACba,KAAKV,kBAAmB,EACxBU,KAAKT,WAAaU,KAAKC,MACvBF,KAAKJ,kBAAoB,EAEzBb,EAAoB,KACpBC,EAA8B,IAChC,CAGO,QAAA0E,GACL,OAAO1D,KAAKb,KACd,CAGO,MAAAwE,GACLjM,EAASiM,OAAOlM,EAAOe,EACzB,GAOF,SAASoL,IACPC,sBAAsBD,GAGtB3E,EAAgBiC,SAGhBjC,EAAgB0E,QAClB,EC9UAG,iBACE,IPKI5N,EACFwB,EAASK,cAAcE,KAAKC,IAAI/B,OAAOgC,iBAAkB,IAEzDT,EAASK,cAAc5B,OAAOgC,kBAEhCT,EAASqM,UAAUC,SAAU,EAC7BtM,EAASqM,UAAU5H,KAAO,mBAoB1BzE,EAASqM,UAAUC,SAAU,EAC7BtM,EAASqM,UAAU5H,KAAO,mBAEtBnF,EAAaC,eACf4I,QAAQC,IAAI,+CACZpI,EAASU,QACPpB,EAAaC,cAAcoB,YAC3BrB,EAAaC,cAAcqB,cAE7BtB,EAAaC,cAAcgN,YAAYvM,EAASwM,cAEhDrE,QAAQC,IAAI,qDACZpI,EAASU,QAAQjC,OAAOC,WAAYD,OAAOoC,aAC3CrB,SAASiN,KAAKF,YAAYvM,EAASwM,aAGT,YAAxBhN,SAASkN,WACXlN,SAASmN,iBAAiB,mBAAoBtM,GAE9CA,IAEF5B,OAAOkO,iBAAiB,SAAUtM,GAG7B,WACL,MAAMuM,EAAe,IAAI,eAAmB,UAC5C7M,EAAMuD,IAAIsJ,GAEV,MAAMC,EAAmB,IAAI,mBAAuB,SAAU,IAC9D9M,EAAMuD,IAAIuJ,GACVA,EAAiB7L,SAAS8J,KAAK,EAAG,GAAI,IACtC+B,EAAiBC,OAAOC,QAAQC,MAAQ,KACxCH,EAAiBC,OAAOC,QAAQE,OAAS,KACzCJ,EAAiBC,OAAOhM,OAAOoM,MAAQ,GACvCL,EAAiBC,OAAOhM,OAAOqM,MAAQ,GACvCN,EAAiBC,OAAOhM,OAAOsM,IAAM,GACrCP,EAAiBC,OAAOhM,OAAOuM,QAAU,GACzCR,EAAiBC,OAAOhM,OAAOwM,KAAO,GACtCT,EAAiBC,OAAOhM,OAAOyM,IAAM,GACrCV,EAAiBC,OAAOU,MAAQ,KAChCX,EAAiBC,OAAOW,OAAS,EACjCZ,EAAiBa,YAAa,CAChC,COvEIC,GACA5M,INqCFtC,OAAOkO,iBAAiB,UALH,KACnB7L,EAAO8M,OAASnP,OAAOC,WAAaD,OAAOoC,YAC3CC,EAAOkK,kCEPJoB,iBACL,OAAO,IAAIyB,SAAQ,CAACC,EAASC,KAC3B9K,EAAOzB,KJ7BE,gDI+BP,SAAUwM,GACR,MAAMC,EAAQD,EAAKjO,MAEnBkO,EAAMrC,UAAUC,IACd,GAAmB,eAAfA,EAAMqC,KAAuB,CAC/B,MAAMC,EAA6B,GACnCtC,EAAMD,UAAUwC,IACd,GACGA,EAAiBC,QACA,qBAAlBD,EAASF,MACS,6BAAlBE,EAASF,KACT,CACA,MAAMvC,EACJ9I,EAAYuL,EAASF,OACrBrL,EAAYD,QACbwL,EAAwBzC,SAAWA,EACpCwC,EAASG,KAAKF,EAChB,KACoB,qBAAlBA,EAASF,MACS,6BAAlBE,EAASF,OAETE,EAASnE,SAAU,MAIvBkE,EAAS9J,SAASkK,GAAShL,EAAOF,OAAOC,IAAIiL,KAC7ChL,EAAOF,OAAOmL,MAAM1D,IAAI,IAAM,IAAM,KACpCvH,EAAOF,OAAO0F,SAAS+B,IAAIvK,KAAKoK,GAAK,EAAGpK,KAAKoK,GAAK,EAAGpK,KAAKoK,GAAK,GAE/DvH,EAAc,IAAI,iBAAqBG,EAAOF,QAC9C,MAAMoL,EAA0D,CAAC,EAEjET,EAAKU,WAAWrK,SAASsK,IACvB,MAAMC,EAASxL,EAAYyL,WAAWF,GACtCF,EAAcE,EAAKT,MAAQU,EAC3BA,EAAOE,mBAAmB,GAC1BF,EAAOG,SAEX,MAAO,GACLlD,EAAMqC,MACNrK,EAAgBgI,EAAMqC,MACtB,CACA,MAAMc,EACJnL,EAAgBgI,EAAMqC,MAClBe,EAAa,IAAI,QAEvBpD,EAAM9C,SAASjC,EAAIvG,KAAKoK,GACxBkB,EAAM9C,SAASnC,EAAIrG,KAAKoK,GAAK,EAC7BkB,EAAM2C,MAAM1D,IAAI,IAAM,IAAM,KAE5B,MAAMqD,EAA6B,GACnCtC,EAAMD,UAAUwC,IACTA,EAAiBC,SAChBD,EAASF,MAAQE,EAASF,KAAKgB,WAAW,cAC3Cd,EAAwBzC,SAAW3J,EAEpCoM,EAASF,MACT,CAAC,MAAO,MAAO,MAAO,MAAO,OAAOiB,SAASf,EAASF,QAEtDE,EAASnE,SAAU,GAErBkE,EAASG,KAAKF,OAIlBD,EAAS9J,SAASkK,IAEdA,EAAKL,OACJK,EAAKL,KAAKiB,SAAS,QAClBZ,EAAKL,KAAKgB,WAAW,gBAEvBX,EAAKxF,SAASjC,EAAIvG,KAAKoK,GACvB4D,EAAKxF,SAASnC,EAAIrG,KAAKoK,GAAK,GAE5B4D,EAAKxF,SAAS+B,IAAI,EAAG,EAAG,GAE1BmE,EAAW3L,IAAIiL,MAGjBS,EAAe1L,IAAI2L,EACrB,CAEA,GAAKpD,EAAcwC,OACjB,GAAmB,yBAAfxC,EAAMqC,KACPrC,EAAqBF,SAAWhK,EACjCkK,EAAM6B,YAAa,OACd,GAAmB,4BAAf7B,EAAMqC,KACdrC,EAAqBF,SAAWlK,EACjCoK,EAAM6B,YAAa,OACd,GAAmB,cAAf7B,EAAMqC,KAAsB,CACrC,MAAMkB,EAAcvD,EAAMzK,QAC1ByK,EAAM7K,SAAS6F,GAAK,GACpBgF,EAAM7K,SAAS4F,EAAI,EACnBiF,EAAM7K,SAAS8F,EAAI,EAClB+E,EAAqBF,SAAW,IAAI,oBAAwB,CAC3D/J,MAAO,SACPK,QAAS,EACTC,aAAa,EACbC,YAAY,EACZC,WAAW,EACXE,KAAM,cAERuJ,EAAMwD,eAAgB,EACtBxD,EAAM6B,YAAa,EACnB7B,EAAM2C,MAAM1D,IAAI,GAAK,GAAK,IAEzBsE,EAA2BzD,SAAWnJ,EACvC4M,EAAYpO,SAAS6F,GAAK,GAC1BuI,EAAYC,eAAgB,EAC5BtP,EAAMuD,IAAI8L,EACZ,KAIJnB,EAAMrC,UAAS,SAAU0D,GAClBA,EAAajB,SAChBiB,EAAK5B,YAAa,EAClB4B,EAAKD,eAAgB,EAEzB,IAEAtP,EAAMuD,IAAI2K,GACVA,EAAMjN,SAAS8J,IAAI,GAAK,GAAK,IAE7BgD,GACF,IACA,SAAUxE,GAAgB,IAC1B,SAAUiG,GACRxB,EAAOwB,EACT,MAGN,CIhKUC,GDiVRrH,QAAQC,IAAI,qDAGZrH,IATAoH,QAAQC,IAAI,+CACZ8D,IAcAuD,YAAW,KACTtH,QAAQC,IAAI,oDACZb,EAAgBc,uBACf,KCzVDqH,KAAKC,eAAeC,eACpBA,cAAcC,OAAO,CACnBC,QAAS,YACTC,MAAO,UACPC,IAAK,aACLC,MAAO,GACPC,SAAWC,IAC0B,qBAA/B5I,EAAgByE,YAClBzE,EAAgB6B,sBAElB7B,EAAgB8B,kBAAkB8G,EAAK7G,WAEzC8G,YAAa,KACX7I,EAAgBwE,gBAGtB,CAAE,MAAOwD,GACPpH,QAAQoH,MAAM,wBAAyBA,EACzC,CACF,CAEAc,E","sources":["webpack://cam-3d-animation/external var \"THREE\"","webpack://cam-3d-animation/./src/config.ts","webpack://cam-3d-animation/./src/scene.ts","webpack://cam-3d-animation/./src/camera.ts","webpack://cam-3d-animation/./src/materials.ts","webpack://cam-3d-animation/./src/objects.ts","webpack://cam-3d-animation/./src/pathpoints.ts","webpack://cam-3d-animation/./src/paths.ts","webpack://cam-3d-animation/./src/animation.ts","webpack://cam-3d-animation/./src/main.ts"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = THREE;","import * as THREE from \"three\";\n\nexport const isMobile = window.innerWidth < 768;\n\nexport const CAMERA_CONFIG = {\n  originalFOV: 50,\n  wideFOV: 80,\n  near: 0.001,\n  far: 1000,\n};\n\nexport const ASSETS = {\n  mazeTexture: \"https://c-am.b-cdn.net/CAM/matcap24.png\",\n  mazeModel: \"https://c-am.b-cdn.net/CAM/c-am-assets-3.glb\",\n};\n\nexport const MAZE_CENTER = new THREE.Vector3(0.45175, 0.5, 0.55675);\n\nexport const POV_POSITIONS = {\n  ghost1: new THREE.Vector3(0.65725, 0.55, 0.75325),\n  ghost2: new THREE.Vector3(0.9085, 0.55, 0.8035),\n  ghost3: new THREE.Vector3(0.75775, 0.55, 1.05475),\n  ghost4: new THREE.Vector3(0.65725, 0.55, 1.0045),\n  ghost5: new THREE.Vector3(0.15475, 0.55, 1.15525),\n};\n\nexport const CAMERA_POSITIONS = {\n  startMobile: new THREE.Vector3(0.5, 2.5, 2.5),\n  startDesktop: new THREE.Vector3(-2, 2.5, 2),\n  secondMobile: new THREE.Vector3(0.5, 2.5, 2),\n  secondDesktop: new THREE.Vector3(-1.5, 3, 2),\n  mobileLookAt: new THREE.Vector3(0.5, 0.5, -1.5),\n  desktopLookAt: new THREE.Vector3(-1.25, 0.5, 0.25),\n};\n\nexport const startPosition = isMobile\n  ? CAMERA_POSITIONS.startMobile\n  : CAMERA_POSITIONS.startDesktop;\nexport const secondPosition = isMobile\n  ? CAMERA_POSITIONS.secondMobile\n  : CAMERA_POSITIONS.secondDesktop;\nexport const lookAtPosition = isMobile\n  ? CAMERA_POSITIONS.mobileLookAt\n  : CAMERA_POSITIONS.desktopLookAt;\n\n// DOM Selectors\nexport const SELECTORS = {\n  mazeContainer: \".el--home-maze.el\",\n  homeSection: \".sc--home.sc\",\n  introSection: \".sc--intro.sc\",\n  povSection: \".sc--pov.sc\",\n  finalSection: \".sc--final.sc\",\n  scrollComponent: \".cmp--scroll.cmp\",\n  parentElements: \".cmp--pov.cmp\",\n  pov: \".pov\",\n  cam: \".cam\",\n  finalContainer: \".cr--final.cr\",\n};\n\n// DOM Elements\nexport const DOM_ELEMENTS = {\n  mazeContainer: document.querySelector(SELECTORS.mazeContainer) as HTMLElement,\n  canvas: document.querySelector(\"canvas\") as HTMLCanvasElement,\n  finalSection: document.querySelector(SELECTORS.finalSection) as HTMLElement,\n  finalContainer: document.querySelector(\n    SELECTORS.finalContainer\n  ) as HTMLElement,\n  parentElements: document.querySelectorAll(\n    SELECTORS.parentElements\n  ) as NodeListOf<Element>,\n};\n","import * as THREE from \"three\";\nimport { isMobile, DOM_ELEMENTS } from \"./config\";\n\nexport const scene = new THREE.Scene();\n\nexport const renderer = new THREE.WebGLRenderer({\n  antialias: true,\n  alpha: true,\n  powerPreference: \"high-performance\",\n  precision: \"highp\",\n});\n\nexport const clock = new THREE.Clock();\n\nfunction enhanceAntiAliasing(): void {\n  if (isMobile) {\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n  } else {\n    renderer.setPixelRatio(window.devicePixelRatio);\n  }\n  renderer.shadowMap.enabled = true;\n  renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n}\n\nfunction setPixelRatio(): void {\n  const pixelRatio = Math.min(window.devicePixelRatio, isMobile ? 2 : 3);\n  renderer.setPixelRatio(pixelRatio);\n\n  if (DOM_ELEMENTS.mazeContainer) {\n    renderer.setSize(\n      DOM_ELEMENTS.mazeContainer.clientWidth,\n      DOM_ELEMENTS.mazeContainer.clientHeight\n    );\n  } else {\n    renderer.setSize(window.innerWidth, window.innerHeight);\n  }\n}\n\nexport function initRenderer(): void {\n  enhanceAntiAliasing();\n\n  renderer.shadowMap.enabled = true;\n  renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n  if (DOM_ELEMENTS.mazeContainer) {\n    console.log(\"Found maze container, using it for renderer\");\n    renderer.setSize(\n      DOM_ELEMENTS.mazeContainer.clientWidth,\n      DOM_ELEMENTS.mazeContainer.clientHeight\n    );\n    DOM_ELEMENTS.mazeContainer.appendChild(renderer.domElement);\n  } else {\n    console.log(\"Maze container not found, using body for renderer\");\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n  }\n\n  if (document.readyState === \"loading\") {\n    document.addEventListener(\"DOMContentLoaded\", setPixelRatio);\n  } else {\n    setPixelRatio();\n  }\n  window.addEventListener(\"resize\", setPixelRatio);\n}\n\nexport function setupLighting(): void {\n  const ambientLight = new THREE.AmbientLight(0xffffff);\n  scene.add(ambientLight);\n\n  const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n  scene.add(directionalLight);\n  directionalLight.position.set(-5, 15, 10);\n  directionalLight.shadow.mapSize.width = 4096;\n  directionalLight.shadow.mapSize.height = 4096;\n  directionalLight.shadow.camera.left = -20;\n  directionalLight.shadow.camera.right = 20;\n  directionalLight.shadow.camera.top = 20;\n  directionalLight.shadow.camera.bottom = -20;\n  directionalLight.shadow.camera.near = 0.1;\n  directionalLight.shadow.camera.far = 50;\n  directionalLight.shadow.bias = -0.001;\n  directionalLight.shadow.radius = 3;\n  directionalLight.castShadow = true;\n}\n","import * as THREE from \"three\";\nimport {\n  CAMERA_CONFIG,\n  startPosition,\n  secondPosition,\n  lookAtPosition,\n} from \"./config\";\n\nexport const camera = new THREE.PerspectiveCamera(\n  CAMERA_CONFIG.originalFOV,\n  window.innerWidth / window.innerHeight,\n  CAMERA_CONFIG.near,\n  CAMERA_CONFIG.far\n);\n\nexport function initCamera(): void {\n  camera.position.copy(startPosition);\n  camera.lookAt(lookAtPosition);\n}\n\nexport const startQuaternion = camera.quaternion.clone();\nexport const endQuaternion = new THREE.Quaternion().setFromEuler(\n  new THREE.Euler(-1.5708, 0, 0)\n);\n\nexport function getCameraLookAtPoint(): THREE.Vector3 {\n  const direction = new THREE.Vector3(0, 0, -1);\n  direction.applyQuaternion(camera.quaternion);\n  const lookAtPoint = new THREE.Vector3();\n  lookAtPoint.copy(camera.position).add(direction.multiplyScalar(10));\n  return lookAtPoint;\n}\n\n/*(window as any).setCamera = function (lookAt: string | THREE.Vector3): void {\n  if (typeof lookAt === \"string\") {\n    const [x, y, z] = lookAt.split(\",\").map(Number);\n    lookAt = new THREE.Vector3(x, y, z);\n  }\n  camera.lookAt(lookAt);\n  camera.updateProjectionMatrix();\n  camera.updateMatrix();\n  camera.updateMatrixWorld();\n};*/\n\nexport function setupCameraResize(): void {\n  const updateCamera = () => {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n  };\n\n  window.addEventListener(\"resize\", updateCamera);\n}\n","import * as THREE from \"three\";\nimport { ASSETS } from \"./config\";\n\nconst textureLoader = new THREE.TextureLoader();\n\nexport const mazeTexture = textureLoader.load(ASSETS.mazeTexture);\n\nexport const mazeMaterial = new THREE.MeshMatcapMaterial({\n  matcap: mazeTexture,\n});\n\nexport const topMaterial = new THREE.MeshStandardMaterial({\n  color: 0xf2f9f9,\n  metalness: 0.4,\n  roughness: 0,\n  envMapIntensity: 10,\n});\n\nexport const ghostMaterial = new THREE.MeshPhysicalMaterial({\n  color: 0xffffff,\n  opacity: 1,\n  transparent: true,\n  depthWrite: false,\n  depthTest: true,\n  blending: THREE.NormalBlending,\n  side: THREE.DoubleSide,\n  roughness: 0.75,\n  metalness: 0.2,\n  transmission: 0.5,\n});\n\nexport const floorMaterial = new THREE.MeshStandardMaterial({\n  color: 0xffffff,\n  opacity: 0.8,\n  transparent: true,\n  roughness: 0.5,\n  metalness: 0.1,\n});\n\nconst pacmanMaterials = {\n  blue: new THREE.MeshBasicMaterial({\n    color: 0x1469d3,\n    transparent: true,\n    opacity: 1,\n  }),\n  white: new THREE.MeshBasicMaterial({\n    color: 0xffffff,\n    transparent: true,\n    opacity: 1,\n  }),\n  default: new THREE.MeshBasicMaterial({\n    color: 0x1469d3,\n    transparent: true,\n    opacity: 1,\n  }),\n};\n\nexport const materialMap = {\n  CAM_Pacman_Backframe: pacmanMaterials.blue,\n  \"CAM-Pacman_Bitcoin_1\": pacmanMaterials.white,\n  \"CAM-Pacman_Bitcoin_2\": pacmanMaterials.white,\n  \"CAM-Pacman_Bottom\": pacmanMaterials.blue,\n  \"CAM-Pacman_Top\": pacmanMaterials.blue,\n  \"CAM-Pacman_Eye\": pacmanMaterials.white,\n  CAM_Pacman_Logo_1: pacmanMaterials.white,\n  CAM_Pacman_Logo_2: pacmanMaterials.white,\n  \"CAM-Pacman_Shell_Boolean\": pacmanMaterials.blue,\n  \"CAM-Pacman_Shell\": pacmanMaterials.blue,\n  \"CAM-Pacman_Bottom_electronic\": pacmanMaterials.white,\n  \"CAM-Pacman_Top_electronic\": pacmanMaterials.white,\n  \"CAM-Pacman_Bottom_Text\": pacmanMaterials.white,\n  \"CAM-Pacman_Top_Text\": pacmanMaterials.white,\n  default: pacmanMaterials.blue,\n};\n\nexport const ghostCoverMaterials = Array(5).fill(ghostMaterial);\n","import * as THREE from \"three\";\nimport { ASSETS } from \"./config\";\nimport { GhostContainer } from \"./types\";\nimport { scene, clock } from \"./scene\";\nimport {\n  mazeMaterial,\n  topMaterial,\n  ghostMaterial,\n  floorMaterial,\n  materialMap,\n} from \"./materials\";\n\nexport { clock };\n\nconst loader = new THREE.GLTFLoader();\n\nexport let pacmanMixer: THREE.AnimationMixer;\n\nexport const pacman = new THREE.Group();\nscene.add(pacman);\n\nexport const ghosts: GhostContainer = {\n  pacman: pacman,\n  ghost1: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost2: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost3: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost4: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n  ghost5: new THREE.Mesh(new THREE.BufferGeometry(), ghostMaterial),\n};\n\nconst ghostContainers = {\n  Ghost_EUR: ghosts.ghost1,\n  Ghost_CHF: ghosts.ghost2,\n  Ghost_YEN: ghosts.ghost3,\n  Ghost_USD: ghosts.ghost4,\n  Ghost_GBP: ghosts.ghost5,\n};\n\nObject.values(ghosts).forEach((ghost) => scene.add(ghost));\n\nexport async function loadModel(): Promise<void> {\n  return new Promise((resolve, reject) => {\n    loader.load(\n      ASSETS.mazeModel,\n      function (gltf) {\n        const model = gltf.scene;\n\n        model.traverse((child: THREE.Object3D) => {\n          if (child.name === \"CAM-Pacman\") {\n            const children: THREE.Object3D[] = [];\n            child.traverse((subChild: THREE.Object3D) => {\n              if (\n                (subChild as any).isMesh &&\n                subChild.name !== \"CAM-Pacman_Shell\" &&\n                subChild.name !== \"CAM-Pacman_Shell_Boolean\"\n              ) {\n                const material =\n                  materialMap[subChild.name as keyof typeof materialMap] ||\n                  materialMap.default;\n                (subChild as THREE.Mesh).material = material;\n                children.push(subChild);\n              } else if (\n                subChild.name === \"CAM-Pacman_Shell\" ||\n                subChild.name === \"CAM-Pacman_Shell_Boolean\"\n              ) {\n                subChild.visible = false;\n              }\n            });\n\n            children.forEach((item) => ghosts.pacman.add(item));\n            ghosts.pacman.scale.set(0.05, 0.05, 0.05);\n            ghosts.pacman.rotation.set(Math.PI / 2, Math.PI / 2, Math.PI / 4);\n\n            pacmanMixer = new THREE.AnimationMixer(ghosts.pacman);\n            const pacmanActions: { [key: string]: THREE.AnimationAction } = {};\n\n            gltf.animations.forEach((clip: THREE.AnimationClip) => {\n              const action = pacmanMixer.clipAction(clip);\n              pacmanActions[clip.name] = action;\n              action.setEffectiveWeight(1);\n              action.play();\n            });\n          } else if (\n            child.name &&\n            ghostContainers[child.name as keyof typeof ghostContainers]\n          ) {\n            const ghostContainer =\n              ghostContainers[child.name as keyof typeof ghostContainers];\n            const ghostGroup = new THREE.Group();\n\n            child.rotation.z = Math.PI;\n            child.rotation.x = Math.PI / 2;\n            child.scale.set(0.75, 0.75, 0.75);\n\n            const children: THREE.Object3D[] = [];\n            child.traverse((subChild: THREE.Object3D) => {\n              if ((subChild as any).isMesh) {\n                if (subChild.name && subChild.name.startsWith(\"Ghost_Mesh\")) {\n                  (subChild as THREE.Mesh).material = ghostMaterial;\n                } else if (\n                  subChild.name &&\n                  [\"EUR\", \"CHF\", \"YEN\", \"USD\", \"GBP\"].includes(subChild.name)\n                ) {\n                  subChild.visible = false;\n                }\n                children.push(subChild);\n              }\n            });\n\n            children.forEach((item) => {\n              if (\n                item.name &&\n                (item.name.includes(\"EUR\") ||\n                  item.name.startsWith(\"Ghost_Mesh\"))\n              ) {\n                item.rotation.z = Math.PI;\n                item.rotation.x = Math.PI / 2;\n              } else {\n                item.rotation.set(0, 0, 0);\n              }\n              ghostGroup.add(item);\n            });\n\n            ghostContainer.add(ghostGroup);\n          }\n\n          if ((child as any).isMesh) {\n            if (child.name === \"CAM-Arena_LowRes_Top\") {\n              (child as THREE.Mesh).material = topMaterial;\n              child.castShadow = true;\n            } else if (child.name === \"CAM-Arena_LowRes_Bottom\") {\n              (child as THREE.Mesh).material = mazeMaterial;\n              child.castShadow = true;\n            } else if (child.name === \"CAM-Floor\") {\n              const clonedChild = child.clone();\n              child.position.y = -0.1;\n              child.position.x = 0;\n              child.position.z = 0;\n              (child as THREE.Mesh).material = new THREE.MeshBasicMaterial({\n                color: 0xffffff,\n                opacity: 1,\n                transparent: false,\n                depthWrite: true,\n                depthTest: true,\n                side: THREE.FrontSide,\n              });\n              child.receiveShadow = false;\n              child.castShadow = true;\n              child.scale.set(0.5, 0.5, 0.5);\n\n              (clonedChild as THREE.Mesh).material = floorMaterial;\n              clonedChild.position.y = -0.5;\n              clonedChild.receiveShadow = true;\n              scene.add(clonedChild);\n            }\n          }\n        });\n\n        model.traverse(function (node: THREE.Object3D) {\n          if ((node as any).isMesh) {\n            node.castShadow = true;\n            node.receiveShadow = true;\n          }\n        });\n\n        scene.add(model);\n        model.position.set(0.5, 0.5, 0.5);\n\n        resolve();\n      },\n      function (progress: any) {},\n      function (error: any) {\n        reject(error);\n      }\n    );\n  });\n}\n","import * as THREE from \"three\";\nimport { PathPoint } from \"./types\";\n\nexport const pacmanHomePathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.6025), type: \"straight\" },\n];\n\nexport const ghost1HomePathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.502), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.75775, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.004, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.0965, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.502), type: \"straight\" },\n];\n\nexport const ghost2HomePathPoints: PathPoint[] = [\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.004, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.502), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.3055, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.25525, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.3055, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.0965, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n];\n\nexport const ghost3HomePathPoints: PathPoint[] = [\n  {\n    pos: new THREE.Vector3(0.808, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.15475, 0.55, -0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, -0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.55675, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.301), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.009, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.904), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.75775, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.7075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.004, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.808, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n];\n\nexport const ghost4HomePathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.65725, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.05425, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(-0.44825, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.34775, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.15975, 0.55, 0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.26025, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.6025), type: \"straight\" },\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.4015), type: \"straight\" },\n];\n\nexport const ghost5HomePathPoints: PathPoint[] = [\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.04975),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.0005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.44825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.398, 0.55, 0.0005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.34775, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.24725, 0.55, 0.2005), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.04625, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.05425, 0.55, 0.301),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.04625, 0.55, 0.4015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(-0.14675, 0.55, 0.4015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(-0.24725, 0.55, 0.502),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.14675, 0.55, 0.6025), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.25525, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.3055, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.45625, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.904),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.105),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.36075, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.46125, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.46125, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.36075, 0.55, -0.2015), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.15975, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(1.05925, 0.55, -0.101), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.1),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 0.2005),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.85825, 0.55, 0.1), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.85825, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, -0.2015),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, -0.15125),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, -0.101),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.45625, 0.55, -0.04975),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n];\n\nexport const cameraPOVPathPoints: PathPoint[] = [\n  {\n    pos: new THREE.Vector3(0.55675, -0.5, 0.45175),\n    type: \"curve\",\n    curveType: \"forwardDownArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 0.6025),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.607, 0.55, 0.703),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.65725, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.7075, 0.55, 0.8035), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.9085, 0.55, 0.8035),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 0.85375), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.95875, 0.55, 1.15525),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.9085, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.808, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.75775, 0.55, 1.15525), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.75775, 0.55, 1.05475),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.7075, 0.55, 1.0045), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.205, 0.55, 1.0045),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.15475, 0.55, 1.05475), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.15525),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.205, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.5065, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 1.306),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(-0.44825, 1, 2.0095), type: \"straight\" },\n];\n\nexport const ghost1POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 0.703), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.05925, 0.55, 0.75325),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(1.009, 0.55, 0.8035), type: \"straight\" },\n  { pos: new THREE.Vector3(0.9085, 0.55, 0.8035), type: \"straight\" },\n];\n\nexport const ghost2POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(1.05925, 0.55, 1.2055), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(1.009, 0.55, 1.2055),\n    type: \"curve\",\n    curveType: \"lowerArc\",\n  },\n  { pos: new THREE.Vector3(0.95875, 0.55, 1.15525), type: \"straight\" },\n  { pos: new THREE.Vector3(0.95875, 0.55, 1.05475), type: \"straight\" },\n];\n\nexport const ghost3POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(0.35575, 0.55, 0.904), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.35575, 0.55, 0.95425),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.406, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.5065, 0.55, 1.0045), type: \"straight\" },\n];\n\nexport const ghost4POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(0.15475, 0.55, 1.105), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.15475, 0.55, 1.05475),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.205, 0.55, 1.0045), type: \"straight\" },\n  { pos: new THREE.Vector3(0.3055, 0.55, 1.0045), type: \"straight\" },\n];\n\nexport const ghost5POVPathPoints: PathPoint[] = [\n  { pos: new THREE.Vector3(0.55675, 0.55, 1.306), type: \"straight\" },\n  {\n    pos: new THREE.Vector3(0.55675, 0.55, 1.25575),\n    type: \"curve\",\n    curveType: \"upperArc\",\n  },\n  { pos: new THREE.Vector3(0.5065, 0.55, 1.2055), type: \"straight\" },\n  { pos: new THREE.Vector3(0.406, 0.55, 1.2055), type: \"straight\" },\n];\n","import * as THREE from \"three\";\nimport { PathPoint } from \"./types\";\nimport { startPosition, secondPosition } from \"./config\";\nimport * as pathPoints from \"./pathpoints\";\n\nexport const cameraHomePath = new THREE.CubicBezierCurve3(\n  startPosition,\n  secondPosition,\n  new THREE.Vector3(0.55675, 3, 0.45175),\n  new THREE.Vector3(0.55675, 0.5, 0.45175)\n);\n\nexport const paths = {\n  pacmanHome: createPath(pathPoints.pacmanHomePathPoints),\n  ghost1Home: createPath(pathPoints.ghost1HomePathPoints),\n  ghost2Home: createPath(pathPoints.ghost2HomePathPoints),\n  ghost3Home: createPath(pathPoints.ghost3HomePathPoints),\n  ghost4Home: createPath(pathPoints.ghost4HomePathPoints),\n  ghost5Home: createPath(pathPoints.ghost5HomePathPoints),\n  cameraPOV: createPath(pathPoints.cameraPOVPathPoints),\n  ghost1POV: createPath(pathPoints.ghost1POVPathPoints),\n  ghost2POV: createPath(pathPoints.ghost2POVPathPoints),\n  ghost3POV: createPath(pathPoints.ghost3POVPathPoints),\n  ghost4POV: createPath(pathPoints.ghost4POVPathPoints),\n  ghost5POV: createPath(pathPoints.ghost5POVPathPoints),\n};\n\nfunction createPath(pathPoints: PathPoint[]): THREE.CurvePath<THREE.Vector3> {\n  const path = new THREE.CurvePath<THREE.Vector3>();\n\n  for (let i = 0; i < pathPoints.length - 1; i++) {\n    const current = pathPoints[i];\n    const next = pathPoints[i + 1];\n\n    if (current.type === \"straight\") {\n      const line = new THREE.LineCurve3(current.pos, next.pos);\n      path.add(line);\n    } else if (current.type === \"curve\") {\n      let midPoint: THREE.Vector3;\n      if (current.curveType === \"upperArc\") {\n        midPoint = new THREE.Vector3(current.pos.x, current.pos.y, next.pos.z);\n      } else if (current.curveType === \"lowerArc\") {\n        midPoint = new THREE.Vector3(next.pos.x, current.pos.y, current.pos.z);\n      } else if (current.curveType === \"forwardDownArc\") {\n        midPoint = new THREE.Vector3(current.pos.x, next.pos.y, current.pos.z);\n      } else {\n        midPoint = new THREE.Vector3(current.pos.x, current.pos.y, next.pos.z);\n      }\n      const curve = new THREE.QuadraticBezierCurve3(\n        current.pos,\n        midPoint,\n        next.pos\n      );\n      path.add(curve);\n    }\n  }\n  return path;\n}\n\nexport function getPathsForSection(section: string) {\n  if (section === \"home\") {\n    return {\n      pacman: paths.pacmanHome,\n      ghost1: paths.ghost1Home,\n      ghost2: paths.ghost2Home,\n      ghost3: paths.ghost3Home,\n      ghost4: paths.ghost4Home,\n      ghost5: paths.ghost5Home,\n    };\n  } else if (section === \"pov\") {\n    return {\n      pacman: paths.cameraPOV,\n      ghost1: paths.ghost1POV,\n      ghost2: paths.ghost2POV,\n      ghost3: paths.ghost3POV,\n      ghost4: paths.ghost4POV,\n      ghost5: paths.ghost5POV,\n    };\n  }\n  return {};\n}\n","import * as THREE from \"three\";\nimport { camera, initCamera, endQuaternion } from \"./camera\";\nimport { scene, renderer, clock } from \"./scene\";\nimport { ghosts, pacman } from \"./objects\";\nimport { paths, getPathsForSection } from \"./paths\";\nimport { MAZE_CENTER } from \"./config\";\n\n// Animation state\nexport type AnimationState = \"IDLE\" | \"HOME_ANIMATION\" | \"SCROLL_TO_CENTER\";\n\nconst GHOST_SPEED_MULTIPLIERS: Record<string, number> = {\n  ghost1: 1.25,\n  ghost2: 1.14,\n  ghost3: 1.05,\n  ghost4: 0.97,\n  ghost5: 0.89,\n  pacman: 0.8,\n};\nconst GHOSTS_END_AT = 0.8;\nconst GHOST_OPACITY_FADE_START = 0.9;\nconst GHOST_STAGGER_DELAY = 0.15;\nconst PACMAN_DELAY = 0.3;\nconst HOME_ANIMATION_SPEED = 0.03; // matches animation-system.ts\nconst ORIGINAL_FOV = 50;\n\n// Camera home path setup (matches animation-system.ts)\nconst isMobile = window.innerWidth < 768;\nconst cameraStartPosition = isMobile\n  ? new THREE.Vector3(0.5, 2.5, 2.5)\n  : new THREE.Vector3(-2, 2.5, 2);\nconst cameraSecondPosition = isMobile\n  ? new THREE.Vector3(0.5, 2.5, 2)\n  : new THREE.Vector3(-1.5, 3, 2);\nconst cameraHomePath = new THREE.CubicBezierCurve3(\n  cameraStartPosition,\n  cameraSecondPosition,\n  new THREE.Vector3(0.55675, 3, 0.45175),\n  new THREE.Vector3(0.55675, 0.5, 0.45175)\n);\n\nlet initialCameraPosition = camera.position.clone();\nlet initialCameraQuaternion = camera.quaternion.clone();\n\n// Camera scroll-to-center path\nlet scrollCameraCurve: THREE.CubicBezierCurve3 | null = null;\nlet scrollCameraStartQuaternion: THREE.Quaternion | null = null;\n\nclass AnimationSystem {\n  private state: AnimationState = \"IDLE\";\n  private animationTime: number = 0;\n  public animationDuration: number = 33; // 1/0.03 ≈ 33s for a full loop\n  private animationRunning: boolean = true;\n  private timeOffset: number = 0;\n  private bezierCurves: Record<string, THREE.QuadraticBezierCurve3> = {};\n  private capturedPositions: Record<string, THREE.Vector3> = {};\n  private capturedRotations: Record<string, THREE.Euler> = {};\n  private scrollProgress = 0;\n  private savedHomeProgress = 0;\n\n  constructor() {\n    console.log(\"AnimationSystem: Initializing...\");\n    console.log(\"AnimationSystem: MAZE_CENTER:\", MAZE_CENTER);\n  }\n\n  // Start the home animation\n  public startHomeAnimation(): void {\n    this.state = \"HOME_ANIMATION\";\n    this.animationTime = 0;\n    this.animationRunning = true;\n    this.timeOffset = Date.now();\n    // Store initial camera state for slerp\n    initialCameraPosition = camera.position.clone();\n    initialCameraQuaternion = camera.quaternion.clone();\n  }\n\n  public pauseHomeAnimation(): void {\n    // Save current progress so we can resume from here\n    const currentTime = Date.now();\n    const elapsed = (currentTime - this.timeOffset) / 1000;\n    this.savedHomeProgress = (elapsed / this.animationDuration) % 1;\n    this.animationRunning = false;\n  }\n\n  public resumeHomeAnimation(): void {\n    this.state = \"HOME_ANIMATION\";\n    this.animationRunning = true;\n    this.timeOffset =\n      Date.now() - this.savedHomeProgress * this.animationDuration * 1000;\n  }\n\n  public captureGhostPositions(): void {\n    Object.entries(ghosts).forEach(([key, ghost]) => {\n      this.capturedPositions[key] = ghost.position.clone();\n      this.capturedRotations[key] = ghost.rotation.clone();\n    });\n  }\n\n  public createBezierCurves(): void {\n    this.bezierCurves = {};\n    Object.entries(this.capturedPositions).forEach(([key, startPos]) => {\n      const endPos = MAZE_CENTER.clone();\n      const controlPoint = new THREE.Vector3(\n        (startPos.x + endPos.x) / 2,\n        2,\n        (startPos.z + endPos.z) / 2\n      );\n      this.bezierCurves[key] = new THREE.QuadraticBezierCurve3(\n        startPos,\n        controlPoint,\n        endPos\n      );\n    });\n  }\n\n  public startScrollToCenter(): void {\n    if (this.state === \"SCROLL_TO_CENTER\") return;\n    this.pauseHomeAnimation();\n    this.captureGhostPositions();\n    this.createBezierCurves();\n    // Capture camera position/quaternion and create scroll-to-center path\n    scrollCameraCurve = new THREE.CubicBezierCurve3(\n      camera.position.clone(),\n      new THREE.Vector3(\n        (camera.position.x + MAZE_CENTER.x) / 2,\n        2,\n        (camera.position.z + MAZE_CENTER.z) / 2\n      ),\n      new THREE.Vector3(0.55675, 3, 0.45175),\n      MAZE_CENTER.clone()\n    );\n    scrollCameraStartQuaternion = camera.quaternion.clone();\n    this.state = \"SCROLL_TO_CENTER\";\n  }\n\n  public setScrollProgress(progress: number): void {\n    this.scrollProgress = Math.max(0, Math.min(1, progress));\n  }\n\n  // Update animation (adapted from backup.js animate function)\n  public update(): void {\n    if (this.state === \"HOME_ANIMATION\" && this.animationRunning) {\n      const currentTime = Date.now();\n      const elapsed = (currentTime - this.timeOffset) / 1000;\n      // Use savedHomeProgress if paused/resumed\n      let t = (this.savedHomeProgress + elapsed * HOME_ANIMATION_SPEED) % 1;\n      let tPath = t;\n      if (t > 0.95) {\n        const blend = (t - 0.95) / 0.05;\n        tPath = (1 - blend) * t + blend * 0;\n      }\n      this.animateHomePaths(tPath);\n      this.animateCameraHome(tPath);\n    } else if (this.state === \"SCROLL_TO_CENTER\") {\n      this.animateScrollToCenter(this.scrollProgress);\n      this.animateCameraScrollToCenter(this.scrollProgress);\n    }\n  }\n\n  private animateHomePaths(t: number): void {\n    const pathMapping = getPathsForSection(\"home\");\n    if (!pacman.visible) {\n      pacman.visible = true;\n    }\n\n    // Animate all objects along their paths\n    Object.entries(ghosts).forEach(([key, ghost]) => {\n      const path = pathMapping[key as keyof typeof pathMapping];\n      if (path) {\n        const position = path.getPointAt(t);\n        ghost.position.copy(position);\n        const tangent = path.getTangentAt(t).normalize();\n        ghost.lookAt(position.clone().add(tangent));\n\n        // Special handling for pacman rotation (from backup.js)\n        if (key === \"pacman\") {\n          const zRotation = Math.atan2(tangent.x, tangent.z);\n\n          if ((ghost as any).previousZRotation === undefined) {\n            (ghost as any).previousZRotation = zRotation;\n          }\n\n          let rotationDiff = zRotation - (ghost as any).previousZRotation;\n\n          if (rotationDiff > Math.PI) {\n            rotationDiff -= 2 * Math.PI;\n          } else if (rotationDiff < -Math.PI) {\n            rotationDiff += 2 * Math.PI;\n          }\n\n          const smoothFactor = 0.1;\n          const smoothedRotation =\n            (ghost as any).previousZRotation + rotationDiff * smoothFactor;\n\n          (ghost as any).previousZRotation = smoothedRotation;\n          ghost.rotation.set(\n            Math.PI / 2,\n            Math.PI,\n            smoothedRotation + Math.PI / 2\n          );\n        }\n      }\n    });\n  }\n\n  private animateCameraHome(t: number): void {\n    // Animate camera position along the cubic bezier path\n    const position = cameraHomePath.getPointAt(t);\n    camera.position.copy(position);\n    // Animate camera FOV\n    camera.fov = ORIGINAL_FOV;\n    camera.updateProjectionMatrix();\n    // Animate camera rotation (slerp from initial to endQuaternion)\n    if (t === 0) {\n      camera.quaternion.copy(initialCameraQuaternion);\n    } else {\n      const currentQuaternion = new THREE.Quaternion();\n      currentQuaternion.slerpQuaternions(\n        initialCameraQuaternion,\n        endQuaternion,\n        t\n      );\n      camera.quaternion.copy(currentQuaternion);\n    }\n  }\n\n  private animateScrollToCenter(scrollProgress: number): void {\n    Object.entries(ghosts).forEach(([key, ghost]) => {\n      const speed = GHOST_SPEED_MULTIPLIERS[key] || 1.0;\n      let ghostProgress = Math.min((scrollProgress * speed) / GHOSTS_END_AT, 1);\n      // Stagger for ghosts and pacman\n      if (key !== \"pacman\") {\n        ghostProgress = Math.max(\n          0,\n          Math.min(\n            1,\n            ((scrollProgress -\n              GHOST_STAGGER_DELAY * (parseInt(key.replace(\"ghost\", \"\")) - 1)) *\n              speed) /\n              GHOSTS_END_AT\n          )\n        );\n      } else {\n        ghostProgress = Math.max(\n          0,\n          Math.min(1, ((scrollProgress - PACMAN_DELAY) * speed) / GHOSTS_END_AT)\n        );\n      }\n      const curve = this.bezierCurves[key];\n      if (!curve) return;\n      const position = curve.getPoint(ghostProgress);\n      ghost.position.copy(position);\n      // Rotation interpolation\n      const originalRotation = this.capturedRotations[key];\n      const targetRotation = new THREE.Euler(Math.PI / -2, 0, 0);\n      const currentRotation = new THREE.Euler(\n        originalRotation.x +\n          (targetRotation.x - originalRotation.x) * ghostProgress,\n        originalRotation.y +\n          (targetRotation.y - originalRotation.y) * ghostProgress,\n        originalRotation.z +\n          (targetRotation.z - originalRotation.z) * ghostProgress\n      );\n      ghost.rotation.copy(currentRotation);\n      // Opacity fade out in last 10%\n      let opacity = 1;\n      if (ghostProgress >= GHOST_OPACITY_FADE_START) {\n        const fadeProgress =\n          (ghostProgress - GHOST_OPACITY_FADE_START) /\n          (1 - GHOST_OPACITY_FADE_START);\n        opacity = 1 - fadeProgress;\n        opacity = Math.max(0, opacity);\n      }\n      if (\n        ghost instanceof THREE.Mesh &&\n        ghost.material &&\n        \"opacity\" in ghost.material\n      ) {\n        (ghost.material as any).opacity = opacity;\n      } else if (ghost instanceof THREE.Group) {\n        ghost.traverse((child) => {\n          if (\n            child instanceof THREE.Mesh &&\n            child.material &&\n            \"opacity\" in child.material\n          ) {\n            (child.material as any).opacity = opacity;\n          }\n        });\n      }\n    });\n  }\n\n  private animateCameraScrollToCenter(scrollProgress: number): void {\n    if (!scrollCameraCurve || !scrollCameraStartQuaternion) return;\n    // Camera position\n    const position = scrollCameraCurve.getPoint(Math.min(scrollProgress, 1));\n    camera.position.copy(position);\n    // Camera FOV\n    camera.fov = ORIGINAL_FOV;\n    camera.updateProjectionMatrix();\n    // Camera rotation: slerp from start to endQuaternion\n    const q = new THREE.Quaternion();\n    q.slerpQuaternions(\n      scrollCameraStartQuaternion,\n      endQuaternion,\n      Math.min(scrollProgress, 1)\n    );\n    camera.quaternion.copy(q);\n  }\n\n  public resetToHome(): void {\n    this.state = \"HOME_ANIMATION\";\n    this.animationRunning = true;\n    this.timeOffset = Date.now();\n    this.savedHomeProgress = 0;\n    // Clear scroll camera path/quaternion so camera only animates on scroll when in SCROLL_TO_CENTER\n    scrollCameraCurve = null;\n    scrollCameraStartQuaternion = null;\n  }\n\n  // Public getters\n  public getState(): AnimationState {\n    return this.state;\n  }\n\n  // Render function\n  public render(): void {\n    renderer.render(scene, camera);\n  }\n}\n\n// Create and export the animation system\nexport const animationSystem = new AnimationSystem();\n\n// Animation loop (adapted from backup.js)\nfunction animate(): void {\n  requestAnimationFrame(animate);\n\n  // Update animation system\n  animationSystem.update();\n\n  // Render the scene\n  animationSystem.render();\n}\n\n// Start the animation loop\nexport function startAnimationLoop(): void {\n  console.log(\"AnimationSystem: Starting animation loop...\");\n  animate();\n}\n\n// Initialize animation system\nexport function initAnimationSystem(): void {\n  console.log(\"AnimationSystem: Initializing animation system...\");\n\n  // Initialize camera\n  initCamera();\n\n  // Start animation loop\n  startAnimationLoop();\n\n  // Auto-start home animation after a short delay\n  setTimeout(() => {\n    console.log(\"AnimationSystem: Auto-starting home animation...\");\n    animationSystem.startHomeAnimation();\n  }, 1000);\n}\n","// TypeScript declarations for global GSAP/ScrollTrigger (CDN approach)\ndeclare const gsap: any;\ndeclare const ScrollTrigger: any;\n\nimport { initRenderer, setupLighting } from \"./scene\";\nimport { initCamera, setupCameraResize } from \"./camera\";\nimport { loadModel } from \"./objects\";\nimport { initAnimationSystem, animationSystem } from \"./animation\";\n\nasync function init() {\n  try {\n    initRenderer();\n    setupLighting();\n    initCamera();\n    setupCameraResize();\n\n    await loadModel();\n\n    initAnimationSystem();\n\n    gsap.registerPlugin(ScrollTrigger);\n    ScrollTrigger.create({\n      trigger: \".sc--home\",\n      start: \"top top\",\n      end: \"bottom top\",\n      scrub: 0.5,\n      onUpdate: (self: any) => {\n        if (animationSystem.getState() !== \"SCROLL_TO_CENTER\") {\n          animationSystem.startScrollToCenter();\n        }\n        animationSystem.setScrollProgress(self.progress);\n      },\n      onLeaveBack: () => {\n        animationSystem.resetToHome();\n      },\n    });\n  } catch (error) {\n    console.error(\"Initialization error:\", error);\n  }\n}\n\ninit();\n"],"names":["THREE","isMobile","window","innerWidth","MAZE_CENTER","CAMERA_POSITIONS","startMobile","startDesktop","secondMobile","secondDesktop","mobileLookAt","desktopLookAt","startPosition","secondPosition","lookAtPosition","DOM_ELEMENTS","mazeContainer","document","querySelector","canvas","finalSection","finalContainer","parentElements","querySelectorAll","scene","renderer","antialias","alpha","powerPreference","precision","setPixelRatio","pixelRatio","Math","min","devicePixelRatio","setSize","clientWidth","clientHeight","innerHeight","camera","initCamera","position","copy","lookAt","quaternion","clone","endQuaternion","setFromEuler","mazeTexture","load","mazeMaterial","matcap","topMaterial","color","metalness","roughness","envMapIntensity","ghostMaterial","opacity","transparent","depthWrite","depthTest","blending","side","transmission","floorMaterial","pacmanMaterials","blue","white","default","materialMap","CAM_Pacman_Backframe","CAM_Pacman_Logo_1","CAM_Pacman_Logo_2","loader","Array","fill","pacmanMixer","pacman","add","ghosts","ghost1","ghost2","ghost3","ghost4","ghost5","ghostContainers","Ghost_EUR","Ghost_CHF","Ghost_YEN","Ghost_USD","Ghost_GBP","Object","values","forEach","ghost","pacmanHomePathPoints","pos","type","curveType","ghost1HomePathPoints","ghost2HomePathPoints","ghost3HomePathPoints","ghost4HomePathPoints","ghost5HomePathPoints","cameraPOVPathPoints","ghost1POVPathPoints","ghost2POVPathPoints","ghost3POVPathPoints","ghost4POVPathPoints","ghost5POVPathPoints","paths","pacmanHome","createPath","ghost1Home","ghost2Home","ghost3Home","ghost4Home","ghost5Home","cameraPOV","ghost1POV","ghost2POV","ghost3POV","ghost4POV","ghost5POV","pathPoints","path","i","length","current","next","line","midPoint","x","y","z","curve","GHOST_SPEED_MULTIPLIERS","cameraStartPosition","cameraSecondPosition","initialCameraPosition","initialCameraQuaternion","scrollCameraCurve","scrollCameraStartQuaternion","animationSystem","constructor","state","animationTime","animationDuration","animationRunning","timeOffset","bezierCurves","capturedPositions","capturedRotations","scrollProgress","savedHomeProgress","console","log","startHomeAnimation","this","Date","now","pauseHomeAnimation","elapsed","resumeHomeAnimation","captureGhostPositions","entries","key","rotation","createBezierCurves","startPos","endPos","controlPoint","startScrollToCenter","setScrollProgress","progress","max","update","t","tPath","blend","animateHomePaths","animateCameraHome","animateScrollToCenter","animateCameraScrollToCenter","pathMapping","visible","getPointAt","tangent","getTangentAt","normalize","zRotation","atan2","undefined","previousZRotation","rotationDiff","PI","smoothFactor","smoothedRotation","set","fov","updateProjectionMatrix","currentQuaternion","slerpQuaternions","speed","ghostProgress","parseInt","replace","getPoint","originalRotation","targetRotation","currentRotation","material","traverse","child","q","resetToHome","getState","render","animate","requestAnimationFrame","async","shadowMap","enabled","appendChild","domElement","body","readyState","addEventListener","ambientLight","directionalLight","shadow","mapSize","width","height","left","right","top","bottom","near","far","bias","radius","castShadow","setupLighting","aspect","Promise","resolve","reject","gltf","model","name","children","subChild","isMesh","push","item","scale","pacmanActions","animations","clip","action","clipAction","setEffectiveWeight","play","ghostContainer","ghostGroup","startsWith","includes","clonedChild","receiveShadow","node","error","loadModel","setTimeout","gsap","registerPlugin","ScrollTrigger","create","trigger","start","end","scrub","onUpdate","self","onLeaveBack","init"],"sourceRoot":""}